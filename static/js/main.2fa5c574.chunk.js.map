{"version":3,"sources":["workers/filterPointCloud.worker.ts","webpack:///./src/workers/filterPointCloud.worker.ts?f712","internationalization/i18n.ts","serviceWorker.js","views/types/ColorGradient.ts","views/types/SchemeModelType.ts","store/ui/sections/pointCloud/pointCloudSection.ts","store/ui/sections/scheme/schemeSection.ts","store/ui/sections/uiSectionsReducer.ts","store/ui/panels/pointCloud/pointCloudPanel.ts","store/ui/panels/scheme/schemePanel.ts","store/ui/panels/models/schemeModelsPanel.ts","views/types/CameraMode.ts","store/ui/panels/uiPanelsReducer.ts","store/ui/camera/cameraReducer.ts","store/ui/scene/sceneReducer.ts","store/ui/uiReducer.ts","store/entity/schemes/schemesReducer.ts","store/entity/entityReducer.ts","store/domain/scheme/activeSchemeReducer.ts","store/domain/domainReducer.ts","store/auth/authReducer.ts","utilities/saga/selectState.ts","logic/scheme/disposeSchemeUI.ts","store/middleware/saga/domain/scheme/schemeDisposeSaga.ts","utilities/string/jsonEscape.ts","logic/scheme/parseSchemeFileAsync.ts","utilities/math/randomIntFromInterval.ts","store/middleware/saga/domain/scheme/schemeLoadFileSaga.ts","services/eventBus/EventBus.ts","infrastructure/ioc/ServiceTypes.ts","services/version/VersionService.ts","services/eventBus/EventTypes.ts","services/keyboard/Keyboard.ts","views/types/RGBA.ts","services/colorGradient/ColorLabel.ts","services/colorGradient/gradients/Graidient.ts","services/colorGradient/gradients/GradientDefault.ts","services/colorGradient/gradients/GradientIron.ts","services/colorGradient/gradients/GradientAeroset.ts","services/colorGradient/GradientService.ts","services/infrastructure/InfrastructureService.ts","infrastructure/pounchDB/pounchDB.ts","services/replicationService/ReplicationService.ts","infrastructure/ioc/IoC.ts","data/scheme/SchemeMode.ts","logic/scheme/construction/node/constructGeometryNode.ts","logic/scheme/construction/node/constructTopologyNode.ts","logic/scheme/construction/rib/constructTopologyRib.ts","logic/scheme/construction/rib/constructGeometryRib.ts","logic/scheme/buildSchemeUIAsync.ts","utilities/async/delay.ts","logic/scheme/construction/setCameraTargetToCenterOfMeshes.ts","views/components/layout/scene/code/setupZoomForPerspectiveCamera.ts","store/middleware/saga/domain/scheme/drawSchemeUISaga.ts","store/middleware/saga/domain/scheme/constructSchemeUISaga.ts","store/middleware/saga/domain/scheme/changeSchemeUISaga.ts","store/middleware/saga/domain/scheme/schemeModeChangedSaga.ts","logic/scheme/scaleScheme.ts","store/middleware/saga/domain/scheme/changeScaleFactorSaga.ts","store/middleware/saga/domain/schemeSaga.ts","store/middleware/saga/domain/engine/changeCameraModeSaga.ts","store/middleware/saga/domain/engineSaga.ts","data/auth/UserStatus.ts","store/middleware/saga/domain/domainSaga.ts","data/auth/AeroUser.ts","logic/auth/authStateManager.ts","infrastructure/keycloak/keyCloakAdminClient.ts","config/connection.ts","logic/auth/setUpTokenRefresh.ts","logic/auth/authorizeUserAsync.ts","store/middleware/saga/auth/signInSaga.ts","store/middleware/saga/auth/authSaga.ts","store/middleware/saga/rootSaga.ts","store/store.ts","store/rootReducer.ts","store/loadState.ts","globalStyle.ts","views/components/theme/defaultAppThemeValues.ts","views/components/theme/theme.ts","views/components/theme/createAppTheme.ts","views/components/theme/ThemeColors.ts","views/components/theme/index.tsx","views/components/theme/themeAccessors.ts","views/components/app/styles.ts","views/components/layout/headerPanel/style.ts","views/components/shared/icons.ts","views/components/layout/headerPanel/index.tsx","views/components/layout/sections/pointCloud/index.tsx","views/components/layout/instrumentalPanel/style.ts","views/components/shared/style.ts","views/components/layout/sections/scheme/index.tsx","views/components/layout/sections/models/index.tsx","views/components/layout/instrumentalPanel/index.tsx","utilities/dom/isCanvasSupported.ts","views/components/layout/scene/style.ts","views/components/layout/pointCloudSystem/style.ts","views/components/layout/pointCloudSystem/code/setupPointCloud.ts","views/components/layout/pointCloudSystem/index.tsx","views/components/layout/shared/panels/style.ts","views/components/layout/panels/pointCloud/style.ts","views/components/layout/shared/panels/PointCloudPanelFilters.tsx","views/components/layout/panels/pointCloud/index.tsx","views/components/layout/shared/panels/SetupSchemeMode.tsx","views/components/layout/shared/panels/SetupCameraMode.tsx","views/components/layout/shared/panels/SetupAxis.tsx","views/components/layout/panels/scheme/index.tsx","views/components/layout/shared/style.ts","views/components/layout/shared/panels/SetupSchemeModels.tsx","views/components/layout/shared/panels/SetupGradient.tsx","views/components/layout/shared/panels/ColorGradientView.tsx","views/components/layout/panels/models/index.tsx","views/components/layout/panels/index.tsx","views/components/layout/scene/code/setupScene.ts","utilities/color/hexToRgb.ts","views/components/layout/scene/code/setupCamera.ts","views/components/layout/scene/code/setupLight.ts","views/components/layout/scene/code/setupZoom.ts","views/components/layout/mobile/drawer/bottom/code/BottomDrawerContentType.ts","views/components/layout/scheme/index.tsx","views/components/layout/scene/code/constructAxis.ts","views/components/layout/topLayer/axisSubLayer/index.tsx","views/components/layout/topLayer/index.tsx","views/components/layout/scene/code/setupResources.ts","views/components/layout/scene/index.tsx","views/components/layout/mobile/headerPanel/style.ts","views/components/layout/mobile/drawer/left/pointCloudMenuItem/index.tsx","views/components/layout/mobile/drawer/left/style.ts","views/components/version/index.tsx","views/components/layout/mobile/drawer/left/schemeMenuItem/index.tsx","views/components/layout/mobile/drawer/left/index.tsx","views/components/layout/mobile/drawer/bottom/style.ts","views/components/layout/mobile/panels/pointCloud/index.tsx","views/components/layout/mobile/panels/schemeSettings/index.tsx","views/components/layout/mobile/drawer/bottom/index.tsx","views/components/layout/mobile/headerPanel/index.tsx","views/components/snackbar/style.ts","views/components/snackbar/index.tsx","assets/images/mining.jpg","assets/images/logo-en.png","views/components/auth/style.ts","views/components/auth/signIn/style.ts","views/components/auth/signIn/index.tsx","views/components/auth/index.tsx","views/components/app/index.tsx","index.tsx"],"names":["module","exports","wrap","__esModule","Worker","i18n","use","Backend","initReactI18next","init","fallbackLng","initImmediate","lng","debug","interpolation","escapeValue","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ColorGradient","SchemeModelType","slice","createSlice","name","initialState","isActive","pointsCloudFile","reducers","pointCloudLoadFile","action","produce","draft","payload","actions","reducer","schemeFile","schemeFileLoadError","schemeLoadFile","uiSectionsReducer","combineReducers","pointCloud","pointCloudSectionReducer","activeScheme","schemeSectionReducer","filterXFromLimit","filterXToLimit","filterYFromLimit","filterYToLimit","filterZFromLimit","filterZToLimit","changeXFromLimit","changeXToLimit","changeYFromLimit","changeYToLimit","changeZFromLimit","changeZToLimit","showPointCloudPanel","closePointCloudPanel","pointCloudPanelActivitySelector","ui","panels","pointCloudPanelSelector","pointCloudPanel","showSchemePanel","closeSchemePanel","schemePanelActivitySelector","CameraMode","defaultState","gradient","Default","activeModel","None","showSchemeModelsPanel","colorGradientChanged","setActiveModel","closeSchemeModelsPanel","schemeModelsPanelActivitySelector","schemeModels","schemeModelsColorGradientSelector","schemeActiveModelSelector","uiPanelReducer","pointCloudPanelReducer","schemePanelReducer","schemeModelsReducer","target","x","y","z","mode","Orthographic","cameraTargetChanged","cameraModeChanged","cameraTargetSelector","camera","cameraTargetModeSelector","isTargetAxisVisible","setTargetAxisVisibility","targetAxisVisibilitySelector","scene","uiReducer","sections","uiPanelsReducer","cameraReducer","sceneReducer","schemesAdapter","createEntityAdapter","selectId","model","id","sortComparer","a","b","getInitialState","loading","schemesAddOne","addOne","schemesAddMany","addMany","schemesUpdate","updateOne","schemesRemove","removeOne","schemesByIdSelector","getSelectors","selectById","entityReducer","schemes","schemesReducer","activeSchemeId","activeSchemeUI","activeSchemeMode","activeScaleFactor","isSchemeLoading","setActiveScaleFactor","activeSchemeIdChanged","activeSchemeUIChanged","activeSchemeUIUpdated","schemeModeChanged","activeSchemeModeChangedSelector","createSelector","schemeId","store","getState","entity","domain","domainReducer","activeSchemeReducer","user","isAuthorizing","organization","roles","meta","modules","familiarUsers","setAuthUser","setIsAuthorization","setOrganization","setRoles","setMeta","setModules","setFamiliarUsers","deleteFamiliarUser","index","findIndex","addFamiliarUser","push","updateFamiliarUser","setUserSchemes","deleteUserScheme","addUserScheme","updateUserScheme","isAuthenticatedSelector","auth","signInAction","createAction","selectState","selector","select","disposeSchemeUI","schemeUI","nodes","mesh","dispose","ribs","parent","schemeDisposeSaga","jsonEscape","str","replace","parseSchemeFileAsync","file","Promise","resolve","reject","reader","FileReader","onload","min","max","fileText","result","jsonText","scheme","JSON","parse","arr","Array","node","param","Math","floor","random","nodeId","value","onerror","blob","readAsText","schemeLoadFileSaga","call","put","EventBus","injectable","eventEmitter","EventEmitter","event","this","listeners","map","f","includes","addListener","removeListener","emit","INFRASTRUCTURE_SERVICE","Symbol","for","EVENT_BUS_SERVICE","VERSION_SERVICE","KEYBOARD_SERVICE","COLOR_GRADIENT_SERVICE","REPLICATION_SERVICE","VersionService","Initialize","year","moment","currentMonth","month","_version","build","SHOW_SNACKBAR_EVENT","SHOW_NEW_VERSION_EVENT","CLOSE_DRAWER_EVENT","OPEN_BOTTOM_DRAWER_EVENT","KEY_PRESSED_EVENT","KEY_UNPRESSED_EVENT","CANVAS_MOUSE_CLICK_EVENT","Keyboard","initialize","document","addEventListener","handleKeyDown","handleKeyUp","IoC","get","send","key","RGBA","red","green","blue","alpha","Red","Green","Blue","Alpha","CSSProperty","ColorLabel","position","color","Gradient","_Name","_BelowLimitColor","_AboveLimitColor","_Labels","GradientDefault","GradientIron","GradientAeroset","ColorGradientService","gradientType","minParameter","maxParameter","gradientTypes","MinParameter","MaxParameter","setGradient","setMinParameter","setMaxParameter","find","Name","parameter","parameterPosition","BelowLimitColor","AboveLimitColor","previousLabel","Labels","sort","label1","label2","label","nextLabel","round","direction","backgroundProperty","InfrastructureService","_engine","_scene","_camera","_light","_resources","PouchDB","require","plugin","adapter","ReplicationService","isIndividual","metaDatabase","schemeDatabase","metaDBConnectionString","token","CloseAsync","jwtauth","schemeConnectionString","close","p1","p2","all","Container","autoBindInjectable","defaultScope","skipBaseClassChecks","bind","to","inSingletonScope","SchemeMode","constructGeometryNode","materialBase","sphereBase","clone","visibility","constructTopologyNode","freezeNormals","constructTopologyRib","nodeVector","linkedNodeVector","tube","Mesh","CreateTube","constructGeometryRib","vectorStart","vectorEnd","ribLength","Vector3","Distance","ribCuboid","MeshBuilder","CreateBox","width","height","depth","mid","Lerp","vectorBetweenPoints","subtract","normalize","vectorBetweenPointsProjectionXZ","axisX","axisY","xzRotateAngle","acos","Dot","rotateAxisXZ","Cross","inclineRibCuboidAngle","inclineRibCuboidAxis","rotateXZAngle","Quaternion","RotationAxis","inclineRibCuboid","angleDegrees","Tools","ToDegrees","abs","rotationQuaternion","multiply","buildSchemeUIAsync","schemeMode","nodeMeshes","ribMeshes","pointDrawingLineComplete","Topology","RibGeometry","constructNode","constructRib","infrastructureService","toString","nodeMaterial","resources","materials","nodeBaseMesh","baseMeshes","nodeMesh","setParent","xyScale","point","nodesIdToDrawingLine","linkedNodes","filter","linkedRibsMetadata","nodePoint","length","linkedNodeId","linkedNode","linkedNodePoint","ribMaterial","rib","node1Id","node2Id","node1Point","node2Point","nodeMetadata","ribData","r","data","metadata","delay","ms","setTimeout","setCameraTargetToCenterOfMeshes","parentMesh","radius","childMeshes","getChildMeshes","getBoundingInfo","boundingBox","minimumWorld","maximumWorld","i","meshMin","meshMax","Minimize","Maximize","boundingInfo","BoundingInfo","setBoundingInfo","showBoundingBox","center","setTarget","setupZoomForPerspectiveCamera","centralVector","inertia","upperBetaLimit","PI","angularSensibilityX","angularSensibilityY","updateHitPlane","inertialPanning","Zero","prvScreenPos","Vector2","rotateFn","offsetX","pointerX","offsetY","pointerY","copyFromFloats","alphaOffsetDelta","betaOffsetDelta","inertialAlphaOffset","inertialBetaOffset","changeInertialAlphaBetaFromOffsets","rotating","removeObservers","onPointerObservable","removeCallback","add","p","button","PointerEventTypes","POINTERMOVE","POINTERDOWN","e","POINTERUP","delta","ref","lowerRadiusLimit","upperRadiusLimit","inertiaComp","inertialRadiusOffset","ratio","offset","ray","createPickingRay","Matrix","Identity","distance","intersectsPlane","hitplane","origin","addInPlace","scaleInPlace","getPosition","scale","zooming","preventDefault","wheelDelta","deltaY","detail","wheelPrecision","zoomWheel","POINTERWHEEL","onBeforeRenderObservable","vec","Epsilon","zeroIfClose","getEngine","getRenderingCanvas","Plane","FromPositionAndNormal","drawSchemeUISaga","cameraMode","radiusCamera","cameraTarget","constructSchemeUISaga","eventBus","message","i18next","t","alertType","changeSchemeUISaga","schemeState","activeSchemeID","schemeModeChangedSaga","scaleScheme","scaleFactor","schemeCenter","xScale","yScale","zScale","ribMesh","sx","sy","sz","_sx","_sy","_sz","pivotPoint","node1scaledPoint","node2scaledPoint","unfreezeNormals","computeWorldMatrix","changeScaleFactorSaga","centerOfScheme","updatedSchemeUI","schemeSaga","takeLatest","takeEvery","changeCameraModeSaga","Perspective","Camera","PERSPECTIVE_CAMERA","ORTHOGRAPHIC_CAMERA","engineSaga","UserStatus","domainSaga","AeroUser","undefined","refreshTokenIntervalId","status","userInfo","Unknown","SignedOut","SignedIn","clearInterval","userBehaviorObserver","replicationService","dispatch","userBehaviorSubject","BehaviorSubject","subscribe","kcAdminClient","KcAdminClient","baseUrl","realmName","requestConfig","paramsSerializer","params","Querystring","stringify","setUpTokenRefresh","login","password","setInterval","authorizeUserAsync","username","grantType","clientId","accessToken","decodedToken","jwt_decode","userId","sub","users","findOne","next","signInSaga","credentials","authSaga","rootSaga","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","thunk","serializableCheck","immutableCheck","configureStore","authReducer","firestore","firestoreReducer","preloadedState","devTools","process","run","useAppDispatch","useDispatch","GlobalStyle","createGlobalStyle","defaultAppThemeValues","app","colors","main","white","lightGray","lightGraySecond","mediumGray","darkGray","lightBlue","mediumBlue","darkBlue","lightGreen","palette","black","gray","blue1","dark","light","medium","blue2","blue3","orange","purple1","purple2","yellow","font","sizes","header","headerMobile","instrumentalPanel","footer","lang","options","ThemeColors","theme","createMuiTheme","Theme","children","StylesProvider","injectFirst","getTheme","keys","props","path","themeColor","appSizes","Area","styled","breakpoints","up","down","AuthContainer","section","isAuthenticated","AppMainSection","HeaderPanelContainer","div","AppOpenPointCloudFiltersIcon","DialpadIcon","AppSettingsIcon","TuneIcon","AppLoadSchemeFile","DescriptionIcon","AppClearPointCloudIcon","BlurOffIcon","AppCloseIcon","CloseIcon","AppArrowCloseLeft","ChevronLeftIcon","AppPointCloudIcon","BlurOnIcon","AppSchemeIcon","AppsIcon","AppExpandLess","ExpandLess","AppExpandMoreIcon","ExpandMore","AppModelsIcon","InvertColorsIcon","AppPublishIcon","PublishIcon","AppListItemIcon","ListItemIcon","AppMenuIcon","MenuIcon","AppMoreVertIcon","MoreVertIcon","AppUserAccountIcon","AccountCircleIcon","withTheme","_","useTranslation","React","useState","anchorEl","setAnchorEl","menuIsOpen","handleMenuClose","Tooltip","title","IconButton","size","onClick","currentTarget","style","marginLeft","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","type","onChange","files","display","htmlFor","component","verticalAlign","Panel","AppDivider","Divider","AppDividerLight","AppDividerBold","modelSectionIsActive","useSelector","orientation","Fragment","isCanvasSupported","elem","createElement","getContext","Canvas","canvas","PointCloudContainer","setUpPointCloud","cloudPointFilters","pointsCloudSystem","PointsCloudSystem","updatable","filterPointCloudAsync","pointCloudData","constructParticle","particle","vector","Color4","g","pointsLength","addPoints","buildMeshAsync","dataSelector","pointCloudFilters","PointCloud","forwardRef","useImperativeHandle","engineData","setState","cloudPointFile","loadPointCloud","withStyles","PanelContainer","PanelHeaderContainer","strong","PanelMobileContainer","PanelHeader","PanelHeaderText","PanelHeaderTypography","Typography","PanelBodyContainer","FormControlStyled","FormControl","FormControlLabelStyled","FormControlLabel","SelectStyled","Select","PointCloudPanelLineContainer","TextField","step","isNumeric","InputLabelProps","shrink","inputProps","variant","bounds","handle","defaultPosition","grid","float","displayEmpty","FormHelperText","GreenCheckbox","root","checked","Checkbox","axisIsVisible","control","OnCanvasContainer","OnCanvasContainerWithEvents","Pressure","Air","Aeroset","Iron","linearGradientCss","getGradientAsCSSProperty","background","marginTop","Panels","Hidden","smDown","engine","bgColor","Scene","hex","m","exec","parseInt","hexToRgb","resizeEngine","diff","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","setAttribute","resize","clearColor","runRenderLoop","render","onresize","ArcRotateCamera","prototype","_getViewMatrix","cosa","cos","sina","sin","cosb","beta","sinb","_getTargetPosition","addToRef","_newPosition","getScene","collisionsEnabled","checkCollisions","_collider","collisionRadius","subtractToRef","_collisionVelocity","_collisionTriggered","collisionCoordinator","getNewPosition","_onCollisionPositionChange","uniqueId","copyFrom","upVector","allowUpsideDown","negate","LookAtLHToRef","_viewMatrix","targetScreenOffset","setupCamera","setPosition","panningSensibility","orthoLeft","orthoRight","plane","pickOrigin","orthoTop","orthoBottom","inputs","addMouseWheel","attachControl","pinchPrecision","minZ","maxZ","isPanning","onPointerDown","evt","ctrlKey","pickResult","pick","pickedMesh","normal","pickedPoint","detachControl","onPointerUp","identity","onPointerMove","subtractInPlace","PointLight","registerBeforeRender","totalZoom","zoomTarget","setupZoom","eventData","deltaValue","zoom2DView","CanvasZoom","Unproject","getRenderWidth","getRenderHeight","getWorldMatrix","getViewMatrix","getProjectionMatrix","BottomDrawerContentType","totalX","totalY","aspectRatio","AppScheme","constructAxis","sceneBase","makeTextPlane","text","dynamicTexture","DynamicTexture","hasAlpha","drawText","CreatePlane","standardMaterial","StandardMaterial","specularColor","Color3","diffuseTexture","material","backFaceCulling","CreateLines","xChar","yChar","axisZ","zChar","axisMeshes","isKeyPressed","useEffect","OnKeyPressed","OnKeyUnPressed","canvasClickHandle","unsubscribe","mouseEvent","mousePosition","screenX","screenY","cursor","activeCamera","changeCameraTarget","TopLayer","setupResources","meshTopology","meshGeometry","CreateSphere","diameter","ribGradientMaterial","GradientMaterial","topologyRibBaseMesh","geometryRibBaseMesh","pointCloudEl","useRef","schemeEl","panelsEl","topLayerEl","canvasEl","current","onclick","alert","Engine","setupScene","setupLight","HeaderMobilePanelContainer","subMenuIsOpen","openPanelPointCloudFiltersClickHandle","contentType","PointCloudFilters","btnColor","ListItem","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","paddingLeft","DrawerContainer","DrawerHeader","spacing","DrawerHeaderTitle","Version","isDark","GetVersion","openPanelSchemeSettingsClickHandle","SchemeSettings","isOpen","handleDrawerClose","Drawer","anchor","aria-labelledby","bottom","left","DrawerBottomContainer","DrawerBottomHeader","MobilePanelContainer","currentType","stateType","valueOf","visiblePanel","contentChangedHandler","events","content","marginRight","drawerIsOpen","onCloseDrawerEvent","AppBar","Toolbar","aria-label","flexGrow","SnackbarWrapper","isVersionSnackbar","snackbarState","setSnackbarState","snackbarEventHandler","showNewVersionEventHandler","callback","updateVersionAction","Button","reload","Snackbar","alignContent","reason","autoHideDuration","Alert","severity","closeText","AuthFormContainer","AuthBackground","bgImage","LogoContainer","logoEn","SignInContainer","SignInFormContainer","SubmitButton","loginRef","passwordRef","noValidate","no","inputRef","margin","autoComplete","autoFocus","top","Grid","container","alignItems","item","xs","mdUp","renderRefreshUI","ReactDOM","CssBaseline","fallback","getElementById","errorMsg","url","lineNumber","URL","href","fetch","headers","response","indexOf","ready","unregister","checkValidServiceWorker","initWorkboxRefresh"],"mappings":"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","file":"static/js/main.2fa5c574.chunk.js","sourcesContent":["module.exports = require('comlink').wrap(require(\"!worker-loader?{}!C:/Users/nsaytarov/WebstormProjects/mi-new-aeroset/node_modules/comlink-loader/dist/comlink-worker-loader.js!C:\\\\Users\\\\nsaytarov\\\\WebstormProjects\\\\mi-new-aeroset\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js??ref--5-oneOf-0-1!C:\\\\Users\\\\nsaytarov\\\\WebstormProjects\\\\mi-new-aeroset\\\\src\\\\workers\\\\filterPointCloud.worker.ts\")());module.exports.__esModule = true;","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"ae4bf8e8e2e219d0a726.worker.js\");\n};","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport Backend from 'i18next-http-backend';\r\n\r\ni18n\r\n    .use(Backend)\r\n    .use(initReactI18next)\r\n    .init({\r\n        fallbackLng: 'en',\r\n        initImmediate : false,\r\n        lng: \"ru\",\r\n        debug: true,\r\n        interpolation: {\r\n            escapeValue: false,\r\n        }\r\n    });\r\n\r\nexport default i18n;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/custom-sw.js`;\n      console.log(swUrl)\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export enum ColorGradient {\r\n    Default,\r\n    Iron,\r\n    Aeroset,\r\n}","export enum SchemeModelType {\r\n    Air,\r\n    Pressure,\r\n    None\r\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {SectionState} from \"../SectionState\";\r\nimport produce from \"immer\";\r\n\r\nexport interface PointCloudSectionState extends SectionState {\r\n    pointsCloudFile: File | null;\r\n}\r\n\r\nconst defaultState: PointCloudSectionState = {\r\n    isActive: true,\r\n    pointsCloudFile: null,\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: \"pointCloudSectionReducer\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        pointCloudLoadFile: (state: PointCloudSectionState, action: PayloadAction<File>) =>\r\n            produce(state, (draft) => {\r\n                draft.pointsCloudFile = action.payload\r\n            })\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {pointCloudLoadFile} = actions;\r\nexport default reducer;","import {createSlice, PayloadAction, Selector} from \"@reduxjs/toolkit\";\r\nimport {SectionState} from \"../SectionState\";\r\nimport produce from \"immer\";\r\nimport {ApplicationState} from \"../../../store\";\r\n\r\nexport interface SchemeSectionState extends SectionState {\r\n    schemeFile: File | null;\r\n    schemeFileLoadError: string | null;\r\n}\r\n\r\nconst defaultState: SchemeSectionState = {\r\n    isActive: true,\r\n    schemeFile: null,\r\n    schemeFileLoadError: null\r\n}\r\n\r\nconst slice = createSlice({\r\n        name: \"schemeSectionReducer\",\r\n        initialState: defaultState,\r\n        reducers: {\r\n            schemeLoadFile: (state: SchemeSectionState, action: PayloadAction<File | null>) =>\r\n                produce(state, (draft) => {\r\n                    //ignored\r\n                }),\r\n            schemeFileLoadError: (state: SchemeSectionState, action: PayloadAction<string | null>) =>\r\n                produce(state, (draft) => {\r\n                    draft.schemeFileLoadError = action.payload\r\n                })\r\n        }\r\n    })\r\n;\r\n\r\nexport const schemeLoadFromFileSelector: Selector<ApplicationState, File | null> =\r\n    state => state.ui.sections.activeScheme.schemeFile;\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {schemeLoadFile, schemeFileLoadError} = actions;\r\nexport default reducer;","import {combineReducers} from \"redux\";\r\nimport {default as pointCloudSectionReducer} from \"./pointCloud/pointCloudSection\";\r\nimport {default as schemeSectionReducer} from \"./scheme/schemeSection\";\r\n\r\nconst uiSectionsReducer = () => {\r\n    return combineReducers({\r\n        pointCloud: pointCloudSectionReducer,\r\n        activeScheme: schemeSectionReducer\r\n    })\r\n}\r\n\r\nexport default uiSectionsReducer","import {createSlice, Selector} from \"@reduxjs/toolkit\";\r\nimport {ApplicationState} from \"../../../store\";\r\nimport produce from \"immer\";\r\nimport {PanelState} from \"../PanelState\";\r\n\r\nexport interface PointCloudPanelState extends PanelState {\r\n    filterXFromLimit: number,\r\n    filterXToLimit: number,\r\n    filterYFromLimit: number,\r\n    filterYToLimit: number,\r\n    filterZFromLimit: number,\r\n    filterZToLimit: number,\r\n};\r\n\r\nconst defaultState: PointCloudPanelState = {\r\n    isActive: false,\r\n    filterXFromLimit: -100,\r\n    filterXToLimit: 100,\r\n    filterYFromLimit: -100,\r\n    filterYToLimit: 100,\r\n    filterZFromLimit: -100,\r\n    filterZToLimit: 100\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"pointCloudPanelReducer\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        changeXFromLimit: (state: PointCloudPanelState, action) =>\r\n            produce(state, (draft) => {\r\n                    draft.filterXFromLimit = action.payload\r\n                }\r\n            ),\r\n        changeXToLimit: (state: PointCloudPanelState, action) =>\r\n            produce(state, (draft) => {\r\n                draft.filterXToLimit = action.payload\r\n            }),\r\n        changeYFromLimit: (state: PointCloudPanelState, action) =>\r\n            produce(state, (draft) => {\r\n                draft.filterYFromLimit = action.payload\r\n            }),\r\n        changeYToLimit: (state: PointCloudPanelState, action) =>\r\n            produce(state, (draft) => {\r\n                draft.filterYToLimit = action.payload\r\n            }),\r\n        changeZFromLimit: (state: PointCloudPanelState, action) =>\r\n            produce(state, (draft) => {\r\n                draft.filterZFromLimit = action.payload\r\n            }),\r\n        changeZToLimit: (state: PointCloudPanelState, action) =>\r\n            produce(state, (draft) => {\r\n                draft.filterZToLimit = action.payload\r\n            }),\r\n        showPointCloudPanel: (state: PointCloudPanelState) =>\r\n            produce(state, (draft) => {\r\n                draft.isActive = true\r\n            }),\r\n        closePointCloudPanel: (state: PointCloudPanelState) =>\r\n            produce(state, (draft) => {\r\n                draft.isActive = false\r\n            })\r\n    }\r\n});\r\n\r\nexport const pointCloudPanelActivitySelector: Selector<ApplicationState, boolean> =\r\n    state => state.ui.panels.pointCloud.isActive;\r\n\r\nexport const pointCloudPanelSelector: Selector<ApplicationState, PointCloudPanelState> =\r\n    state => state.ui.panels.pointCloud;\r\n\r\nconst {actions, reducer} = slice\r\nexport const {\r\n    changeXFromLimit,\r\n    changeXToLimit,\r\n    changeYFromLimit,\r\n    changeYToLimit,\r\n    changeZFromLimit,\r\n    changeZToLimit,\r\n    showPointCloudPanel,\r\n    closePointCloudPanel\r\n} = actions\r\nconst pointCloudPanel = reducer\r\nexport default pointCloudPanel","import {createSlice, Selector} from \"@reduxjs/toolkit\";\r\nimport produce from \"immer\";\r\nimport {ApplicationState} from \"../../../store\";\r\nimport {PanelState} from \"../PanelState\";\r\n\r\nexport interface SchemePanelState extends PanelState {\r\n    schemeFile: File | null;\r\n}\r\n\r\nconst defaultState: SchemePanelState = {\r\n    isActive: false,\r\n    schemeFile: null,\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: \"schemePanelReducer\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        showSchemePanel: (state: SchemePanelState) =>\r\n            produce(state, (draft) => {\r\n                draft.isActive = true\r\n            }),\r\n        closeSchemePanel: (state: SchemePanelState) =>\r\n            produce(state, (draft) => {\r\n                draft.isActive = false\r\n            })\r\n\r\n    }\r\n});\r\n\r\nexport const schemePanelActivitySelector: Selector<ApplicationState, boolean> =\r\n    state => state.ui.panels.activeScheme.isActive;\r\n\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {showSchemePanel, closeSchemePanel} = actions;\r\nexport default reducer;","import {createSlice, PayloadAction, Selector} from \"@reduxjs/toolkit\";\r\nimport produce from \"immer\";\r\nimport {ApplicationState} from \"../../../store\";\r\nimport {PanelState} from \"../PanelState\";\r\nimport {ColorGradient} from \"../../../../views/types/ColorGradient\";\r\nimport {PointCloudPanelState} from \"../pointCloud/pointCloudPanel\";\r\nimport {SchemeModelType} from \"../../../../views/types/SchemeModelType\";\r\n\r\nexport interface SchemeModelsState extends PanelState {\r\n    gradient: ColorGradient,\r\n    activeModel: SchemeModelType\r\n}\r\n\r\nconst defaultState: SchemeModelsState = {\r\n    isActive: false,\r\n    gradient: ColorGradient.Default,\r\n    activeModel: SchemeModelType.None\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: \"schemeModelsReducer\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        showSchemeModelsPanel: (state: SchemeModelsState) =>\r\n            produce(state, (draft) => {\r\n                draft.isActive = true\r\n            }),\r\n        colorGradientChanged: (state: SchemeModelsState, action: PayloadAction<ColorGradient> ) =>\r\n            produce(state, (draft) => {\r\n                draft.gradient = action.payload\r\n            }),\r\n        setActiveModel: (state: SchemeModelsState, action: PayloadAction<SchemeModelType>) =>\r\n            produce(state, (draft) => {\r\n                draft.activeModel = action.payload\r\n            }),\r\n        closeSchemeModelsPanel: (state: SchemeModelsState) =>\r\n            produce(state, (draft) => {\r\n                draft.isActive = false\r\n            })\r\n\r\n    }\r\n});\r\n\r\nexport const schemeModelsPanelActivitySelector: Selector<ApplicationState, boolean> =\r\n    state => state.ui.panels.schemeModels.isActive;\r\n\r\nexport const schemeModelsColorGradientSelector: Selector<ApplicationState, ColorGradient> =\r\n    state => state.ui.panels.schemeModels.gradient;\r\n\r\nexport const schemeActiveModelSelector: Selector<ApplicationState, SchemeModelType> =\r\n    state => state.ui.panels.schemeModels.activeModel;\r\n\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {\r\n    showSchemeModelsPanel,\r\n    closeSchemeModelsPanel,\r\n    colorGradientChanged,\r\n    setActiveModel\r\n} = actions;\r\nexport default reducer;","export enum CameraMode {\r\n    Perspective ,\r\n    Orthographic\r\n}","import {combineReducers} from \"redux\";\r\nimport pointCloudPanelReducer from \"./pointCloud/pointCloudPanel\";\r\nimport schemePanelReducer from \"./scheme/schemePanel\";\r\nimport schemeModelsReducer from \"./models/schemeModelsPanel\";\r\n\r\nconst uiPanelReducer = () => {\r\n    return combineReducers({\r\n        pointCloud: pointCloudPanelReducer,\r\n        activeScheme: schemePanelReducer,\r\n        schemeModels: schemeModelsReducer\r\n    })\r\n}\r\n\r\nexport default uiPanelReducer","import {createSlice, PayloadAction, Selector} from \"@reduxjs/toolkit\";\r\nimport {ApplicationState} from \"../../store\";\r\nimport produce from \"immer\";\r\nimport {CameraMode} from \"../../../views/types/CameraMode\";\r\nimport {Vector3D} from \"../../../data/base/Vector3D\";\r\n\r\nexport interface CameraState {\r\n    target: Vector3D\r\n    mode: CameraMode\r\n}\r\n\r\nconst defaultState: CameraState = {\r\n    target: {x: 0, y: 0, z: 0},\r\n    mode: CameraMode.Orthographic\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: \"cameraReducer\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        cameraTargetChanged: (state: CameraState, action: PayloadAction<Vector3D>) =>\r\n            produce(state, (draft) => {\r\n                draft.target = action.payload;\r\n            }),\r\n        cameraModeChanged: (state: CameraState, action: PayloadAction<CameraMode>) =>\r\n            produce(state, (draft) => {\r\n                draft.mode = action.payload;\r\n            })\r\n    }\r\n});\r\n\r\n\r\nexport const cameraTargetSelector: Selector<ApplicationState, Vector3D> =\r\n    state => state.ui.camera.target;\r\n\r\nexport const cameraTargetModeSelector: Selector<ApplicationState, CameraMode> =\r\n    state => state.ui.camera.mode;\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {cameraTargetChanged, cameraModeChanged} = actions;\r\nexport default reducer;","import {createSlice, PayloadAction, Selector} from \"@reduxjs/toolkit\";\r\nimport {ApplicationState} from \"../../store\";\r\nimport produce from \"immer\";\r\nimport {Vector3} from \"@babylonjs/core\";\r\nimport {CameraMode} from \"../../../views/types/CameraMode\";\r\n\r\nexport interface SceneState {\r\n    isTargetAxisVisible: boolean\r\n}\r\n\r\nconst defaultState: SceneState = {\r\n    isTargetAxisVisible: false\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: \"sceneReducer\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        setTargetAxisVisibility: (state: SceneState, action: PayloadAction<boolean>) =>\r\n            produce(state, (draft) => {\r\n                draft.isTargetAxisVisible = action.payload\r\n            }),\r\n    }\r\n});\r\n\r\n\r\nexport const targetAxisVisibilitySelector: Selector<ApplicationState, boolean> =\r\n    state => state.ui.scene.isTargetAxisVisible;\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {setTargetAxisVisibility} = actions;\r\nexport default reducer;","import {combineReducers} from \"redux\";\r\nimport uiSectionsReducer from \"./sections/uiSectionsReducer\";\r\nimport uiPanelsReducer from \"./panels/uiPanelsReducer\";\r\nimport cameraReducer from \"./camera/cameraReducer\";\r\nimport sceneReducer from \"./scene/sceneReducer\";\r\n\r\nconst uiReducer = () => {\r\n    return combineReducers({\r\n            sections: uiSectionsReducer(),\r\n            panels: uiPanelsReducer(),\r\n            camera: cameraReducer,\r\n            scene: sceneReducer\r\n        }\r\n    )\r\n}\r\n\r\nexport default uiReducer","import {createEntityAdapter, createSlice} from \"@reduxjs/toolkit\";\r\nimport Scheme from \"../../../data/scheme/Scheme\";\r\n\r\nconst schemesAdapter = createEntityAdapter<Scheme>({\r\n    selectId: (model) => model.id,\r\n    sortComparer: (a, b) => -1\r\n})\r\n\r\nconst slice = createSlice({\r\n    name: \"schemesReducer\",\r\n    initialState: schemesAdapter.getInitialState({\r\n        loading: 'idle'\r\n    }),\r\n    reducers: {\r\n        schemesAddOne: schemesAdapter.addOne,\r\n        schemesAddMany: schemesAdapter.addMany,\r\n        schemesUpdate: schemesAdapter.updateOne,\r\n        schemesRemove: schemesAdapter.removeOne,\r\n    }\r\n});\r\n\r\nconst schemesSelectors = schemesAdapter.getSelectors();\r\nexport const schemesByIdSelector = schemesSelectors.selectById;\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {\r\n    schemesAddOne,\r\n    schemesAddMany,\r\n    schemesUpdate,\r\n    schemesRemove\r\n} = actions;\r\n\r\nexport default reducer;","import {combineReducers} from \"@reduxjs/toolkit\";\r\nimport schemesReducer from \"./schemes/schemesReducer\";\r\n\r\nconst entityReducer = () => {\r\n    return combineReducers({\r\n            schemes: schemesReducer,\r\n        }\r\n    )\r\n}\r\nexport default entityReducer","// @ts-nocheck\r\nimport {createSelector, createSlice, PayloadAction, Selector} from \"@reduxjs/toolkit\";\r\nimport {ApplicationState, store} from \"../../store\";\r\nimport produce from \"immer\";\r\nimport Scheme from \"../../../data/scheme/Scheme\";\r\nimport {SchemeMode} from \"../../../data/scheme/SchemeMode\";\r\nimport {airModelsById} from \"../../entity/models/air/airModelsReducer\";\r\nimport {SchemeUI} from \"../../../data/ui/SchemeUI\";\r\nimport {schemesByIdSelector} from \"../../entity/schemes/schemesReducer\";\r\nimport AirModel from \"../../../data/models/air/AirModel\";\r\nimport {Vector3D} from \"../../../data/base/Vector3D\";\r\n\r\nexport interface SchemeState {\r\n    activeSchemeId: string | null\r\n    activeSchemeHistoryId: string | null\r\n    activeSchemeUI: SchemeUI | null\r\n    activeSchemeMode: SchemeMode\r\n    activeScaleFactor: Vector3D\r\n    isSchemeLoading: boolean\r\n}\r\n\r\nconst defaultState: SchemeState = {\r\n    activeSchemeId: null,\r\n    activeSchemeUI: null,\r\n    activeSchemeMode: 0,\r\n    activeScaleFactor: {x: 1, y: 1, z: 1},\r\n    isSchemeLoading: false\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: \"activeSchemeReducer\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        setActiveScaleFactor: (state: SchemeState, action: PayloadAction<Vector3D>) =>\r\n            produce(state, (draft) => {\r\n                draft.activeScaleFactor = action.payload;\r\n            }),\r\n        activeSchemeIdChanged: (state: SchemeState, action: PayloadAction<string | null>) =>\r\n            produce(state, (draft) => {\r\n                draft.activeSchemeId = action.payload;\r\n            }),\r\n        activeSchemeUIChanged: (state: SchemeState, action: PayloadAction<SchemeUI | null>) =>\r\n            produce(state, (draft) => {\r\n                draft.activeSchemeUI = action.payload;\r\n            }),\r\n        activeSchemeUIUpdated: (state: SchemeState, action: PayloadAction<SchemeUI>) =>\r\n            produce(state, (draft) => {\r\n                draft.activeSchemeUI = action.payload;\r\n            }),\r\n        schemeModeChanged: (state: SchemeState, action: PayloadAction<SchemeMode>) => {\r\n            return produce(state, (draft) => {\r\n                draft.activeSchemeMode = action.payload;\r\n            });\r\n        },\r\n        isSchemeLoading: (state: SchemeState, action: PayloadAction<boolean>) =>\r\n            produce(state, (draft) => {\r\n                draft.isSchemeLoading = action.payload;\r\n            })\r\n    }\r\n});\r\n\r\nexport const activeSchemeChangedSelector = createSelector([],\r\n    (schemeId: string) => {\r\n        const state = store.getState().entity.schemes;\r\n        const scheme = schemesByIdSelector(state, schemeId);\r\n        return scheme;\r\n    });\r\n\r\nexport const activeSchemeUIChangedSelector: Selector<ApplicationState, SchemeUI | null> =\r\n    state => state.domain.activeScheme.activeSchemeUI;\r\n\r\nexport const activeScaleFactorChangedSelector: Selector<ApplicationState, Vector3D> =\r\n    state => state.domain.activeScheme.activeScaleFactor;\r\n\r\nexport const activeSchemeModeChangedSelector: Selector<ApplicationState, SchemeMode> =\r\n    state => state.domain.activeScheme.activeSchemeMode;\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {\r\n    activeSchemeIdChanged,\r\n    schemeModeChanged,\r\n    isSchemeLoading,\r\n    activeSchemeUIChanged,\r\n    setActiveScaleFactor,\r\n    activeSchemeUIUpdated\r\n} = actions;\r\nexport default reducer;","import {combineReducers} from \"@reduxjs/toolkit\";\r\nimport availableSchemesReducer from \"../entity/schemes/schemesReducer\";\r\nimport activeSchemeReducer from \"./scheme/activeSchemeReducer\";\r\n\r\nconst domainReducer = () => {\r\n    return combineReducers({\r\n            activeScheme: activeSchemeReducer,\r\n        }\r\n    )\r\n}\r\nexport default domainReducer;","import {createSlice, PayloadAction, Selector} from \"@reduxjs/toolkit\";\r\nimport AeroUser from \"../../data/auth/AeroUser\";\r\nimport produce from \"immer\";\r\nimport {ApplicationState} from \"../store\";\r\nimport {createAction} from '@reduxjs/toolkit'\r\nimport {UserRole} from \"../../data/auth/UserRole\";\r\nimport {UserOrganization} from \"../../data/auth/UserOrganization\";\r\nimport {UserScheme} from \"../../data/auth/UserScheme\";\r\nimport {UserMeta} from \"../../data/auth/UserMeta\";\r\nimport {UserModule} from \"../../data/auth/UserModule\";\r\nimport {FamiliarUser} from \"../../data/auth/FamiliarUser\";\r\n\r\nexport interface AuthState {\r\n    user: AeroUser | null,\r\n    isAuthorizing: boolean,\r\n    organization: UserOrganization | null,\r\n    meta: UserMeta | null\r\n    roles: UserRole[],\r\n    modules: UserModule[],\r\n    schemes: UserScheme[],\r\n    familiarUsers: FamiliarUser[]\r\n}\r\n\r\nconst defaultState: AuthState = {\r\n    user: null,\r\n    isAuthorizing: false,\r\n    organization: null,\r\n    schemes: [],\r\n    roles: [],\r\n    meta: null,\r\n    modules: [],\r\n    familiarUsers: []\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: \"authReducer\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        // @ts-ignore\r\n        setAuthUser: (state: AuthState, action: PayloadAction<AeroUser | null>) =>\r\n            produce(state, (draft) => {\r\n                draft.user = action.payload;\r\n            }),\r\n        // @ts-ignore\r\n        setIsAuthorization: (state: AuthState, action: PayloadAction<boolean>) =>\r\n            produce(state, (draft) => {\r\n                draft.isAuthorizing = action.payload;\r\n            }),\r\n        // @ts-ignore\r\n        setOrganization: (state: AuthState, action: PayloadAction<UserOrganization | null>) =>\r\n            produce(state, (draft) => {\r\n                draft.organization = action.payload;\r\n            }),\r\n        // @ts-ignore\r\n        setRoles: (state: AuthState, action: PayloadAction<UserRole[]>) =>\r\n            produce(state, (draft) => {\r\n                draft.roles = action.payload;\r\n            }),\r\n        // @ts-ignore\r\n        setMeta: (state: AuthState, action: PayloadAction<UserMeta>) =>\r\n            produce(state, (draft) => {\r\n                draft.meta = action.payload;\r\n            }),\r\n        // @ts-ignore\r\n        setModules: (state: AuthState, action: PayloadAction<UserModule[]>) =>\r\n            produce(state, (draft) => {\r\n                draft.modules = action.payload;\r\n            }),\r\n        // @ts-ignore\r\n        setFamiliarUsers: (state: AuthState, action: PayloadAction<FamiliarUser[]>) =>\r\n            produce(state, (draft) => {\r\n                draft.familiarUsers = action.payload;\r\n            }),\r\n        // @ts-ignore\r\n        deleteFamiliarUser: (state: AuthState, action: PayloadAction<FamiliarUser>) =>\r\n            produce(state, (draft) => {\r\n                const index = draft.familiarUsers.findIndex(user => user.id === action.payload.id);\r\n                if (index !== -1) draft.familiarUsers.slice(index,1);\r\n            }),\r\n        // @ts-ignore\r\n        addFamiliarUser: (state: AuthState, action: PayloadAction<FamiliarUser>) =>\r\n            produce(state, (draft) => {\r\n                draft.familiarUsers.push(action.payload);\r\n            }),\r\n        // @ts-ignore\r\n        updateFamiliarUser: (state: AuthState, action: PayloadAction<FamiliarUser>) =>\r\n            produce(state, (draft) => {\r\n                const index = draft.familiarUsers.findIndex(user => user.id === action.payload.id);\r\n                if (index !== -1) draft.familiarUsers[index] = action.payload;\r\n            }),\r\n        // @ts-ignore\r\n        setUserSchemes: (state: AuthState, action: PayloadAction<UserScheme[]>) =>\r\n            produce(state, (draft) => {\r\n                draft.schemes = action.payload;\r\n            }),\r\n        // @ts-ignore\r\n        deleteUserScheme: (state: AuthState, action: PayloadAction<UserScheme>) =>\r\n            produce(state, (draft) => {\r\n                const index = draft.schemes.findIndex(user => user.id === action.payload.id);\r\n                if (index !== -1) draft.schemes.slice(index,1);\r\n            }),\r\n        // @ts-ignore\r\n        addUserScheme: (state: AuthState, action: PayloadAction<UserScheme>) =>\r\n            produce(state, (draft) => {\r\n                draft.schemes.push(action.payload);\r\n            }),\r\n        // @ts-ignore\r\n        updateUserScheme: (state: AuthState, action: PayloadAction<UserScheme>) =>\r\n            produce(state, (draft) => {\r\n                const index = draft.familiarUsers.findIndex(user => user.id === action.payload.id);\r\n                if (index !== -1) draft.schemes[index] = action.payload;\r\n            }),\r\n    }\r\n});\r\n\r\nexport const aeroUserModules: Selector<ApplicationState, UserModule[]> =\r\n    state => state.auth.modules;\r\n\r\nexport const aeroUserFamiliarUsers: Selector<ApplicationState, FamiliarUser[]> =\r\n    state => state.auth.familiarUsers;\r\n\r\nexport const aeroUserSchemes: Selector<ApplicationState, UserScheme[]> =\r\n    state => state.auth.schemes;\r\n\r\nexport const aeroUserUserRoles: Selector<ApplicationState, UserRole[]> =\r\n    state => state.auth.roles;\r\n\r\nexport const aeroUserOrganization: Selector<ApplicationState, UserOrganization | null> =\r\n    state => state.auth.organization;\r\n\r\nexport const activeAeroUserSelector: Selector<ApplicationState, AeroUser | null> =\r\n    state => state.auth.user;\r\n\r\nexport const isAuthenticatedSelector: Selector<ApplicationState, boolean> =\r\n    state => state.auth.user !== null;\r\n\r\nexport const signInAction = createAction<{ login: string, password: string }>('auth/sigIn');\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {\r\n    setAuthUser,\r\n    setIsAuthorization,\r\n    addFamiliarUser,\r\n    addUserScheme,\r\n    deleteFamiliarUser,\r\n    deleteUserScheme,\r\n    setFamiliarUsers,\r\n    setMeta,\r\n    setModules,\r\n    setOrganization,\r\n    setRoles,\r\n    setUserSchemes,\r\n    updateFamiliarUser,\r\n    updateUserScheme\r\n} = actions;\r\n\r\nexport default reducer;","import {select, SelectEffect} from \"redux-saga/effects\";\r\nimport {ApplicationState} from \"../../store/store\";\r\n\r\nexport function selectState<T>(selector: (s: ApplicationState) => T): SelectEffect {\r\n    return select(selector);\r\n}","import {SchemeUI} from \"../../data/ui/SchemeUI\";\r\n\r\nexport const disposeSchemeUI = (schemeUI: SchemeUI) => {\r\n    if (schemeUI) {\r\n        for (const nodeMesh of schemeUI.nodes) {\r\n            nodeMesh.mesh.dispose();\r\n        }\r\n\r\n        for (const nodeRib of schemeUI.ribs) {\r\n            nodeRib.mesh.dispose();\r\n        }\r\n\r\n        schemeUI.parent.dispose();\r\n    }\r\n\r\n    //global.gc();\r\n}","import {selectState} from \"../../../../../utilities/saga/selectState\";\r\nimport {disposeSchemeUI} from \"../../../../../logic/scheme/disposeSchemeUI\";\r\nimport {Mesh} from \"@babylonjs/core\";\r\nimport {SchemeUI} from \"../../../../../data/ui/SchemeUI\";\r\n\r\nexport function* schemeDisposeSaga(action: { payload: boolean; }) {\r\n    const isSchemeLoading = action.payload;\r\n    if (!isSchemeLoading)\r\n        return;\r\n\r\n    const activeSchemeUI: SchemeUI = yield selectState<SchemeUI>(state => state.domain.activeScheme.activeSchemeUI as SchemeUI);\r\n    if (activeSchemeUI)\r\n        disposeSchemeUI(activeSchemeUI);\r\n}","const jsonEscape = (str: string) => {\r\n    return str.replace(/\\n/g, \"\")\r\n        .replace(/\\r/g, \"\")\r\n        .replace(/\\t/g, \"\");\r\n}\r\n\r\nexport default jsonEscape","import Scheme from \"../../data/scheme/Scheme\";\r\nimport jsonEscape from \"../../utilities/string/jsonEscape\";\r\nimport {randomIntFromInterval} from \"../../utilities/math/randomIntFromInterval\";\r\nimport NodeValuePair from \"../../data/scheme/NodeValuePair\";\r\nimport {store} from \"../../store/store\";\r\nimport {nanoid} from \"@reduxjs/toolkit\";\r\n\r\nexport const parseSchemeFileAsync = (file: File): Promise<Scheme> => {\r\n    return new Promise((resolve, reject) => {\r\n        let reader = new FileReader();\r\n        reader.onload = () => {\r\n            const fileText: string = <string>(reader.result)\r\n\r\n            const jsonText = jsonEscape(fileText);\r\n            const scheme: Scheme = JSON.parse(jsonText);\r\n\r\n            //Todo: temp\r\n            const arr = new Array<NodeValuePair>()\r\n            for (const node of scheme.nodes) {\r\n                const param = randomIntFromInterval(1, 10);\r\n                arr.push({\r\n                    nodeId: node.id,\r\n                    value: param\r\n                })\r\n            }\r\n\r\n            resolve(scheme);\r\n        };\r\n\r\n        reader.onerror = reject;\r\n\r\n        const blob: Blob = <Blob>file;\r\n        reader.readAsText(blob);\r\n    })\r\n}","export function randomIntFromInterval(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}","import Scheme from \"../../../../../data/scheme/Scheme\";\r\nimport {call, put} from 'redux-saga/effects'\r\nimport {parseSchemeFileAsync} from \"../../../../../logic/scheme/parseSchemeFileAsync\";\r\nimport {activeSchemeIdChanged, isSchemeLoading} from \"../../../../domain/scheme/activeSchemeReducer\";\r\nimport {schemeFileLoadError, schemeLoadFile} from \"../../../../ui/sections/scheme/schemeSection\";\r\nimport {schemesAddOne} from \"../../../../entity/schemes/schemesReducer\";\r\n\r\nexport function* schemeLoadFileSaga(action: { payload: File | null; }) {\r\n    const file = action.payload;\r\n\r\n    if (!file)\r\n        return;\r\n\r\n    try {\r\n        const scheme: Scheme = yield call(parseSchemeFileAsync, file);\r\n\r\n        yield put(schemesAddOne(scheme));\r\n        yield put(activeSchemeIdChanged(scheme.id));\r\n    } catch (err) {\r\n        yield put(schemeFileLoadError(err));\r\n    }\r\n}","import {injectable} from \"inversify\";\r\nimport {EventBusService} from \"./EventBusService\";\r\nimport {EventListenerFn} from \"./EventListenerFn\";\r\nimport EventEmitter from \"events\";\r\n\r\n@injectable()\r\nclass EventBus implements EventBusService {\r\n    protected eventEmitter: EventEmitter.EventEmitter = new EventEmitter.EventEmitter();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    subscribe(event: string, action: EventListenerFn): void {\r\n        const functions: Function[] = this.eventEmitter.listeners(event);\r\n        const alreadySubscribed = functions.map(f => f.name).includes(action.name)\r\n\r\n        if(!alreadySubscribed)\r\n            this.eventEmitter.addListener(event, action);\r\n    }\r\n\r\n    unsubscribe(event: string, action: EventListenerFn): void {\r\n        this.eventEmitter.removeListener(event, action);\r\n    }\r\n\r\n    send(event: string, value: any): void {\r\n        this.eventEmitter.emit(event, [value]);\r\n    }\r\n}\r\n\r\nexport default EventBus","export const INFRASTRUCTURE_SERVICE: symbol = Symbol.for(\"INFRASTRUCTURE_SERVICE\");\r\nexport const EVENT_BUS_SERVICE: symbol = Symbol.for(\"EVENT_BUS_SERVICE\");\r\nexport const VERSION_SERVICE: symbol = Symbol.for(\"VERSION_SERVICE\");\r\nexport const KEYBOARD_SERVICE: symbol = Symbol.for(\"KEYBOARD_SERVICE\");\r\nexport const COLOR_GRADIENT_SERVICE: symbol = Symbol.for(\"COLOR_GRADIENT_SERVICE\");\r\nexport const REPLICATION_SERVICE: symbol = Symbol.for(\"REPLICATION_SERVICE\");","import {injectable} from \"inversify\";\r\nimport {build} from '../../metadata.json';\r\nimport moment from \"moment/moment\";\r\n\r\n@injectable()\r\nclass VersionService {\r\n    private static _version: string = \"None\";\r\n\r\n    constructor() {\r\n        this.Initialize()\r\n    }\r\n\r\n    private async Initialize() {\r\n        const year = moment().year()\r\n        const currentMonth = moment().month() + 1\r\n        let month = 0;\r\n        if(currentMonth <= 3)\r\n        {\r\n            month = 1;\r\n        }\r\n        else if(currentMonth <= 6)\r\n        {\r\n            month = 2;\r\n        }\r\n        else if(currentMonth <= 9)\r\n        {\r\n            month = 3;\r\n        }\r\n        else if(currentMonth <= 12)\r\n        {\r\n            month = 4;\r\n        }\r\n        VersionService._version = `${year}.${month}.${build}`\r\n    }\r\n\r\n    public GetVersion(): string {\r\n        return VersionService._version\r\n    }\r\n}\r\n\r\nexport default VersionService;","export const SHOW_SNACKBAR_EVENT = \"SHOW_SNACKBAR_EVENT\";\r\nexport const SHOW_NEW_VERSION_EVENT = \"SHOW_NEW_VERSION_EVENT\";\r\nexport const CLOSE_DRAWER_EVENT = \"CLOSE_DRAWER_EVENT\";\r\nexport const OPEN_BOTTOM_DRAWER_EVENT = \"OPEN_BOTTOM_DRAWER_EVENT\";\r\nexport const START_PROGRESS_EVENT = \"START_PROGRESS_EVENT\";\r\nexport const STOP_PROGRESS_EVENT = \"STOP_PROGRESS_EVENT\";\r\nexport const CANVAS_PINCH_EVENT = \"CANVAS_PINCH_EVENT\";\r\nexport const SHOW_BACKDROP_EVENT = \"SHOW_BACKDROP_EVENT\";\r\nexport const CLOSE_BACKDROP_EVENT = \"CLOSE_BACKDROP_EVENT\";\r\nexport const KEY_PRESSED_EVENT = \"KEY_PRESSED_EVENT\";\r\nexport const KEY_UNPRESSED_EVENT = \"KEY_UNPRESSED_EVENT\";\r\nexport const CANVAS_MOUSE_CLICK_EVENT = \"CANVAS_MOUSE_CLICK_EVENT\";","import IoC from \"../../infrastructure/ioc/IoC\";\r\nimport {injectable} from \"inversify\";\r\nimport \"reflect-metadata\";\r\nimport {EventBusService} from \"../eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../infrastructure/ioc/ServiceTypes\";\r\nimport {KEY_PRESSED_EVENT, KEY_UNPRESSED_EVENT} from \"../eventBus/EventTypes\";\r\n\r\n@injectable()\r\nclass Keyboard {\r\n    constructor() {\r\n        this.initialize();\r\n    }\r\n\r\n    private initialize() {\r\n        document.addEventListener(\"keydown\", this.handleKeyDown, false)\r\n        document.addEventListener(\"keyup\", this.handleKeyUp, false)\r\n    }\r\n\r\n    private handleKeyDown(event: any) {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE);\r\n        eventBus.send(KEY_PRESSED_EVENT, event.key)\r\n    }\r\n\r\n    private handleKeyUp(event: any) {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE);\r\n        eventBus.send(KEY_UNPRESSED_EVENT, event.key)\r\n    }\r\n\r\n}\r\n\r\nexport default Keyboard","export class RGBA {\r\n    public Red: number;\r\n    public Green: number;\r\n    public Blue: number;\r\n    public Alpha: number;\r\n    public CSSProperty: string;\r\n\r\n    constructor(red: number, green: number, blue: number, alpha = 1) {\r\n        this.Red = red;\r\n        this.Green = green;\r\n        this.Blue = blue;\r\n        this.Alpha = alpha;\r\n        this.CSSProperty = 'rgba('\r\n            + red + ','\r\n            + green + ','\r\n            + blue + ','\r\n            + alpha + ') ';\r\n    };\r\n\r\n}","import {RGBA} from \"../../views/types/RGBA\";\r\n\r\nexport class ColorLabel {\r\n    public position: number;\r\n    public color: RGBA;\r\n\r\n    constructor(position: number, color: RGBA) {\r\n        this.position = position;\r\n        this.color = color;\r\n    };\r\n\r\n}","import {RGBA} from \"../../../views/types/RGBA\";\r\nimport {ColorLabel} from \"../ColorLabel\";\r\n\r\nexport class Gradient {\r\n    private _Name: string;\r\n    private _BelowLimitColor: RGBA;\r\n    private _AboveLimitColor: RGBA;\r\n    private _Labels: ColorLabel[];\r\n\r\n    get Labels(): ColorLabel[] {\r\n        return this._Labels;\r\n    }\r\n\r\n    set Labels(value: ColorLabel[]) {\r\n        this._Labels = value;\r\n    }\r\n    get AboveLimitColor(): RGBA {\r\n        return this._AboveLimitColor;\r\n    }\r\n\r\n    set AboveLimitColor(value: RGBA) {\r\n        this._AboveLimitColor = value;\r\n    }\r\n    get BelowLimitColor(): RGBA {\r\n        return this._BelowLimitColor;\r\n    }\r\n\r\n    set BelowLimitColor(value: RGBA) {\r\n        this._BelowLimitColor = value;\r\n    }\r\n    get Name(): string {\r\n        return this._Name;\r\n    }\r\n\r\n    set Name(value: string) {\r\n        this._Name = value;\r\n    }\r\n\r\n    protected constructor() {\r\n        this._Name = \"\";\r\n        this._BelowLimitColor = new RGBA(0, 0, 0);\r\n        this._AboveLimitColor = new RGBA(0, 0, 0);\r\n        this._Labels = [];\r\n    }\r\n}","// @ts-nocheck\r\nimport {RGBA} from \"../../../views/types/RGBA\";\r\nimport {ColorLabel} from \"../ColorLabel\";\r\nimport {Gradient} from \"./Graidient\";\r\n\r\nexport class GradientDefault extends Gradient {\r\n    constructor() {\r\n        super();\r\n\r\n        super.Name = 'Default';\r\n        super.BelowLimitColor = new RGBA(255, 255, 255);\r\n        super.Labels = [\r\n            new ColorLabel(0, new RGBA(255, 0, 0)),\r\n            new ColorLabel(25, new RGBA(255, 255, 0)),\r\n            new ColorLabel(50, new RGBA(0, 255, 0)),\r\n            new ColorLabel(75, new RGBA(0, 255, 255)),\r\n            new ColorLabel(100, new RGBA(0, 0, 255))\r\n        ];\r\n        super.AboveLimitColor = new RGBA(0, 0, 0);\r\n    };\r\n\r\n}","// @ts-nocheck\r\nimport {RGBA} from \"../../../views/types/RGBA\";\r\nimport {ColorLabel} from \"../ColorLabel\";\r\nimport {Gradient} from \"./Graidient\";\r\n\r\nexport class GradientIron extends Gradient {\r\n    constructor() {\r\n        super();\r\n\r\n        super.Name = 'Iron';\r\n        super.BelowLimitColor = new RGBA(255, 255, 255);\r\n        super.Labels = [\r\n            new ColorLabel(0, new RGBA(255, 255, 255)),\r\n            new ColorLabel(15, new RGBA(250, 230, 35)),\r\n            new ColorLabel(30, new RGBA(250, 185, 0)),\r\n            new ColorLabel(50, new RGBA(240, 80, 35)),\r\n            new ColorLabel(67, new RGBA(170, 10, 170)),\r\n            new ColorLabel(90, new RGBA(15, 5, 100)),\r\n            new ColorLabel(100, new RGBA(0, 0, 0))\r\n        ];\r\n        super.AboveLimitColor = new RGBA(0, 0, 0);\r\n    };\r\n\r\n}","// @ts-nocheck\r\nimport {RGBA} from \"../../../views/types/RGBA\";\r\nimport {ColorLabel} from \"../ColorLabel\";\r\nimport {Gradient} from \"./Graidient\";\r\n\r\nexport class GradientAeroset extends Gradient{\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        super.Name = 'Aeroset';\r\n        super.BelowLimitColor = new RGBA(255, 255, 255);\r\n\r\n        super.AboveLimitColor = new RGBA(38, 38, 38);\r\n        super.Labels = [\r\n            new ColorLabel(0, new RGBA(249, 30, 30)),\r\n            new ColorLabel(10, new RGBA(252, 102, 28)),\r\n            new ColorLabel(30, new RGBA(242, 235, 38)),\r\n            new ColorLabel(50, new RGBA(38, 242, 84)),\r\n            new ColorLabel(70, new RGBA(28, 252, 204)),\r\n            new ColorLabel(90, new RGBA(28, 173, 252)),\r\n            new ColorLabel(100, new RGBA(28, 56, 252))\r\n        ];\r\n    };\r\n\r\n}","import {RGBA} from \"../../views/types/RGBA\";\r\nimport {GradientDefault} from \"./gradients/GradientDefault\";\r\nimport {GradientIron} from \"./gradients/GradientIron\";\r\nimport {GradientAeroset} from \"./gradients/GradientAeroset\";\r\nimport {Gradient} from \"./gradients/Graidient\";\r\nimport {ColorLabel} from \"./ColorLabel\";\r\nimport {injectable} from \"inversify\";\r\n\r\n@injectable()\r\nexport class ColorGradientService {\r\n    private gradientTypes: (GradientDefault | GradientIron | GradientAeroset)[];\r\n    private Gradient: Gradient = new GradientDefault();\r\n    private MinParameter: number = 1;\r\n    private MaxParameter: number = 10;\r\n\r\n    constructor(gradientType = 'Default', minParameter = -100, maxParameter = 100) {\r\n        this.gradientTypes = [\r\n            new GradientDefault(),\r\n            new GradientIron(),\r\n            new GradientAeroset()\r\n        ];\r\n        this.setGradient(gradientType);\r\n        this.setMinParameter(minParameter);\r\n        this.setMaxParameter(maxParameter);\r\n    };\r\n\r\n    public setGradient(gradientType: string) {\r\n        this.Gradient = <Gradient>this.gradientTypes.find(gradient => gradient.Name === gradientType);\r\n    };\r\n\r\n    public setMinParameter(minParameter: number) {\r\n        this.MinParameter = minParameter;\r\n    };\r\n\r\n    public setMaxParameter(maxParameter: number) {\r\n        this.MaxParameter = maxParameter;\r\n    };\r\n\r\n\r\n    public getColor(parameter: number) {\r\n\r\n        // Calculate parameter position on the gradient scale (%)\r\n        let parameterPosition = (parameter - this.MinParameter) / (this.MaxParameter - this.MinParameter) * 100;\r\n\r\n        if (parameterPosition < 0) {\r\n            return this.Gradient.BelowLimitColor;\r\n        }\r\n\r\n        if (parameterPosition > 100) {\r\n            return this.Gradient.AboveLimitColor;\r\n        }\r\n\r\n        let previousLabel = <ColorLabel>this.Gradient.Labels.sort((label1, label2) => label2.position - label1.position).find(label => label.position <= parameterPosition);\r\n\r\n        let nextLabel = <ColorLabel>this.Gradient.Labels.sort((label1, label2) => label1.position - label2.position).find(label => label.position >= parameterPosition);\r\n\r\n        if (previousLabel == nextLabel) {\r\n            return previousLabel.color;\r\n        } else {\r\n            let red = Math.round(previousLabel.color.Red - (previousLabel.color.Red - nextLabel.color.Red) / (previousLabel.position - nextLabel.position) * (previousLabel.position - parameterPosition));\r\n            let green = Math.round(previousLabel.color.Green - (previousLabel.color.Green - nextLabel.color.Green) / (previousLabel.position - nextLabel.position) * (previousLabel.position - parameterPosition));\r\n            let blue = Math.round(previousLabel.color.Blue - (previousLabel.color.Blue - nextLabel.color.Blue) / (previousLabel.position - nextLabel.position) * (previousLabel.position - parameterPosition));\r\n            let alpha = Math.round(previousLabel.color.Alpha - (previousLabel.color.Alpha - nextLabel.color.Alpha) / (previousLabel.position - nextLabel.position) * (previousLabel.position - parameterPosition));\r\n\r\n            let color = new RGBA(red, green, blue, alpha);\r\n\r\n            return (color);\r\n        }\r\n        ;\r\n\r\n    };\r\n\r\n    public getGradientAsCSSProperty(direction = 'to bottom') {\r\n\r\n        let backgroundProperty = 'linear-gradient(' + direction + ', ';\r\n\r\n        for (let label in this.Gradient.Labels) {\r\n            backgroundProperty += ' rgba('\r\n                + this.Gradient.Labels[label].color.Red + ','\r\n                + this.Gradient.Labels[label].color.Green + ','\r\n                + this.Gradient.Labels[label].color.Blue + ','\r\n                + this.Gradient.Labels[label].color.Alpha + ') '\r\n                + this.Gradient.Labels[label].position + '%, ';\r\n        }\r\n        ;\r\n\r\n        backgroundProperty = backgroundProperty.slice(0, -2) + ')';\r\n\r\n        return backgroundProperty;\r\n\r\n    };\r\n}\r\n\r\nexport default ColorGradientService;\r\n","import {injectable} from \"inversify\";\r\nimport {Engine} from \"@babylonjs/core/Engines/engine\";\r\nimport {Scene} from \"@babylonjs/core/scene\";\r\nimport {ArcRotateCamera, Light} from \"@babylonjs/core\";\r\nimport {Resources} from \"./Resources\";\r\n\r\n@injectable()\r\nclass InfrastructureService {\r\n    private _engine!: Engine;\r\n    private _scene!: Scene;\r\n    private _camera!: ArcRotateCamera;\r\n    private _light!: Light;\r\n    private _resources!: Resources;\r\n\r\n    get resources(): Resources {\r\n        return this._resources;\r\n    }\r\n\r\n    set resources(value: Resources) {\r\n        this._resources = value;\r\n    }\r\n\r\n    get light(): Light {\r\n        return this._light;\r\n    }\r\n\r\n    set light(value: Light) {\r\n        this._light = value;\r\n    }\r\n    get camera(): ArcRotateCamera {\r\n        return this._camera;\r\n    }\r\n\r\n    set camera(value: ArcRotateCamera) {\r\n        this._camera = value;\r\n    }\r\n    get scene(): Scene {\r\n        return this._scene;\r\n    }\r\n\r\n    set scene(value: Scene) {\r\n        this._scene = value;\r\n    }\r\n    get engine(): Engine {\r\n        return this._engine;\r\n    }\r\n\r\n    set engine(value: Engine) {\r\n        this._engine = value;\r\n    }\r\n\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport default InfrastructureService;","const PouchDB = require('pouchdb-core')\r\n    .plugin(require('pouchdb-adapter-http-jwt'))\r\n    .plugin(require('pouchdb-mapreduce'))\r\n    .plugin(require('pouchdb-replication'))\r\n\r\nPouchDB.adapter('worker', require('worker-pouch'));\r\n\r\nexport default PouchDB;","import {injectable} from \"inversify\";\r\nimport PouchDB from \"../../infrastructure/pounchDB/pounchDB\";\r\n\r\n@injectable()\r\nclass ReplicationService {\r\n    private isIndividual: boolean = false;\r\n\r\n    private metaDatabase: any;\r\n    private schemeDatabase: any;\r\n\r\n    public async ConnectMetaDatabaseAsync(metaDBConnectionString: string, token: string, isIndividual: boolean): Promise<void> {\r\n        this.isIndividual = isIndividual;\r\n\r\n        await this.CloseAsync();\r\n\r\n        this.metaDatabase = new PouchDB(metaDBConnectionString,\r\n            {\r\n                jwtauth: {token: () => token},\r\n                adapter: 'worker'\r\n            });\r\n    }\r\n\r\n    public async ConnectSchemeDatabaseAsync(schemeConnectionString: string, token: string): Promise<void> {\r\n        if (this.schemeDatabase) {\r\n            await this.schemeDatabase.close();\r\n        }\r\n\r\n        this.schemeDatabase = new PouchDB(schemeConnectionString,\r\n            {\r\n                jwtauth: {token: () => token},\r\n                adapter: 'worker'\r\n            });\r\n    }\r\n\r\n    public async CloseAsync(): Promise<void> {\r\n        let p1;\r\n        if (this.metaDatabase)\r\n            p1 = this.metaDatabase.close();\r\n\r\n        let p2;\r\n        if (this.schemeDatabase)\r\n            p2 = this.schemeDatabase.close();\r\n\r\n        await Promise.all([p1, p2]);\r\n    }\r\n}\r\n\r\nexport default ReplicationService","import \"reflect-metadata\";\r\nimport EventBus from '../../services/eventBus/EventBus';\r\nimport {EventBusService} from \"../../services/eventBus/EventBusService\";\r\nimport {Container} from \"inversify\";\r\nimport {\r\n    COLOR_GRADIENT_SERVICE,\r\n    EVENT_BUS_SERVICE,\r\n    INFRASTRUCTURE_SERVICE,\r\n    KEYBOARD_SERVICE, REPLICATION_SERVICE,\r\n    VERSION_SERVICE\r\n} from \"./ServiceTypes\";\r\nimport VersionService from \"../../services/version/VersionService\";\r\nimport Keyboard from \"../../services/keyboard/Keyboard\";\r\nimport ColorGradientService from \"../../services/colorGradient/GradientService\";\r\nimport InfrastructureService from \"../../services/infrastructure/InfrastructureService\";\r\nimport ReplicationService from \"../../services/replicationService/ReplicationService\";\r\n\r\nconst IoC = new Container({\r\n    autoBindInjectable: true,\r\n    defaultScope: \"Singleton\",\r\n    skipBaseClassChecks: true\r\n});\r\n\r\nIoC.bind<EventBusService>(EVENT_BUS_SERVICE).to(EventBus).inSingletonScope();\r\nIoC.bind<VersionService>(VERSION_SERVICE).to(VersionService).inSingletonScope();\r\nIoC.bind<Keyboard>(KEYBOARD_SERVICE).to(Keyboard).inSingletonScope();\r\nIoC.bind<ColorGradientService>(COLOR_GRADIENT_SERVICE).to(ColorGradientService).inSingletonScope();\r\nIoC.bind<InfrastructureService>(INFRASTRUCTURE_SERVICE).to(InfrastructureService).inSingletonScope();\r\nIoC.bind<ReplicationService>(REPLICATION_SERVICE).to(ReplicationService).inSingletonScope();\r\n\r\nexport default IoC;","export enum SchemeMode {\r\n    Topology,\r\n    RibGeometry\r\n}","import {Scene} from \"@babylonjs/core/scene\";\r\nimport {Color3, Mesh, MeshBuilder, StandardMaterial} from \"@babylonjs/core\";\r\n\r\nexport const constructGeometryNode = (scene: Scene, nodeId: string, materialBase: StandardMaterial, sphereBase: Mesh): Mesh | null => {\r\n    const mesh = sphereBase.clone(\"sphere\");\r\n    mesh.visibility = 0;\r\n    return mesh\r\n}\r\n\r\nexport default constructGeometryNode;","import {Scene} from \"@babylonjs/core/scene\";\r\nimport {Mesh, StandardMaterial} from \"@babylonjs/core\";\r\n\r\nexport const constructTopologyNode = (scene: Scene, nodeId: string, materialBase: StandardMaterial, sphereBase: Mesh): Mesh => {\r\n    const mesh = sphereBase.clone(\"sphere node \" + nodeId);\r\n    mesh.visibility = 1;\r\n    mesh.freezeNormals();\r\n    return mesh\r\n}\r\n\r\nexport default constructTopologyNode","import {Scene} from \"@babylonjs/core/scene\";\r\nimport {Color3, Mesh, MeshBuilder, StandardMaterial, Vector3, VertexBuffer} from \"@babylonjs/core\";\r\nimport {nanoid} from \"@reduxjs/toolkit\";\r\n\r\nexport const constructTopologyRib = (scene: Scene,\r\n                                     nodeVector: Vector3,\r\n                                     linkedNodeVector: Vector3,\r\n                                     materialBase: StandardMaterial): Mesh => {\r\n    const tube = Mesh.CreateTube(\"tube\",\r\n        [nodeVector, linkedNodeVector],\r\n        0.02,\r\n        // @ts-ignore\r\n        null,\r\n        null,\r\n        3,\r\n        scene,\r\n        true,\r\n        null,\r\n        null);\r\n\r\n    tube.freezeNormals();//for speedup\r\n\r\n    return tube\r\n}\r\n\r\nexport default constructTopologyRib","import {Scene} from \"@babylonjs/core/scene\";\r\nimport {Mesh, MeshBuilder, Quaternion, StandardMaterial, Tools, Vector3} from \"@babylonjs/core\";\r\n\r\nexport const constructGeometryRib = (scene: Scene, nodeVector: Vector3, linkedNodeVector: Vector3): Mesh | null => {\r\n    const vectorStart = nodeVector;\r\n    const vectorEnd = linkedNodeVector;\r\n    const ribLength = Vector3.Distance(vectorStart, vectorEnd);\r\n\r\n    //Create rib\r\n    const ribCuboid = MeshBuilder.CreateBox(\"ribCuboid\", {width: 0.1, height: ribLength, depth: 0.1}, scene);\r\n    const mid = Vector3.Lerp(vectorStart, vectorEnd, 0.5);\r\n    ribCuboid.position = mid;\r\n\r\n    //Get projection of vector rib\r\n    const vectorBetweenPoints = vectorEnd.subtract(vectorStart);\r\n    vectorBetweenPoints.normalize();\r\n\r\n    const vectorBetweenPointsProjectionXZ = new Vector3(vectorBetweenPoints.x, 0, vectorBetweenPoints.z);\r\n    vectorBetweenPointsProjectionXZ.normalize();\r\n\r\n    const axisX = new Vector3(1, 0, 0);\r\n    const axisY = new Vector3(0, 1, 0);\r\n    const axisMinusY = new Vector3(0, -1, 0);\r\n\r\n    //Rotate around axis Z\r\n    const xzRotateAngle = Math.acos(Vector3.Dot(vectorBetweenPointsProjectionXZ, axisX));\r\n    const rotateAxisXZ = Vector3.Cross(vectorBetweenPointsProjectionXZ, axisX);\r\n    rotateAxisXZ.normalize();\r\n\r\n    //Incline rib cuboid\r\n    const inclineRibCuboidAngle = Math.acos(Vector3.Dot(vectorBetweenPoints, axisY));\r\n    const inclineRibCuboidAxis = Vector3.Cross(vectorBetweenPoints, axisY);\r\n    inclineRibCuboidAxis.normalize();\r\n\r\n    const rotateXZAngle = Quaternion.RotationAxis(inclineRibCuboidAxis, -inclineRibCuboidAngle);\r\n    const inclineRibCuboid = Quaternion.RotationAxis(rotateAxisXZ, -xzRotateAngle);\r\n\r\n    //Todo: cje\r\n    const angleDegrees = Tools.ToDegrees(inclineRibCuboidAngle);\r\n    if (Math.abs(angleDegrees) < 2 || Math.abs(angleDegrees - 180) < 2) {\r\n        ribCuboid.rotationQuaternion = inclineRibCuboid;\r\n    } else {\r\n        ribCuboid.rotationQuaternion = rotateXZAngle.multiply(inclineRibCuboid);\r\n    }\r\n\r\n    return ribCuboid;\r\n}\r\n\r\nexport default constructGeometryRib","import Scheme from \"../../data/scheme/Scheme\";\r\nimport Node from \"../../data/base/Node\";\r\nimport {\r\n    ArcRotateCamera,\r\n    Mesh,\r\n    Vector3,\r\n} from \"@babylonjs/core\";\r\nimport {SchemeMode} from \"../../data/scheme/SchemeMode\";\r\nimport constructGeometryNode from \"./construction/node/constructGeometryNode\";\r\nimport constructTopologyNode from \"./construction/node/constructTopologyNode\";\r\nimport constructTopologyRib from \"./construction/rib/constructTopologyRib\";\r\nimport constructGeometryRib from \"./construction/rib/constructGeometryRib\";\r\nimport attachOwnPointerDragBehavior from \"./behaviors/pointerDragBehavior\";\r\nimport SchemeNodeMetadata from \"../../views/types/SchemeNodeMetadata\";\r\nimport {Scene} from \"@babylonjs/core/scene\";\r\nimport {SchemeUI} from \"../../data/ui/SchemeUI\";\r\nimport {NodeMesh} from \"../../data/ui/NodeMesh\";\r\nimport {RibMesh} from \"../../data/ui/RibMesh\";\r\nimport IoC from \"../../infrastructure/ioc/IoC\";\r\nimport InfrastructureService from \"../../services/infrastructure/InfrastructureService\";\r\nimport {INFRASTRUCTURE_SERVICE} from \"../../infrastructure/ioc/ServiceTypes\";\r\n\r\nexport const buildSchemeUIAsync = async (scheme: Scheme, scene: Scene, camera: ArcRotateCamera, schemeMode: SchemeMode): Promise<SchemeUI> => {\r\n    const ribs = new Array<SchemeNodeMetadata>()\r\n    const nodeMeshes = new Array<NodeMesh>();\r\n    const ribMeshes = new Array<RibMesh>();\r\n\r\n    const pointDrawingLineComplete = new Array<string>()\r\n\r\n    let constructNode: Function;\r\n    let constructRib: Function;\r\n\r\n    switch (schemeMode) {\r\n        case SchemeMode.Topology:\r\n            constructNode = constructTopologyNode\r\n            constructRib = constructTopologyRib\r\n            break;\r\n        case SchemeMode.RibGeometry:\r\n            constructNode = constructGeometryNode\r\n            constructRib = constructGeometryRib\r\n            break;\r\n    }\r\n\r\n\r\n    const infrastructureService = IoC.get<InfrastructureService>(INFRASTRUCTURE_SERVICE);\r\n    let parent = new Mesh(\"parent\", scene);\r\n\r\n    for (const node of scheme.nodes) {\r\n        const nodeId = node.id.toString();\r\n\r\n        const nodeMaterial = infrastructureService.resources.materials.nodeMaterial;\r\n        const nodeBaseMesh = infrastructureService.resources.baseMeshes.nodeBaseMesh;\r\n        const nodeMesh: Mesh = constructNode(scene, nodeId, nodeMaterial, nodeBaseMesh);\r\n        nodeMesh.setParent(parent)\r\n\r\n        nodeMeshes.push({\r\n            mesh: nodeMesh,\r\n            nodeId: nodeId\r\n        })\r\n\r\n        //attachOwnPointerDragBehavior(nodeMesh, scene);\r\n\r\n        const xyScale = 100;\r\n        const zScale = 10;\r\n        nodeMesh.position.x = node.point.x / xyScale\r\n        nodeMesh.position.y = node.point.z / zScale\r\n        nodeMesh.position.z = node.point.y / xyScale\r\n\r\n        const nodesIdToDrawingLine = node\r\n            .linkedNodes\r\n            .filter(value => !pointDrawingLineComplete.includes(value));\r\n\r\n        const linkedRibsMetadata = new Array<SchemeNodeMetadata>()\r\n\r\n        const nodePoint = node.point;\r\n        const nodeVector = new Vector3(nodePoint.x / xyScale, nodePoint.z / zScale, nodePoint.y / xyScale);\r\n\r\n        if (nodesIdToDrawingLine.length > 0) {\r\n            for (const linkedNodeId of nodesIdToDrawingLine) {\r\n                const linkedNode = scheme.nodes.find(x => x.id === linkedNodeId) as Node\r\n\r\n                if (!linkedNode)\r\n                    continue\r\n\r\n                const linkedNodePoint = linkedNode.point\r\n                const linkedNodeVector = new Vector3(linkedNodePoint.x / xyScale, linkedNodePoint.z / zScale, linkedNodePoint.y / xyScale);\r\n\r\n                const ribMaterial = infrastructureService.resources.materials.ribMaterial;\r\n                const rib: Mesh = constructRib(scene, nodeVector, linkedNodeVector, ribMaterial);\r\n\r\n                ribMeshes.push({\r\n                    node1Id: linkedNodeId,\r\n                    node2Id: nodeId,\r\n                    mesh: rib,\r\n                    node1Point: nodeVector,\r\n                    node2Point: linkedNodeVector\r\n                })\r\n\r\n                const nodeMetadata = {mesh: rib, nodeVector: nodeVector, linkedNodeVector: linkedNodeVector};\r\n                ribs.push(nodeMetadata)\r\n                linkedRibsMetadata.push(nodeMetadata)\r\n                //attachOwnPointerDragBehavior(rib, scene)\r\n            }\r\n\r\n            const ribData = ribs.filter(r => r.linkedNodeVector.x === nodeVector.x\r\n                && r.linkedNodeVector.y === nodeVector.y\r\n                && r.linkedNodeVector.z === nodeVector.z)\r\n\r\n            for (const data of ribData) {\r\n                linkedRibsMetadata.push({\r\n                    mesh: data.mesh,\r\n                    nodeVector: nodeVector,\r\n                    linkedNodeVector: data.nodeVector\r\n                })\r\n            }\r\n\r\n            nodeMesh.metadata = {\r\n                linkedRibsMetadata\r\n            }\r\n\r\n            pointDrawingLineComplete.push(node.id)\r\n        }\r\n    }\r\n\r\n    // for (const mesh of nodeMeshes) {\r\n    //     // @ts-ignore\r\n    //     const _sx = 1 / mesh.mesh.scaling.x;\r\n    //     const _sy = 1 / mesh.mesh.scaling.y;\r\n    //     const _sz = 3 / mesh.mesh.scaling.z;\r\n    //\r\n    //     mesh.mesh.scaling.z = 1;\r\n    //\r\n    //     const pivotPoint = new Vector3(-41, -41, 29);\r\n    //\r\n    //     mesh.mesh.position = new Vector3(pivotPoint.x + _sx * (mesh.mesh.position.x - pivotPoint.x),\r\n    //         pivotPoint.y + _sy * (mesh.mesh.position.y - pivotPoint.y),\r\n    //         pivotPoint.z + _sz * (mesh.mesh.position.z - pivotPoint.z));\r\n    //\r\n    //\r\n    //     mesh.mesh.computeWorldMatrix();\r\n    //}\r\n\r\n    // for (const rib of nodeMeshes) {\r\n    //     // @ts-ignore\r\n    //     const _sx = 1 / rib.mesh.scaling.x;\r\n    //     const _sy = 1 / rib.mesh.scaling.y;\r\n    //     const _sz = 3 / rib.mesh.scaling.z;\r\n    //\r\n    //     const mesh = rib.mesh;\r\n    //\r\n    //     const pivotPoint = new Vector3(-41, -41, 29);\r\n    //\r\n    //     const matrix = mesh.computeWorldMatrix(true);  // force calculation of world matrix\r\n    //     const local_pos = new Vector3(0, 0, 0); //top middle of box relative to box\r\n    //     local_pos.addInPlace(new Vector3(1, 1, 1)); //translate by (1, 1, 1)\r\n    //     const global_pos = Vector3.TransformCoordinates(local_pos, matrix); //calculate world position\r\n    //     sphere.position = global_pos; //position sphere relative to world\r\n    //\r\n    //     const path =\r\n    //\r\n    //     // @ts-ignore\r\n    //     const scaledTube = Mesh.CreateTube(null, path,\r\n    //         null,\r\n    //         null,\r\n    //         null,\r\n    //         null,\r\n    //         null,\r\n    //         null,\r\n    //         rib.mesh);\r\n    //\r\n    //     rib.mesh.position = new Vector3(pivotPoint.x + _sx * (rib.mesh.position.x - pivotPoint.x),\r\n    //         pivotPoint.y + _sy * (rib.mesh.position.y - pivotPoint.y),\r\n    //         pivotPoint.z + _sz * (rib.mesh.position.z - pivotPoint.z));\r\n    //\r\n    //\r\n    //     rib.mesh.computeWorldMatrix();\r\n    // }\r\n\r\n    return {\r\n        nodes: nodeMeshes,\r\n        ribs: ribMeshes,\r\n        parent: parent\r\n    }\r\n}","export const delay = (ms: number) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}","import {AbstractMesh, ArcRotateCamera, BoundingInfo, Vector3} from \"@babylonjs/core\";\r\nimport {Vector3D} from \"../../../data/base/Vector3D\";\r\n\r\nexport const setCameraTargetToCenterOfMeshes = (parentMesh: AbstractMesh, camera: ArcRotateCamera, radius: number): Vector3D => {\r\n    let childMeshes = parentMesh.getChildMeshes();\r\n\r\n    let min = childMeshes[0].getBoundingInfo().boundingBox.minimumWorld;\r\n    let max = childMeshes[0].getBoundingInfo().boundingBox.maximumWorld;\r\n\r\n    for (let i = 0; i < childMeshes.length; i++) {\r\n        let meshMin = childMeshes[i].getBoundingInfo().boundingBox.minimumWorld;\r\n        let meshMax = childMeshes[i].getBoundingInfo().boundingBox.maximumWorld;\r\n\r\n        min = Vector3.Minimize(min, meshMin);\r\n        max = Vector3.Maximize(max, meshMax);\r\n    }\r\n\r\n    const boundingInfo = new BoundingInfo(min, max);\r\n    parentMesh.setBoundingInfo(boundingInfo);\r\n\r\n    parentMesh.showBoundingBox = true;\r\n\r\n    const target = boundingInfo.boundingBox.center;\r\n    camera.setTarget(target)\r\n    camera.radius = radius\r\n\r\n    return {x: target.x, y: target.y, z: target.z}\r\n}","import {Vector3D} from \"../../../../../data/base/Vector3D\";\r\nimport {ArcRotateCamera, Plane, Vector2, Scene, Vector3, PointerEventTypes, Matrix, Epsilon} from \"@babylonjs/core\";\r\n\r\nexport function setupZoomForPerspectiveCamera(scene: Scene, camera: ArcRotateCamera, centralVector: Vector3D) {\r\n    camera.inertia = 0.5;\r\n    camera.upperBetaLimit = Math.PI - 0.1;\r\n    camera.angularSensibilityX = camera.angularSensibilityY = 1500;\r\n\r\n    updateHitPlane(scene, camera, centralVector);\r\n\r\n    const inertialPanning = Vector3.Zero();\r\n    \r\n    const inertialPanningFn = () => {\r\n        if (inertialPanning.x !== 0 || inertialPanning.y !== 0 || inertialPanning.z !== 0) {\r\n            camera.target.addInPlace(inertialPanning);\r\n            inertialPanning.scaleInPlace(camera.inertia);\r\n            zeroIfClose(inertialPanning);\r\n        }\r\n    };\r\n\r\n    const wheelPrecisionFn = () => {\r\n        camera.wheelPrecision = 50;\r\n    };\r\n\r\n    const zoomFn = (p: any) => {\r\n        const delta = zoomWheel(p,camera);\r\n        zooming(delta, scene, camera, inertialPanning);\r\n    }\r\n\r\n    const prvScreenPos = Vector2.Zero();\r\n    const rotateFn = () => {\r\n        rotating(scene, camera, prvScreenPos);\r\n    };\r\n\r\n    const removeObservers = () => {\r\n        updateHitPlane(scene, camera, centralVector);\r\n        scene.onPointerObservable.removeCallback(rotateFn);\r\n    }\r\n\r\n    scene.onPointerObservable.add((p) => {\r\n        removeObservers();\r\n        if (p.event.button === 0) {\r\n            updateHitPlane(scene, camera, centralVector);\r\n            prvScreenPos.copyFromFloats(scene.pointerX, scene.pointerY);\r\n            scene.onPointerObservable.add(rotateFn, PointerEventTypes.POINTERMOVE);\r\n        }\r\n    }, PointerEventTypes.POINTERDOWN);\r\n\r\n    scene.onPointerObservable.add((p, e) => {\r\n        removeObservers();\r\n    }, PointerEventTypes.POINTERUP);\r\n\r\n    scene.onPointerObservable.add(zoomFn, PointerEventTypes.POINTERWHEEL);\r\n    scene.onBeforeRenderObservable.add(inertialPanningFn);\r\n    scene.onBeforeRenderObservable.add(wheelPrecisionFn);\r\n\r\n    // stop context menu showing on canvas right click\r\n    // @ts-ignore\r\n    scene.getEngine().getRenderingCanvas().addEventListener(\"contextmenu\", (e) => {\r\n        e.preventDefault();\r\n    });\r\n}\r\n\r\nfunction updateHitPlane(scene: Scene, camera: ArcRotateCamera, centralVector: Vector3D)\r\n{\r\n    \r\n    var direction = camera.target.subtract(camera.position)\r\n    // @ts-ignore\r\n    camera.hitplane = Plane.FromPositionAndNormal(centralVector, direction);\r\n    \r\n    var motion = 0.0 + camera.inertialAlphaOffset + camera.inertialBetaOffset + camera.inertialRadiusOffset;\r\n    if (motion)\r\n    {\r\n        // still moving, so tricker another update in a little bit.  Unfortunately the camera has no \r\n        // callback when it has finished moving.\r\n        window.setTimeout(() => {updateHitPlane(scene, camera, centralVector), 100});\r\n    }\r\n}\r\n\r\n// Get pos on plane\r\nfunction getPosition(scene: Scene, camera: ArcRotateCamera) {\r\n\r\n    var direction = camera.target.subtract(camera.position);\r\n    direction.normalize();\r\n\r\n    // to stop degenerate behavior when camera is aligned with a plane where hit detection shoots\r\n    // off to infinity, we take the closest distance to any of the 3 x-y-z planes.\r\n    var ray = scene.createPickingRay(scene.pointerX, scene.pointerY, Matrix.Identity(), camera, false);\r\n    // @ts-ignore\r\n    const distance = ray.intersectsPlane(camera.hitplane);\r\n    \r\n    // not using this ray again, so modifying its vectors here is fine\r\n    // @ts-ignore\r\n    return ray.origin.addInPlace(ray.direction.scaleInPlace(distance));\r\n}\r\n\r\n// Get the wheel delta divided by the camera wheel precision.\r\nfunction zoomWheel(p: any, camera: ArcRotateCamera) {\r\n    const event = p.event;\r\n    event.preventDefault();\r\n    let wheelDelta = 0;\r\n    if (event.wheelDelta) {\r\n        wheelDelta = event.wheelDelta;\r\n    } else {\r\n        wheelDelta = -(event.deltaY || event.detail) * 60;\r\n    }\r\n    var delta = wheelDelta / (camera.wheelPrecision * 10);\r\n    return delta;\r\n}\r\n\r\n// Zoom to pointer position. Zoom amount determined by delta.\r\nfunction zooming(delta: number, scene: Scene, camera: ArcRotateCamera, ref: Vector3) {\r\n    // @ts-ignore\r\n    if (camera.radius - camera.lowerRadiusLimit < 1 && delta > 0) {\r\n        return;\r\n    // @ts-ignore    \r\n    } else if (camera.upperRadiusLimit - camera.radius < 1 && delta < 0) {\r\n        return;\r\n    }\r\n    const inertiaComp = 1 - camera.inertia;\r\n    if (camera.radius - (camera.inertialRadiusOffset + delta) / inertiaComp <\r\n    // @ts-ignore\r\n            camera.lowerRadiusLimit) {\r\n                // @ts-ignore\r\n        delta = (camera.radius - camera.lowerRadiusLimit) * inertiaComp - camera.inertialRadiusOffset;\r\n    } else if (camera.radius - (camera.inertialRadiusOffset + delta) / inertiaComp >\r\n    // @ts-ignore\r\n                camera.upperRadiusLimit) {\r\n    // @ts-ignore\r\n        delta = (camera.radius - camera.upperRadiusLimit) * inertiaComp - camera.inertialRadiusOffset;\r\n    }\r\n\r\n    const zoomDistance = delta / inertiaComp;\r\n    const ratio = zoomDistance / camera.radius;\r\n    const vec = getPosition(scene, camera);\r\n\r\n    const directionToZoomLocation = vec.subtract(camera.target);\r\n    const offset = directionToZoomLocation.scale(ratio);\r\n\r\n    offset.scaleInPlace(inertiaComp);\r\n    ref.addInPlace(offset);\r\n\r\n    camera.inertialRadiusOffset += delta;\r\n}\r\n\r\n// Rotate the camera\r\nfunction rotating(scene: Scene, camera: ArcRotateCamera, prvScreenPos: Vector2) {\r\n    const offsetX = scene.pointerX - prvScreenPos.x;\r\n    const offsetY = scene.pointerY - prvScreenPos.y;\r\n    prvScreenPos.copyFromFloats(scene.pointerX, scene.pointerY);\r\n    changeInertialAlphaBetaFromOffsets(offsetX, offsetY, camera);\r\n}\r\n\r\n// Modifies the camera's inertial alpha and beta offsets.\r\nfunction changeInertialAlphaBetaFromOffsets(offsetX: number, offsetY: number, camera: ArcRotateCamera) {\r\n    const alphaOffsetDelta = offsetX / camera.angularSensibilityX;\r\n    const betaOffsetDelta = offsetY / camera.angularSensibilityY;\r\n    camera.inertialAlphaOffset -= alphaOffsetDelta;\r\n    camera.inertialBetaOffset -= betaOffsetDelta;\r\n}\r\n\r\n// Sets x y or z of passed in vector to zero if less than Epsilon.\r\nfunction zeroIfClose(vec: Vector3) {\r\n    if (Math.abs(vec.x) < Epsilon) {\r\n        vec.x = 0;\r\n    }\r\n    if (Math.abs(vec.y) < Epsilon) {\r\n        vec.y = 0;\r\n    }\r\n    if (Math.abs(vec.z) < Epsilon) {\r\n        vec.z = 0;\r\n    }\r\n}","import {SchemeMode} from \"../../../../../data/scheme/SchemeMode\";\r\nimport Scheme from \"../../../../../data/scheme/Scheme\";\r\nimport {Scene} from \"@babylonjs/core/scene\";\r\nimport {ArcRotateCamera, Camera, Mesh} from \"@babylonjs/core\";\r\nimport {CameraMode} from \"../../../../../views/types/CameraMode\";\r\nimport {call, put} from \"redux-saga/effects\";\r\nimport {activeSchemeUIChanged, isSchemeLoading} from \"../../../../domain/scheme/activeSchemeReducer\";\r\nimport {SchemeUI} from \"../../../../../data/ui/SchemeUI\";\r\nimport {buildSchemeUIAsync} from \"../../../../../logic/scheme/buildSchemeUIAsync\";\r\nimport {delay} from \"../../../../../utilities/async/delay\";\r\nimport {Vector3D} from \"../../../../../data/base/Vector3D\";\r\nimport {setCameraTargetToCenterOfMeshes} from \"../../../../../logic/scheme/construction/setCameraTargetToCenterOfMeshes\";\r\nimport {cameraTargetChanged} from \"../../../../ui/camera/cameraReducer\";\r\nimport IoC from \"../../../../../infrastructure/ioc/IoC\";\r\nimport InfrastructureService from \"../../../../../services/infrastructure/InfrastructureService\";\r\nimport {INFRASTRUCTURE_SERVICE} from \"../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {setupZoomForPerspectiveCamera} from '../../../../../views/components/layout/scene/code/setupZoomForPerspectiveCamera';\r\nimport {store} from \"../../../../store\";\r\n\r\nexport function* drawSchemeUISaga(scheme: Scheme, cameraMode: CameraMode) {\r\n    const infrastructureService = IoC.get<InfrastructureService>(INFRASTRUCTURE_SERVICE);\r\n    const scene = infrastructureService.scene;\r\n    const camera = infrastructureService.camera;\r\n    let radiusCamera: number;\r\n\r\n    const activeScheme = <SchemeUI | null>store.getState().domain.activeScheme.activeSchemeUI;\r\n\r\n    if (activeScheme) {\r\n        radiusCamera = camera.radius\r\n    } else {\r\n        radiusCamera = 20;\r\n    }\r\n\r\n    yield put(isSchemeLoading(true));\r\n    // @ts-ignore\r\n    const schemeUI: SchemeUI = yield call(buildSchemeUIAsync, scheme, scene, camera, cameraMode);\r\n    yield call(delay, 300); //wait when scheme render\r\n\r\n    const cameraTarget: Vector3D = setCameraTargetToCenterOfMeshes(<Mesh>schemeUI.parent, <ArcRotateCamera>camera, <number>radiusCamera);\r\n    if (!activeScheme) {\r\n        setupZoomForPerspectiveCamera(scene, camera, cameraTarget);\r\n    }\r\n    yield put(cameraTargetChanged(cameraTarget));\r\n\r\n    yield put(activeSchemeUIChanged(schemeUI));\r\n    yield put(isSchemeLoading(false));\r\n}\r\n","import {store} from \"../../../../store\";\r\nimport {schemesByIdSelector} from \"../../../../entity/schemes/schemesReducer\";\r\nimport IoC from \"../../../../../infrastructure/ioc/IoC\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {EventBusService} from \"../../../../../services/eventBus/EventBusService\";\r\nimport {SnackbarEvent} from \"../../../../../views/components/snackbar/code/SnackbarEvent\";\r\nimport i18next from \"i18next\";\r\nimport {SHOW_SNACKBAR_EVENT} from \"../../../../../services/eventBus/EventTypes\";\r\nimport {call} from \"redux-saga/effects\";\r\n\r\nimport {drawSchemeUISaga} from \"./drawSchemeUISaga\";\r\n\r\nexport function* constructSchemeUISaga(action: { payload: string | null }) {\r\n    const schemeId = action.payload;\r\n\r\n    if (!schemeId)\r\n        return;\r\n\r\n    const state = store.getState().entity.schemes;\r\n    const scheme = schemesByIdSelector(state, schemeId);\r\n    const schemeMode = store.getState().domain.activeScheme.activeSchemeMode;\r\n\r\n    // @ts-ignore\r\n    yield call(drawSchemeUISaga, scheme, schemeMode);\r\n\r\n    const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n    const event: SnackbarEvent = {\r\n        message: i18next.t('scheme_successfully_uploaded'),\r\n        alertType: \"success\"\r\n    }\r\n    eventBus.send(SHOW_SNACKBAR_EVENT, event);\r\n}","import {store} from \"../../../../store\";\r\nimport {schemesByIdSelector} from \"../../../../entity/schemes/schemesReducer\";\r\nimport IoC from \"../../../../../infrastructure/ioc/IoC\";\r\nimport {EVENT_BUS_SERVICE, INFRASTRUCTURE_SERVICE} from \"../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {EventBusService} from \"../../../../../services/eventBus/EventBusService\";\r\nimport {SnackbarEvent} from \"../../../../../views/components/snackbar/code/SnackbarEvent\";\r\nimport i18next from \"i18next\";\r\nimport {SHOW_SNACKBAR_EVENT} from \"../../../../../services/eventBus/EventTypes\";\r\nimport {call} from \"redux-saga/effects\";\r\nimport {SchemeMode} from \"../../../../../data/scheme/SchemeMode\";\r\nimport {drawSchemeUISaga} from \"./drawSchemeUISaga\";\r\n\r\nexport function* changeSchemeUISaga(action: { payload: SchemeMode }) {\r\n    const schemeMode = action.payload;\r\n\r\n    const schemeState = store.getState().entity.schemes;\r\n    const activeSchemeID = <string>store.getState().domain.activeScheme.activeSchemeId;\r\n\r\n    if (!activeSchemeID)\r\n        return;\r\n\r\n    const activeScheme = schemesByIdSelector(schemeState, activeSchemeID);\r\n\r\n    // @ts-ignore\r\n    yield call(drawSchemeUISaga, activeScheme, schemeMode);\r\n\r\n    const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n    const event: SnackbarEvent = {\r\n        message: i18next.t('scheme_mode_changed'),\r\n        alertType: \"success\"\r\n    }\r\n    eventBus.send(SHOW_SNACKBAR_EVENT, event);\r\n}","import {SchemeMode} from \"../../../../../data/scheme/SchemeMode\";\r\nimport {put} from \"redux-saga/effects\";\r\nimport {closeSchemeModelsPanel} from \"../../../../ui/panels/models/schemeModelsPanel\";\r\n\r\nexport function* schemeModeChangedSaga(action: { payload: SchemeMode }) {\r\n    const schemeMode = action.payload;\r\n\r\n    switch (schemeMode) {\r\n        case SchemeMode.Topology:\r\n            yield put(closeSchemeModelsPanel());\r\n            break;\r\n        case SchemeMode.RibGeometry:\r\n            break;\r\n\r\n    }\r\n}","import {SchemeUI} from \"../../data/ui/SchemeUI\";\r\nimport {Vector3D} from \"../../data/base/Vector3D\";\r\nimport {Mesh, Vector3} from \"@babylonjs/core\";\r\n\r\nexport const scaleScheme = (schemeUI: SchemeUI, scaleFactor: Vector3D, schemeCenter: Vector3D) : SchemeUI | null => {\r\n    const xScale = scaleFactor.x;\r\n    const yScale = scaleFactor.y;\r\n    const zScale = scaleFactor.z;\r\n\r\n    for (const rib of schemeUI.ribs) {\r\n        const ribMesh = rib.mesh;\r\n        const node1Point = rib.node1Point;\r\n        const node2Point = rib.node2Point;\r\n\r\n        let sx = 1;\r\n        let sy = 1;\r\n        let sz = 1;\r\n\r\n        if (ribMesh.metadata && ribMesh.metadata.scale) {\r\n            sx = ribMesh.metadata.scale.sx;\r\n            sy = ribMesh.metadata.scale.sy;\r\n            sz = ribMesh.metadata.scale.sz;\r\n        }\r\n\r\n        const _sx = xScale / sx;\r\n        const _sy = yScale / sy;\r\n        const _sz = zScale / sz;\r\n\r\n        const pivotPoint = schemeCenter;\r\n\r\n        const node1scaledPoint= new Vector3(pivotPoint.x + _sx * (node1Point.x - pivotPoint.x),\r\n            pivotPoint.y + _sy * (node1Point.y - pivotPoint.y),\r\n            pivotPoint.z + _sz * (node1Point.z - pivotPoint.z));\r\n\r\n        const node2scaledPoint= new Vector3(pivotPoint.x + _sx * (node2Point.x - pivotPoint.x),\r\n            pivotPoint.y + _sy * (node2Point.y - pivotPoint.y),\r\n            pivotPoint.z + _sz * (node2Point.z - pivotPoint.z));\r\n\r\n        ribMesh.unfreezeNormals();\r\n\r\n        // @ts-ignore\r\n        const updatedTube = Mesh.CreateTube(null,\r\n            [node1scaledPoint, node2scaledPoint],\r\n            0.02,\r\n            null,\r\n            null,\r\n            null,\r\n            null,\r\n            true,\r\n            null,\r\n            ribMesh);\r\n\r\n        // rib.node1Point = node1scaledPoint;\r\n        // rib.node2Point = node2scaledPoint;\r\n        // rib.mesh = updatedTube;\r\n\r\n        rib.mesh.freezeNormals();\r\n\r\n        const scale = {\r\n            sx: sx,\r\n            sy: sy,\r\n            sz: sz,\r\n        };\r\n        if(ribMesh.metadata){\r\n            ribMesh.metadata.scale = scale\r\n        }\r\n        else {\r\n            ribMesh.metadata = {\r\n                scale: scale\r\n            }\r\n        }\r\n\r\n        rib.mesh.computeWorldMatrix();\r\n    }\r\n\r\n    for (const node of schemeUI.nodes) {\r\n        const nodeMesh = node.mesh;\r\n\r\n        let sx = 1;\r\n        let sy = 1;\r\n        let sz = 1;\r\n\r\n        if (nodeMesh.metadata && nodeMesh.metadata.scale) {\r\n            sx = nodeMesh.metadata.scale.sx;\r\n            sy = nodeMesh.metadata.scale.sy;\r\n            sz = nodeMesh.metadata.scale.sz;\r\n        }\r\n\r\n        const _sx = xScale / sx;\r\n        const _sy = yScale / sy;\r\n        const _sz = zScale / sz;\r\n\r\n        const pivotPoint = schemeCenter;\r\n\r\n        nodeMesh.position = new Vector3(pivotPoint.x + _sx * (nodeMesh.position.x - pivotPoint.x),\r\n            pivotPoint.y + _sy * (nodeMesh.position.y - pivotPoint.y),\r\n            pivotPoint.z + _sz * (nodeMesh.position.z - pivotPoint.z));\r\n\r\n        const scale = {\r\n            sx: sx,\r\n            sy: sy,\r\n            sz: sz,\r\n        };\r\n        if(nodeMesh.metadata){\r\n            nodeMesh.metadata.scale = scale\r\n        }\r\n        else {\r\n            nodeMesh.metadata = {\r\n                scale: scale\r\n            }\r\n        }\r\n\r\n        nodeMesh.computeWorldMatrix();\r\n    }\r\n\r\n    return null;\r\n}","import {Vector3D} from \"../../../../../data/base/Vector3D\";\r\nimport {scaleScheme} from \"../../../../../logic/scheme/scaleScheme\";\r\nimport {SchemeUI} from \"../../../../../data/ui/SchemeUI\";\r\nimport {selectState} from \"../../../../../utilities/saga/selectState\";\r\nimport {put} from \"redux-saga/effects\";\r\nimport {activeSchemeUIUpdated} from \"../../../../domain/scheme/activeSchemeReducer\";\r\n\r\nexport function* changeScaleFactorSaga(action: { payload: Vector3D }) {\r\n    const scaleFactor = action.payload;\r\n    const activeSchemeUI: SchemeUI = yield selectState<SchemeUI>(state => state.domain.activeScheme.activeSchemeUI as SchemeUI);\r\n\r\n    if (activeSchemeUI) {\r\n        const centerOfScheme: Vector3D = yield selectState<Vector3D>(state => state.ui.camera.target);\r\n        const updatedSchemeUI = scaleScheme(activeSchemeUI, scaleFactor, centerOfScheme);\r\n        yield put(activeSchemeUIUpdated(updatedSchemeUI));\r\n    }\r\n}","import {takeEvery, takeLatest} from \"redux-saga/effects\";\r\nimport {\r\n    activeSchemeIdChanged,\r\n    isSchemeLoading,\r\n    schemeModeChanged,\r\n    setActiveScaleFactor\r\n} from \"../../../domain/scheme/activeSchemeReducer\";\r\nimport {schemeLoadFile} from \"../../../ui/sections/scheme/schemeSection\";\r\nimport {schemeDisposeSaga} from \"./scheme/schemeDisposeSaga\";\r\nimport {schemeLoadFileSaga} from \"./scheme/schemeLoadFileSaga\";\r\nimport {constructSchemeUISaga} from \"./scheme/constructSchemeUISaga\";\r\nimport {changeSchemeUISaga} from \"./scheme/changeSchemeUISaga\";\r\nimport {showSchemeModelSaga} from \"./scheme/showSchemeModelSaga\";\r\nimport {schemeModeChangedSaga} from \"./scheme/schemeModeChangedSaga\";\r\nimport {changeScaleFactorSaga} from \"./scheme/changeScaleFactorSaga\";\r\n\r\nexport function* schemeSaga() {\r\n    // @ts-ignore\r\n    yield takeLatest(isSchemeLoading, schemeDisposeSaga);\r\n    // @ts-ignore\r\n    yield takeLatest(activeSchemeIdChanged, constructSchemeUISaga);\r\n    // @ts-ignore\r\n    yield takeLatest(schemeModeChanged, changeSchemeUISaga);\r\n    // @ts-ignore\r\n    yield takeEvery(schemeModeChanged, schemeModeChangedSaga);\r\n    yield takeEvery(schemeLoadFile, schemeLoadFileSaga);\r\n    // @ts-ignore\r\n    yield takeLatest(setActiveScaleFactor, changeScaleFactorSaga);\r\n}","import {CameraMode} from \"../../../../../views/types/CameraMode\";\r\nimport InfrastructureService from \"../../../../../services/infrastructure/InfrastructureService\";\r\nimport IoC from \"../../../../../infrastructure/ioc/IoC\";\r\nimport {INFRASTRUCTURE_SERVICE} from \"../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {Camera} from \"@babylonjs/core\";\r\n\r\nexport function* changeCameraModeSaga(action: { payload: CameraMode }) {\r\n    const infrastructureService = IoC.get<InfrastructureService>(INFRASTRUCTURE_SERVICE);\r\n    const camera = infrastructureService.camera;\r\n\r\n    if (action.payload === CameraMode.Perspective) {\r\n        camera.mode = Camera.PERSPECTIVE_CAMERA;\r\n        camera.inertia = 0.5;\r\n        camera.lowerRadiusLimit = -1000;\r\n        camera.upperRadiusLimit = 1000;\r\n    } else {\r\n        camera.mode = Camera.ORTHOGRAPHIC_CAMERA;\r\n        camera.inertia = 0.3;\r\n        camera.lowerRadiusLimit = camera.radius;\r\n        camera.upperRadiusLimit = camera.radius;\r\n    }\r\n}","import {takeEvery, takeLatest} from \"redux-saga/effects\";\r\nimport {changeCameraModeSaga} from \"./engine/changeCameraModeSaga\";\r\nimport {cameraModeChanged} from '../../../ui/camera/cameraReducer';\r\n\r\nexport function* engineSaga() {\r\n    // @ts-ignore\r\n    yield takeLatest(cameraModeChanged, changeCameraModeSaga);\r\n}","export enum UserStatus {\r\n    Unknown,\r\n    SignedIn,\r\n    SignedOut\r\n}","import {all} from \"redux-saga/effects\";\r\nimport {schemeSaga} from \"./schemeSaga\";\r\nimport {engineSaga} from \"./engineSaga\";\r\n\r\nexport default function* domainSaga() {\r\n    yield all([\r\n        schemeSaga(),\r\n        engineSaga()\r\n    ]);\r\n}","import {UserStatus} from \"./UserStatus\";\r\nimport UserRepresentation from \"keycloak-admin/lib/defs/userRepresentation\";\r\n\r\nclass AeroUser {\r\n    readonly status: UserStatus;\r\n    readonly token: string | undefined;\r\n    static refreshTokenIntervalId: NodeJS.Timeout | undefined;\r\n    readonly userInfo: UserRepresentation | null | undefined;\r\n\r\n    constructor(user: UserRepresentation | null | undefined, token: string | undefined = undefined, refreshTokenIntervalId: NodeJS.Timeout | undefined = undefined) {\r\n        this.status =\r\n            user === undefined ? UserStatus.Unknown :\r\n                user === null ? UserStatus.SignedOut :\r\n                    UserStatus.SignedIn\r\n\r\n        switch (this.status) {\r\n            case UserStatus.SignedIn:\r\n                this.userInfo = user;\r\n                this.token = token;\r\n                AeroUser.refreshTokenIntervalId = refreshTokenIntervalId;\r\n                break;\r\n            case UserStatus.Unknown:\r\n            case UserStatus.SignedOut:\r\n                if (AeroUser.refreshTokenIntervalId){\r\n                    clearInterval(AeroUser.refreshTokenIntervalId);\r\n                    AeroUser.refreshTokenIntervalId = undefined;\r\n                }\r\n                break;\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default AeroUser;","import AeroUser from \"../../data/auth/AeroUser\";\r\nimport {UserStatus} from \"../../data/auth/UserStatus\";\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {setAuthUser} from \"../../store/auth/authReducer\";\r\nimport {store} from \"../../store/store\";\r\nimport UserRepresentation from \"keycloak-admin/lib/defs/userRepresentation\";\r\nimport IoC from \"../../infrastructure/ioc/IoC\";\r\nimport ReplicationService from \"../../services/replicationService/ReplicationService\";\r\nimport {REPLICATION_SERVICE} from \"../../infrastructure/ioc/ServiceTypes\";\r\nimport {META_DB_CONNECTION_STRING} from \"../../config/connection\";\r\n\r\nconst userBehaviorObserver = async (user: AeroUser) => {\r\n    const replicationService = IoC.get<ReplicationService>(REPLICATION_SERVICE);\r\n\r\n    switch (user.status) {\r\n        case UserStatus.SignedIn:\r\n            // const userAttributes: Record<string, any> = (<UserRepresentation>user.userInfo).attributes as Record<string, any>;\r\n            // const organization: string = userAttributes['organization'];\r\n            // const database: string = userAttributes['database'];\r\n            //\r\n            // await replicationService.ConnectMetaDatabaseAsync(`${META_DB_CONNECTION_STRING}/${database}`, <string>user.token, organization === \"individual\");\r\n\r\n            store.dispatch(setAuthUser(user));\r\n            console.log(\"User status - SignedIn\");\r\n            break;\r\n        case UserStatus.SignedOut:\r\n            store.dispatch(setAuthUser(null));\r\n            await replicationService.CloseAsync();\r\n\r\n\r\n            console.log(\"User status - SignedOut\");\r\n            break;\r\n        default:\r\n            console.log(\"User status - Unknown\");\r\n            break;\r\n    }\r\n};\r\n\r\nexport const userBehaviorSubject = new BehaviorSubject<AeroUser>(new AeroUser(undefined));\r\nuserBehaviorSubject.subscribe(userBehaviorObserver);\r\n","import KcAdminClient from \"keycloak-admin\";\r\nimport Querystring from \"querystring\";\r\nimport {KEYCLOAK_HOST, KEYCLOAK_REALM} from \"../../config/connection\";\r\n\r\nconst kcAdminClient = new KcAdminClient(\r\n    {\r\n        baseUrl: `${KEYCLOAK_HOST}/auth`,\r\n        realmName: KEYCLOAK_REALM,\r\n        requestConfig: {\r\n            paramsSerializer: function (params) {\r\n                return Querystring.stringify(params)\r\n            }\r\n        }\r\n    });\r\n\r\nexport default kcAdminClient;","export const META_DB_CONNECTION_STRING = \"http://localhost:5984\";\r\nexport const KEYCLOAK_CLIENT = \"aeroset-client\";\r\nexport const KEYCLOAK_REALM = \"Aeroset\";\r\nexport const KEYCLOAK_GRANT_TYPE = \"password\";\r\nexport const KEYCLOAK_HOST = \"http://localhost:8080\";\r\nexport const KEYCLOAK_REFRESH_TOKEN_TIME_MS = 58 * 1000;","import {\r\n    KEYCLOAK_CLIENT,\r\n    KEYCLOAK_GRANT_TYPE,\r\n    KEYCLOAK_HOST,\r\n    KEYCLOAK_REALM,\r\n    KEYCLOAK_REFRESH_TOKEN_TIME_MS\r\n} from \"../../config/connection\";\r\nimport kcAdminClient from \"../../infrastructure/keycloak/keyCloakAdminClient\";\r\n\r\nexport async function setUpTokenRefresh(login: string, password: string): Promise<NodeJS.Timeout> {\r\n    // const keycloakIssuer = await Issuer.discover(\r\n    //     `${KEYCLOAK_HOST}/auth/${KEYCLOAK_REALM}/${KEYCLOAK_CLIENT}`,\r\n    // );\r\n    //\r\n    // const client = new keycloakIssuer.Client({\r\n    //     client_id: KEYCLOAK_CLIENT,\r\n    //     token_endpoint_auth_method: 'none', // to send only client_id in the header\r\n    // });\r\n    //\r\n    // let tokenSet = await client.grant({\r\n    //     grant_type: KEYCLOAK_GRANT_TYPE,\r\n    //     username: login,\r\n    //     password: password,\r\n    // });\r\n    //\r\n    // const intervalId = setInterval(async () => {\r\n    //     const refreshToken: string = <string>tokenSet.refresh_token;\r\n    //     try {\r\n    //         tokenSet = await client.refresh(refreshToken);\r\n    //     } catch {\r\n    //         //handle this\r\n    //     }\r\n    //     kcAdminClient.setAccessToken(<string>tokenSet.access_token);\r\n    // }, KEYCLOAK_REFRESH_TOKEN_TIME_MS); // 58 seconds\r\n    //\r\n    // return intervalId;\r\n\r\n    return setInterval(() => {});\r\n}","import {userBehaviorSubject} from \"./authStateManager\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport kcAdminClient from \"../../infrastructure/keycloak/keyCloakAdminClient\";\r\nimport UserRepresentation from \"keycloak-admin/lib/defs/userRepresentation\";\r\nimport {KEYCLOAK_CLIENT, KEYCLOAK_GRANT_TYPE} from \"../../config/connection\";\r\nimport {setUpTokenRefresh} from \"./setUpTokenRefresh\";\r\nimport AeroUser from \"../../data/auth/AeroUser\";\r\n\r\nexport const authorizeUserAsync = async (login: string, password: string): Promise<void> => {\r\n    try {\r\n        if (login !== \"foo@gmail.com\" && password !== \"12345\")\r\n            return Promise.resolve();\r\n\r\n        await kcAdminClient.auth({\r\n            username: login,\r\n            password: password,\r\n            grantType: KEYCLOAK_GRANT_TYPE,\r\n            clientId: KEYCLOAK_CLIENT,\r\n        });\r\n\r\n        const token: string = kcAdminClient.accessToken;\r\n        const decodedToken = <any>jwt_decode(token);\r\n\r\n        const userId: string = decodedToken.sub;\r\n        const user: UserRepresentation = await kcAdminClient.users.findOne({\r\n            id: userId\r\n        });\r\n\r\n        const refreshTokenIntervalId = await setUpTokenRefresh(login, password);\r\n        userBehaviorSubject.next(new AeroUser(user, token, refreshTokenIntervalId));\r\n\r\n        console.log(user);\r\n    } catch (ex) {\r\n        //Todo: handle this\r\n        console.error(ex);\r\n        userBehaviorSubject.next(new AeroUser({id: \"df\"}));\r\n    }\r\n\r\n    return Promise.resolve();\r\n}\r\n","import {call, put} from \"redux-saga/effects\";\r\nimport {authorizeUserAsync} from \"../../../../logic/auth/authorizeUserAsync\";\r\nimport { setIsAuthorization } from \"../../../auth/authReducer\";\r\n\r\nexport function* signInSaga(action: { payload: { login: string, password: string } }) {\r\n    const credentials = action.payload;\r\n\r\n    yield put(setIsAuthorization(true));\r\n    yield call(authorizeUserAsync, credentials.login, credentials.password);\r\n    yield put(setIsAuthorization(false));\r\n}","import {takeLatest} from \"redux-saga/effects\";\r\nimport {signInAction} from \"../../../auth/authReducer\";\r\nimport {signInSaga} from \"./signInSaga\";\r\n\r\nexport default function* authSaga() {\r\n    // @ts-ignore\r\n    yield takeLatest(signInAction, signInSaga);\r\n}","import {all} from 'redux-saga/effects'\r\nimport domainSaga from \"./domain/domainSaga\";\r\nimport authSaga from \"./auth/authSaga\";\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        domainSaga(),\r\n        authSaga()\r\n    ]);\r\n}","import rootReducer from './rootReducer'\r\nimport {createStore, compose} from 'redux';\r\nimport loadState from \"./loadState\";\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\r\nimport {useDispatch} from \"react-redux\";\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './middleware/saga/rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [...getDefaultMiddleware({\r\n    thunk: false,\r\n    serializableCheck: false,\r\n    immutableCheck: false\r\n}),\r\n    sagaMiddleware];\r\n\r\nconst devMode = process.env.NODE_ENV === 'development';\r\nif (devMode) {\r\n    middleware.push(logger);\r\n}\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer(),\r\n    preloadedState: loadState(),\r\n    middleware: middleware,\r\n    devTools: devMode,\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type ApplicationState = ReturnType<typeof store.getState>;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();","import {combineReducers} from 'redux'\r\nimport uiReducer from \"./ui/uiReducer\";\r\nimport entityReducer from \"./entity/entityReducer\";\r\nimport domainReducer from \"./domain/domainReducer\";\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport authReducer from \"./auth/authReducer\";\r\n\r\nexport default function rootReducer() {\r\n    return combineReducers({\r\n        ui: uiReducer(),\r\n        entity: entityReducer(),\r\n        auth: authReducer,\r\n        domain: domainReducer(),\r\n        firestore: firestoreReducer,\r\n    });\r\n};","//Todo: load state from database\r\nexport default function loadState() {\r\n    return {};\r\n}","import {createGlobalStyle} from 'styled-components'\r\nimport {normalize} from 'styled-normalize'\r\n\r\n// noinspection Stylelint\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${normalize};\r\n  \r\n   html, body {\r\n    padding: 0;\r\n    margin: 0;\r\n    height: 100%;\r\n    min-height: 100%;\r\n    min-width: 100%;\r\n    width: 100%;\r\n    font-family: 'Roboto', 'Segoe UI',sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    overflow:hidden;\r\n    box-sizing: border-box;\r\n    *, *:before, *:after {\r\n    box-sizing: inherit;\r\n    touch-action: none;\r\n    -ms-touch-action: none;\r\n    }\r\n  }\r\n\r\n  code {\r\n    font-family: source-code-pro, monospace;\r\n  }\r\n`","export const defaultAppThemeValues = {\r\n    app: {\r\n        colors: {\r\n            main: {\r\n                white: \"#ffffff\",\r\n                lightGray: \"#f7f7f7\",\r\n                lightGraySecond: \"#D3D3D3\",\r\n                mediumGray: \"#969696\",\r\n                darkGray: \"#363835\",\r\n                lightBlue: \"#bee7f1\",\r\n                mediumBlue: \"#7dd0e4\",\r\n                darkBlue: \"#137cbf\",\r\n                lightGreen: \"\",\r\n            },\r\n            palette: {\r\n                white: \"#ffffff\",\r\n                black: \"\",\r\n                gray: \"\",\r\n                blue1: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                blue2: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                blue3: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                green: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                orange: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                purple1: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                purple2: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                red: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                yellow: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                }\r\n            }\r\n        },\r\n        font: \"Roboto\",\r\n        sizes: {\r\n            header : 48,\r\n            headerMobile: 56,\r\n            instrumentalPanel : 32,\r\n            footer : 0,\r\n        },\r\n        lang : \"ru\"\r\n\r\n    }\r\n};","import {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {path} from \"ramda\";\r\nimport {ThemeColors} from \"./ThemeColors\";\r\nimport createAppTheme from \"./createAppTheme\";\r\nimport {defaultAppThemeValues} from \"./defaultAppThemeValues\";\r\n\r\nconst theme: Theme = createAppTheme({\r\n    ...defaultAppThemeValues\r\n})\r\nexport default theme;","import {createMuiTheme, Theme, ThemeOptions} from \"@material-ui/core\";\r\nimport {defaultAppThemeValues} from \"./defaultAppThemeValues\";\r\n\r\ndeclare module '@material-ui/core/styles/createMuiTheme' {\r\n    interface Theme {\r\n        app: {\r\n            colors: {\r\n                main: {\r\n                    white: string,\r\n                    lightGray: string,\r\n                    lightGraySecond: string,\r\n                    mediumGray: string,\r\n                    darkGray: string,\r\n                    lightBlue: string,\r\n                    mediumBlue: string,\r\n                    darkBlue: string,\r\n                    lightGreen: string,\r\n                },\r\n                palette: {\r\n                    black: string,\r\n                    gray: string,\r\n                    white: string,\r\n                    red: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    orange: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    yellow: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    green: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue3: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    }\r\n                }\r\n            },\r\n            font: string,\r\n            sizes: {\r\n                header : number,\r\n                headerMobile:number,\r\n                instrumentalPanel : number,\r\n                footer : number\r\n            },\r\n            lang : string\r\n        }\r\n    }\r\n\r\n    interface ThemeOptions {\r\n        app: {\r\n            colors: {\r\n                main: {\r\n                    white: string,\r\n                    lightGray: string,\r\n                    lightGraySecond: string,\r\n                    mediumGray: string,\r\n                    darkGray: string,\r\n                    lightBlue: string,\r\n                    mediumBlue: string,\r\n                    darkBlue: string,\r\n                    lightGreen: string,\r\n                },\r\n                palette: {\r\n                    black: string,\r\n                    gray: string,\r\n                    white: string,\r\n                    red: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    orange: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    yellow: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    green: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue3: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    }\r\n                }\r\n            },\r\n            font: string,\r\n            sizes: {\r\n                header : number,\r\n                headerMobile: number,\r\n                instrumentalPanel : number,\r\n                footer : number\r\n            },\r\n            lang : string\r\n        }\r\n    }\r\n}\r\n\r\nexport default function createAppTheme(options: ThemeOptions) : Theme {\r\n    return createMuiTheme({\r\n        ...options,\r\n        ...defaultAppThemeValues\r\n    })\r\n}\r\n","export enum ThemeColors {\r\n    white,\r\n    lightGray,\r\n    lightGraySecond,\r\n    mediumGray,\r\n    darkGray,\r\n    lightBlue,\r\n    mediumBlue,\r\n    darkBlue,\r\n    lightGreen,\r\n}","import {MuiThemeProvider, StylesProvider} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport theme from \"./theme\";\r\n\r\n// @ts-ignore\r\nconst Theme = ({children}) => (\r\n    <StylesProvider injectFirst>\r\n        <MuiThemeProvider theme={theme}>\r\n            <ThemeProvider theme={theme}>\r\n                {children}\r\n            </ThemeProvider>\r\n        </MuiThemeProvider>\r\n    </StylesProvider>\r\n);\r\n\r\nexport default Theme","import {path} from \"ramda\";\r\nimport {ThemeColors} from \"./ThemeColors\";\r\n\r\n// @ts-ignore\r\nexport const getTheme: string = (keys: any[] = []) =>\r\n// @ts-ignore\r\n    props => path(['theme', 'app', ...keys], props);\r\n// @ts-ignore\r\nexport const themeColor = (key: ThemeColors) => getTheme(['colors', \"main\", ThemeColors[key]]);\r\n// @ts-ignore\r\nexport const paletteColor = (key: string) => getTheme(['colors', \"palette\", key]);\r\n// @ts-ignore\r\nexport const appSizes = (key: string) => getTheme(['sizes', key]);","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../theme/themeAccessors\";\r\n\r\nexport const Area = styled.main<Theme>`\r\n  ${props => props.theme.breakpoints.up(\"sm\")} {\r\n    height: calc(100vh - ${props => appSizes('header')(props) + appSizes('footer')(props) + appSizes('instrumentalPanel')(props)}px);\r\n  }\r\n\r\n  ${props => props.theme.breakpoints.down(\"sm\")} {\r\n    height: calc(100vh - ${props => appSizes('headerMobile')(props)}px);\r\n  }\r\n\r\n  background: ${themeColor(ThemeColors.lightBlue)};\r\n`\r\n\r\nexport const AuthContainer = styled.section<{ theme: Theme, isAuthenticated: boolean }>`\r\n  visibility: ${props => props.isAuthenticated ? `none` : 'block'};\r\n  width: 100vw;\r\n  height: 100vh;\r\n`\r\n\r\nexport const AppMainSection = styled.section<{ theme: Theme, isAuthenticated: boolean }>`\r\n  display : ${props => props.isAuthenticated ? 'block' : `none`};\r\n`\r\n","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../../theme/themeAccessors\";\r\n\r\nexport const HeaderPanelContainer = styled.div<Theme>`\r\nbackground: ${themeColor(ThemeColors.darkBlue)};\r\nheight: ${appSizes(\"header\")}px;\r\ndisplay: flex;\r\nalign-items: center;\r\nflex-direction: row-reverse;\r\npadding-left: 16px;\r\npadding-right: 16px;\r\n`\r\n","import styled from \"styled-components\";\r\nimport DialpadIcon from \"@material-ui/icons/Dialpad\";\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport {themeColor} from \"../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../theme/ThemeColors\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport {ListItemIcon} from \"@material-ui/core\";\r\nimport BlurOnIcon from \"@material-ui/icons/BlurOn\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport BlurOffIcon from '@material-ui/icons/BlurOff';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\n\r\nexport const AppOpenPointCloudFiltersIcon = styled(DialpadIcon)`\r\n  color: ${themeColor(ThemeColors.darkGray)}\r\n`\r\nexport const AppSettingsIcon = styled(TuneIcon)`\r\n  color: ${themeColor(ThemeColors.white)}\r\n`\r\nexport const AppLoadSchemeFile = styled(DescriptionIcon)`\r\n  olor: ${themeColor(ThemeColors.darkGray)}\r\n`\r\nexport const AppClearPointCloudIcon = styled(BlurOffIcon)`\r\n  color: ${themeColor(ThemeColors.darkGray)}\r\n`\r\nexport const AppCloseIcon = styled(CloseIcon)`\r\n  color: ${themeColor(ThemeColors.white)}\r\n`\r\nexport const AppArrowCloseLeft = styled(ChevronLeftIcon)`\r\n`\r\nexport const AppPointCloudIcon = styled(BlurOnIcon)`\r\n`\r\n\r\nexport const AppSchemeIcon = styled(AppsIcon)`\r\n`\r\n\r\nexport const AppExpandLess = styled(ExpandLess)`\r\n  color: ${themeColor(ThemeColors.darkGray)}\r\n`\r\nexport const AppExpandMoreIcon = styled(ExpandMore)`\r\n  color: ${themeColor(ThemeColors.darkGray)}\r\n`\r\n\r\nexport const AppModelsIcon = styled(InvertColorsIcon)`\r\n  color: ${themeColor(ThemeColors.darkGray)}\r\n`\r\n\r\nexport const AppPublishIcon = styled(PublishIcon)`\r\n  ${props => props.theme.breakpoints.down(\"sm\")} {\r\n    color: ${themeColor(ThemeColors.mediumGray)}\r\n  }\r\n\r\n  ${props => props.theme.breakpoints.up(\"sm\")} {\r\n    color: ${themeColor(ThemeColors.white)}\r\n  }\r\n`\r\n\r\nexport const AppListItemIcon = styled(ListItemIcon)`\r\n`\r\n\r\n\r\nexport const AppMenuIcon = styled(MenuIcon)`\r\n  font-size: 35px;\r\n  color: ${themeColor(ThemeColors.white)}\r\n`\r\n\r\nexport const AppMoreVertIcon = styled(MoreVertIcon)`\r\n  font-size: 35px;\r\n  color: ${themeColor(ThemeColors.white)}\r\n`\r\n\r\nexport const AppUserAccountIcon = styled(AccountCircleIcon)`\r\n  font-size: 35px;\r\n  color: ${themeColor(ThemeColors.white)}\r\n`\r\n\r\n\r\n","import React from \"react\";\r\nimport {Menu, MenuItem, Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {HeaderPanelContainer} from \"./style\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {AppUserAccountIcon} from \"../../shared/icons\";\r\nimport {userBehaviorSubject} from \"../../../../logic/auth/authStateManager\";\r\nimport AeroUser from \"../../../../data/auth/AeroUser\";\r\n\r\nconst HeaderPanel: React.FC<{ theme: Theme }> = (_) => {\r\n    const {t} = useTranslation();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const menuIsOpen = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const signOut = () => {\r\n        handleMenuClose();\r\n        userBehaviorSubject.next(new AeroUser(null));\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <HeaderPanelContainer>\r\n            <div>\r\n                <Tooltip title={t('user_account')}>\r\n                    <IconButton size={\"small\"}\r\n                                color={\"primary\"}\r\n                                onClick={handleMenu}\r\n                                style={{marginLeft: 10}}>\r\n                        <AppUserAccountIcon/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={menuIsOpen}\r\n                    onClose={handleMenuClose}>\r\n                    <MenuItem onClick={signOut}>{t('sign_out')}</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        </HeaderPanelContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(HeaderPanel);","import React, {Fragment} from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {\r\n    pointCloudLoadFile\r\n} from \"../../../../../store/ui/sections/pointCloud/pointCloudSection\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {AppClearPointCloudIcon, AppOpenPointCloudFiltersIcon, AppPublishIcon} from \"../../../shared/icons\";\r\nimport { showPointCloudPanel } from \"../../../../../store/ui/panels/pointCloud/pointCloudPanel\";\r\n\r\nconst PointCloudSection: React.FC<{ theme: Theme }> = (_) => {\r\n    const {t} = useTranslation()\r\n    const dispatch = useAppDispatch();\r\n\r\n    const fileLoad = (e) => {\r\n        e.preventDefault();\r\n        const file: File = e.target.files?.[0] as File;\r\n        if (file && file !== undefined) {\r\n            dispatch(pointCloudLoadFile(file));\r\n        }\r\n        e.preventDefault()\r\n    };\r\n\r\n    const showPanel = () =>\r\n        dispatch(showPointCloudPanel());\r\n\r\n    return (\r\n        <div>\r\n            <Fragment>\r\n                <input\r\n                    color=\"primary\"\r\n                    type=\"file\"\r\n                    onChange={fileLoad}\r\n                    id=\"icon-button-file\"\r\n                    style={{display: 'none',}}/>\r\n                <Tooltip title={t('load_file_with_point_cloud')}>\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <IconButton\r\n                            component=\"span\"\r\n                            size=\"small\"\r\n                            color=\"primary\">\r\n                            <AppPublishIcon/>\r\n                        </IconButton>\r\n                    </label>\r\n                </Tooltip>\r\n            </Fragment>\r\n            <Tooltip title={t('open_panel_point_cloud_filters')}>\r\n                <IconButton size={\"small\"}\r\n                            color={\"primary\"}\r\n                            onClick={showPanel}\r\n                            style={{verticalAlign: \"bottom\", marginLeft: 8}}>\r\n                    <AppOpenPointCloudFiltersIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={t('point_cloud_clear')}>\r\n                <IconButton size={\"small\"}\r\n                            color={\"primary\"}\r\n                            onClick={() => null}\r\n                            style={{verticalAlign: \"bottom\", marginLeft: 8}}>\r\n                    <AppClearPointCloudIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withTheme(PointCloudSection);\r\n","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../../theme/themeAccessors\";\r\n\r\nexport const Panel = styled.div<Theme>`\r\nbackground: ${themeColor(ThemeColors.mediumGray)};\r\nheight: ${appSizes(\"instrumentalPanel\")}px;\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\npadding-left: 16px;\r\npadding-right: 16px;\r\n`","import styled from \"styled-components\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {themeColor} from \"../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../theme/ThemeColors\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nexport const AppDivider = styled(Divider)`\r\nbackground-color: ${themeColor(ThemeColors.mediumGray)};\r\n`\r\n\r\nexport const AppDividerLight = styled(Divider)`\r\nbackground-color: ${themeColor(ThemeColors.lightGray)};\r\n`\r\n\r\nexport const AppDividerBold = styled(Divider)`\r\nbackground-color: ${themeColor(ThemeColors.lightGray)};\r\nwidth: 1.15px;\r\nheight: 24px;\r\nmargin-left: 8px;\r\nmargin-right: 8px;\r\n`\r\n\r\n\r\n","import React, {Fragment} from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {AppLoadSchemeFile, AppSettingsIcon} from \"../../../shared/icons\";\r\nimport {schemeLoadFile} from \"../../../../../store/ui/sections/scheme/schemeSection\";\r\nimport {showSchemePanel} from \"../../../../../store/ui/panels/scheme/schemePanel\";\r\n\r\nconst SchemeSection: React.FC<{ theme: Theme }> = (_) => {\r\n    const {t} = useTranslation()\r\n    const dispatch = useAppDispatch();\r\n\r\n    const showPanel = () =>\r\n        dispatch(showSchemePanel());\r\n    const loadFile = (e) => {\r\n        const file: File = e.target.files?.[0] as File;\r\n        if (file && file !== undefined) {\r\n            dispatch(schemeLoadFile(file));\r\n            e.target.value = \"\";\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Fragment>\r\n                <input\r\n                    color=\"primary\"\r\n                    type=\"file\"\r\n                    onChange={loadFile}\r\n                    id=\"scheme-load-file\"\r\n                    style={{display: 'none'}}/>\r\n                <Tooltip title={t('load_file_with_scheme')}>\r\n                    <label htmlFor=\"scheme-load-file\">\r\n                        <IconButton\r\n                            component=\"span\"\r\n                            size=\"small\"\r\n                            color=\"primary\">\r\n                            <AppLoadSchemeFile/>\r\n                        </IconButton>\r\n                    </label>\r\n                </Tooltip>\r\n            </Fragment>\r\n            <Fragment>\r\n                <Tooltip title={t('scheme_display_settings')}>\r\n                    <label htmlFor=\"scheme-open-display-settings\">\r\n                        <IconButton\r\n                            onClick={showPanel}\r\n                            component=\"span\"\r\n                            size=\"small\"\r\n                            color=\"primary\">\r\n                            <AppSettingsIcon/>\r\n                        </IconButton>\r\n                    </label>\r\n                </Tooltip>\r\n            </Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withTheme(SchemeSection);\r\n","import React, {Fragment} from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {AppLoadSchemeFile, AppModelsIcon, AppSettingsIcon} from \"../../../shared/icons\";\r\nimport {showSchemeModelsPanel} from \"../../../../../store/ui/panels/models/schemeModelsPanel\";\r\n\r\nconst ModelsSection: React.FC<{ theme: Theme }> = (_) => {\r\n    const {t} = useTranslation()\r\n    const dispatch = useAppDispatch();\r\n\r\n    const showPanel = () =>\r\n        dispatch(showSchemeModelsPanel());\r\n\r\n    return (\r\n        <div>\r\n            <Fragment>\r\n                <Tooltip title={t('scheme_models')}>\r\n                    <label htmlFor=\"scheme-open-display-settings\">\r\n                        <IconButton\r\n                            onClick={showPanel}\r\n                            component=\"span\"\r\n                            size=\"small\"\r\n                            color=\"primary\">\r\n                            <AppModelsIcon/>\r\n                        </IconButton>\r\n                    </label>\r\n                </Tooltip>\r\n            </Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withTheme(ModelsSection);\r\n","import React from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport PointCloudSection from \"../sections/pointCloud\";\r\nimport {Panel} from \"./style\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {AppDividerBold} from \"../../shared/style\";\r\nimport SchemeSection from \"../sections/scheme\";\r\nimport ModelsSection from \"../sections/models\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {activeSchemeModeChangedSelector} from \"../../../../store/domain/scheme/activeSchemeReducer\";\r\nimport {SchemeMode} from \"../../../../data/scheme/SchemeMode\";\r\n\r\nconst InstrumentalPanel: React.FC<{ theme: Theme }> = (props) => {\r\n    const schemeMode = useSelector(activeSchemeModeChangedSelector);\r\n\r\n    const modelSectionIsActive = schemeMode == SchemeMode.RibGeometry;\r\n\r\n    return (\r\n        <Panel>\r\n            <PointCloudSection/>\r\n            <AppDividerBold orientation=\"vertical\"/>\r\n            <SchemeSection/>\r\n            <AppDividerBold orientation=\"vertical\"/>\r\n            {\r\n                modelSectionIsActive ?\r\n                    (<ModelsSection/>) : (React.Fragment)\r\n            }\r\n            {\r\n                modelSectionIsActive ?\r\n                    (<AppDividerBold orientation=\"vertical\"/>) : (React.Fragment)\r\n            }\r\n\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default withTheme(InstrumentalPanel);","export default function isCanvasSupported() {\r\n    const elem = document.createElement('canvas');\r\n    return !!(elem.getContext && elem.getContext('2d'));\r\n}","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {appSizes} from \"../../theme/themeAccessors\";\r\n\r\nexport const Canvas = styled.canvas<Theme>`\r\n   outline: none;\r\n   display: block;\r\n   margin: 0;\r\n   padding: 0;\r\n   width: 100vw;\r\n   touch-action: none;\r\n   ${props => props.theme.breakpoints.up(\"sm\")} {\r\n      height: calc(100vh - ${props => appSizes('header')(props) + appSizes('footer')(props) + appSizes('instrumentalPanel')(props) }px);\r\n   }\r\n   ${props => props.theme.breakpoints.down(\"sm\")} {\r\n      height: calc(100vh - ${props => appSizes('headerMobile')(props)}px);\r\n   }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const PointCloudContainer = styled.div`\r\n    pointerEvents: \"none\";\r\n    position: fixed;\r\n    height: 100%;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 61.5px;\r\n    background: transparent;\r\n    pointer-events: none;\r\n`\r\n","import {Color4, Particle, PointsCloudSystem, Scene, Vector3} from \"@babylonjs/core\";\r\nimport {PointCloudPanelState} from \"../../../../../store/ui/panels/pointCloud/pointCloudPanel\";\r\nimport {filterPointCloudAsync} from \"../../../../../workers/filterPointCloud.worker\";\r\nimport IoC from \"../../../../../infrastructure/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {SnackbarEvent} from \"../../../snackbar/code/SnackbarEvent\";\r\nimport i18next from \"i18next\";\r\nimport {SHOW_SNACKBAR_EVENT} from \"../../../../../services/eventBus/EventTypes\";\r\n\r\nexport const setUpPointCloud = (file: File, cloudPointFilters: PointCloudPanelState, scene: Scene) => {\r\n    const reader: FileReader = new FileReader()\r\n\r\n    reader.onload = async (e: ProgressEvent<FileReader>) => {\r\n        const fileText: string = <string>(reader.result)\r\n        const pointsCloudSystem = new PointsCloudSystem(\"pcs\", 3, scene, {updatable: false});\r\n        const pointCloudData = await filterPointCloudAsync(fileText, cloudPointFilters)\r\n\r\n        const constructParticle = async (particle: Particle, i: number, _: any) => {\r\n            const {vector, color} = pointCloudData[i];\r\n            particle.position = new Vector3(vector.x, vector.y, vector.z);\r\n            particle.color = new Color4(color.r, color.g, color.b, 1)\r\n        }\r\n\r\n        const pointsLength = pointCloudData.length;\r\n        pointsCloudSystem.addPoints(pointsLength, constructParticle);\r\n\r\n        const mesh = await pointsCloudSystem.buildMeshAsync();\r\n\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        const event: SnackbarEvent = {\r\n            message: i18next.t('point_cloud_successfully_uploaded'),\r\n            alertType: \"success\"\r\n        }\r\n        eventBus.send(SHOW_SNACKBAR_EVENT, event)\r\n\r\n        return pointsCloudSystem;\r\n    };\r\n\r\n    const blob: Blob = <Blob>file;\r\n    reader.readAsText(blob);\r\n}\r\n\r\n\r\n\r\n","import {Selector, useSelector} from \"react-redux\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport * as React from \"react\";\r\nimport {\r\n    pointCloudPanelSelector,\r\n    PointCloudPanelState\r\n} from \"../../../../store/ui/panels/pointCloud/pointCloudPanel\";\r\nimport {ApplicationState} from \"../../../../store/store\";\r\nimport {PointCloudContainer} from \"./style\";\r\nimport {setUpPointCloud} from \"./code/setupPointCloud\";\r\nimport {forwardRef, Ref, useImperativeHandle, useState} from \"react\";\r\nimport {DelayedInitialization, GraphicData} from \"../../../types/DelayedInitialization\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport withTheme from \"@material-ui/core/styles/withTheme\";\r\n\r\nconst pointCloudFileSelector: Selector<ApplicationState, File | null> = state => state.ui.sections.pointCloud.pointsCloudFile;\r\n\r\nconst dataSelector = createSelector([pointCloudPanelSelector, pointCloudFileSelector],\r\n    (pointCloudFilters: PointCloudPanelState, file: File | null) => {\r\n        return {\r\n            pointCloudFilters,\r\n            file\r\n        }\r\n    })\r\n\r\nconst PointCloud = forwardRef((props, ref: Ref<DelayedInitialization>) => {\r\n    useImperativeHandle(ref, () => ({initialize}))\r\n    const [state, setState] = useState<{ engineData: GraphicData | null }>({engineData: null})\r\n    const {engineData} = state\r\n\r\n    const data = useSelector(dataSelector);\r\n    const cloudPointFilters = data.pointCloudFilters\r\n    const cloudPointFile = data.file\r\n\r\n    const initialize = async (engineData: GraphicData) => {\r\n        setState({engineData})\r\n    }\r\n    const loadPointCloud = async () => {\r\n        await setUpPointCloud(cloudPointFile as File, cloudPointFilters, (engineData as GraphicData).scene)\r\n    }\r\n\r\n    if (cloudPointFile) {\r\n        loadPointCloud()\r\n    }\r\n\r\n    return (\r\n        <PointCloudContainer/>\r\n    )\r\n})\r\n\r\n// @ts-ignore\r\nexport default withTheme(withStyles(null)(PointCloud))","import styled from \"styled-components\";\r\nimport {FormControl, FormControlLabel, Select, Theme} from \"@material-ui/core\";\r\nimport {themeColor} from \"../../../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../../../theme/ThemeColors\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const PanelContainer = styled.section<{ theme: Theme, width: number, height: number, isActive: number }>`\r\n  width: ${props => props.width}px;\r\n  height: ${props => props.height}px;\r\n  background: ${themeColor(ThemeColors.lightGray)};\r\n  border-radius: 5px;\r\n  pointer-events: auto;\r\n  visibility: ${props => props.isActive ? `visible` : `hidden`};\r\n`\r\n\r\nexport const PanelHeaderContainer = styled.strong<Theme>`\r\n`\r\n\r\nexport const PanelMobileContainer = styled.div<Theme>`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center\r\n`\r\n\r\nexport const PanelHeader = styled.div<Theme>`\r\n  cursor: move;\r\n  background: ${themeColor(ThemeColors.darkBlue)};\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n  color: ${themeColor(ThemeColors.white)};\r\n  text-align: center;\r\n  height: 30px;\r\n`\r\n\r\nexport const PanelHeaderText = styled.div<Theme>`\r\n  margin-left: 8px;\r\n  align-content: center;\r\n  display: inline-block;\r\n`\r\n\r\nexport const PanelHeaderTypography = styled(Typography)`\r\n`\r\n\r\nexport const PanelBodyContainer = styled.div<Theme>`\r\n  margin: 16px;\r\n`\r\n\r\nexport const FormControlStyled = styled(FormControl)<Theme>`\r\n  margin-left: 16px;\r\n  margin-right: 16px;\r\n  margin-top: 8px;\r\n  minWidth: 120px;\r\n`\r\n\r\nexport const FormControlLabelStyled = styled(FormControlLabel)<Theme>`\r\n  margin-left: 8px;\r\n`\r\n\r\nexport const SelectStyled = styled(Select)<Theme>`\r\n  marginTop: 16px;\r\n`\r\n\r\n","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\n\r\nexport const PointCloudPanelLineContainer = styled.div<Theme>`\r\nmargin-top: 12px;\r\n`\r\n\r\n","import {Theme} from \"styled-system\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {PanelBodyContainer} from \"./style\";\r\nimport {PointCloudPanelLineContainer} from \"../../panels/pointCloud/style\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {isNumeric} from \"rxjs/internal-compatibility\";\r\nimport {\r\n    changeXFromLimit,\r\n    changeXToLimit,\r\n    changeYFromLimit,\r\n    changeYToLimit,\r\n    changeZFromLimit,\r\n    changeZToLimit,\r\n    pointCloudPanelSelector, PointCloudPanelState\r\n} from \"../../../../../store/ui/panels/pointCloud/pointCloudPanel\";\r\nimport * as React from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst dataSelector = createSelector(\r\n    [pointCloudPanelSelector],\r\n    (filter: PointCloudPanelState) => ({\r\n        filter : filter\r\n    })\r\n)\r\n\r\nconst PointCloudPanelFilters: React.FC<{ theme: Theme }> = (props) => {\r\n    const dispatch = useAppDispatch()\r\n    const {t} = useTranslation()\r\n    const data = useSelector(dataSelector)\r\n    const filter = data.filter\r\n\r\n    return (\r\n        <PanelBodyContainer>\r\n            <PointCloudPanelLineContainer>\r\n                <TextField\r\n                    label={t('point_cloud_x_from')}\r\n                    type=\"number\"\r\n                    name={\"x-from\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterXFromLimit}\r\n                    onChange={event => {\r\n                        const value = event.target.value;\r\n                        if (isNumeric(value))\r\n                            dispatch(changeXFromLimit(value))\r\n                    }}\r\n                    style={{width: 100, height: 20}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_x_to')}\r\n                    type=\"number\"\r\n                    name={\"x-to\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterXToLimit}\r\n                    onChange={event => dispatch(changeXToLimit(event.target.value))}\r\n                    style={{width: 100, marginLeft: 24}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"/>\r\n            </PointCloudPanelLineContainer>\r\n            <PointCloudPanelLineContainer>\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_y_from')}\r\n                    type=\"number\"\r\n                    name={\"y-from\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterYFromLimit}\r\n                    onChange={event => dispatch(changeYFromLimit(event.target.value))}\r\n                    style={{width: 100, height: 20}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_y_to')}\r\n                    type=\"number\"\r\n                    name={\"y-to\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterYToLimit}\r\n                    onChange={event => dispatch(changeYToLimit(event.target.value))}\r\n                    style={{width: 100, marginLeft: 24}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"/>\r\n            </PointCloudPanelLineContainer>\r\n            <PointCloudPanelLineContainer>\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_z_from')}\r\n                    type=\"number\"\r\n                    name={\"z-from\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterZFromLimit}\r\n                    onChange={event => dispatch(changeZFromLimit(event.target.value))}\r\n                    style={{width: 100, height: 20}}\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_z_to')}\r\n                    type=\"number\"\r\n                    name={\"z-to\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterZToLimit}\r\n                    onChange={event => dispatch(changeZToLimit(event.target.value))}\r\n                    style={{width: 100, marginLeft: 24}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"/>\r\n            </PointCloudPanelLineContainer>\r\n        </PanelBodyContainer>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudPanelFilters)","import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Draggable from 'react-draggable';\r\nimport {Theme} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {\r\n    PanelContainer,\r\n    PanelHeaderContainer,\r\n    PanelHeader,\r\n    PanelHeaderText,\r\n    PanelHeaderTypography\r\n} from \"../../shared/panels/style\";\r\nimport PointCloudPanelFilters from \"../../shared/panels/PointCloudPanelFilters\";\r\nimport {AppCloseIcon} from \"../../../shared/icons\";\r\nimport {\r\n    closePointCloudPanel,\r\n    pointCloudPanelActivitySelector\r\n} from \"../../../../../store/ui/panels/pointCloud/pointCloudPanel\";\r\n\r\nconst PointCloudPanel: React.FC<{ theme: Theme }> = (props) => {\r\n    const dispatch = useAppDispatch()\r\n    const {t} = useTranslation()\r\n    const isActive = useSelector(pointCloudPanelActivitySelector)\r\n\r\n    return (\r\n        <Draggable bounds=\"parent\" handle=\"strong\" defaultPosition={{x: 16, y: 16}} grid={[25,25]}>\r\n            <PanelContainer isActive={isActive} width={257} height={240}>\r\n                <section>\r\n                    <PanelHeaderContainer>\r\n                        <PanelHeader>\r\n                            <PanelHeaderText>\r\n                                <PanelHeaderTypography\r\n                                    variant=\"subtitle1\">{t('point_cloud_filters')}</PanelHeaderTypography>\r\n                            </PanelHeaderText>\r\n                            <Tooltip title={t('close')}\r\n                                     style={{\r\n                                         float: \"right\"\r\n                                     }}>\r\n                                <label>\r\n                                    <IconButton\r\n                                        component=\"span\"\r\n                                        size=\"small\"\r\n                                        onClick={() => dispatch(closePointCloudPanel())}\r\n                                        color=\"primary\">\r\n                                        <AppCloseIcon/>\r\n                                    </IconButton>\r\n                                </label>\r\n                            </Tooltip>\r\n                        </PanelHeader>\r\n                    </PanelHeaderContainer>\r\n                    <PointCloudPanelFilters/>\r\n                </section>\r\n            </PanelContainer>\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudPanel)","import {withTheme} from \"styled-components\";\r\nimport * as React from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {schemeModeChanged, activeSchemeModeChangedSelector} from \"../../../../../store/domain/scheme/activeSchemeReducer\";\r\nimport {FormHelperText, MenuItem} from \"@material-ui/core\";\r\nimport {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {SchemeMode} from \"../../../../../data/scheme/SchemeMode\";\r\nimport { FormControlStyled, SelectStyled } from \"./style\";\r\n\r\nconst SetupSchemeMode: React.FC<{ theme: Theme }> = (_) => {\r\n    const dispatch = useAppDispatch()\r\n    const {t} = useTranslation()\r\n    const schemeMode = useSelector(activeSchemeModeChangedSelector)\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: SchemeMode }>) => {\r\n        dispatch(schemeModeChanged(event.target.value as SchemeMode))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControlStyled>\r\n                <SelectStyled\r\n                    value={schemeMode}\r\n                    onChange={handleChange}\r\n                    displayEmpty\r\n                    inputProps={{'aria-label': 'Without label'}}>\r\n                    <MenuItem value={SchemeMode.Topology}>{t('scheme_mode_topology')}</MenuItem>\r\n                    <MenuItem value={SchemeMode.RibGeometry}>{t('scheme_mode_rib_geometry')}</MenuItem>\r\n                </SelectStyled>\r\n                <FormHelperText>{t('mode')}</FormHelperText>\r\n            </FormControlStyled>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withTheme(SetupSchemeMode)","import {withTheme} from \"styled-components\";\r\nimport * as React from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {FormHelperText, MenuItem, Select} from \"@material-ui/core\";\r\nimport {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {FormControlStyled, SelectStyled} from \"./style\";\r\nimport {cameraModeChanged, cameraTargetModeSelector} from \"../../../../../store/ui/camera/cameraReducer\";\r\nimport {CameraMode} from \"../../../../types/CameraMode\";\r\n\r\nconst SetupCameraMode: React.FC<{ theme: Theme }> = (_) => {\r\n    const dispatch = useAppDispatch()\r\n    const {t} = useTranslation()\r\n    const cameraMode = useSelector(cameraTargetModeSelector)\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: CameraMode }>) => {\r\n        dispatch(cameraModeChanged(event.target.value as CameraMode))\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <FormControlStyled>\r\n                <SelectStyled\r\n                    value={cameraMode}\r\n                    onChange={handleChange}\r\n                    displayEmpty\r\n                    inputProps={{'aria-label': 'Without label'}}>\r\n                    <MenuItem value={CameraMode.Orthographic}>{t('orthographic')}</MenuItem>\r\n                    <MenuItem value={CameraMode.Perspective}>{t('perspective')}</MenuItem>\r\n                </SelectStyled>\r\n                <FormHelperText>{t('camera')}</FormHelperText>\r\n            </FormControlStyled>\r\n\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default withTheme(SetupCameraMode)","import {withTheme} from \"styled-components\";\r\nimport * as React from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Checkbox, withStyles} from \"@material-ui/core\";\r\nimport {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport {FormControlLabelStyled} from \"./style\";\r\nimport {setTargetAxisVisibility, targetAxisVisibilitySelector} from \"../../../../../store/ui/scene/sceneReducer\";\r\nimport showAxisOnTargetVector from \"../../scene/code/constructAxis\";\r\nimport {cameraTargetSelector} from \"../../../../../store/ui/camera/cameraReducer\";\r\nimport {Scene} from \"@babylonjs/core/scene\";\r\nimport {AbstractMesh} from \"@babylonjs/core\";\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n        color: green[400],\r\n        '&$checked': {\r\n            color: green[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst SetupAxis: React.FC<{ theme: Theme, scene: Scene }> = (props) => {\r\n    const dispatch = useAppDispatch()\r\n    const {t} = useTranslation()\r\n    const axisIsVisible = useSelector(targetAxisVisibilitySelector)\r\n\r\n    // @ts-ignore\r\n    const handleChange = (event) => {\r\n        dispatch(setTargetAxisVisibility(event.target.checked))\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <FormControlLabelStyled\r\n                control={\r\n                    <GreenCheckbox checked={axisIsVisible} onChange={handleChange}/>\r\n                }\r\n                label={t('showAxisOnCameraTarget')}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default withTheme(SetupAxis)","import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Draggable from 'react-draggable';\r\nimport {Theme} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {\r\n    PanelContainer,\r\n    PanelHeaderContainer,\r\n    PanelHeader,\r\n    PanelHeaderText,\r\n    PanelHeaderTypography\r\n} from \"../../shared/panels/style\";\r\nimport {AppCloseIcon} from \"../../../shared/icons\";\r\nimport {closeSchemePanel, schemePanelActivitySelector} from \"../../../../../store/ui/panels/scheme/schemePanel\";\r\nimport SetupSchemeMode from \"../../shared/panels/SetupSchemeMode\";\r\nimport SetupCameraMode from \"../../shared/panels/SetupCameraMode\";\r\nimport GreenCheckbox from \"../../shared/panels/SetupAxis\";\r\nimport {Scene} from \"@babylonjs/core/scene\";\r\nimport SetupScaleFactor from \"../../shared/panels/SetupScaleFactor\";\r\n\r\nconst SchemePanel: React.FC<{ theme: Theme, scene: Scene }> = (props) => {\r\n    const {scene} = props\r\n    const {t} = useTranslation();\r\n    const dispatch = useAppDispatch();\r\n    const isActive = useSelector(schemePanelActivitySelector);\r\n\r\n    const onClose = () => dispatch(closeSchemePanel());\r\n    return (\r\n        <Draggable bounds=\"parent\" handle=\"strong\" defaultPosition={{x: 16, y: 16}} grid={[25,25]}>\r\n            <PanelContainer isActive={isActive} width={264} height={250}>\r\n                <section>\r\n                    <PanelHeaderContainer>\r\n                        <PanelHeader>\r\n                            <PanelHeaderText>\r\n                                <PanelHeaderTypography\r\n                                    variant=\"subtitle1\">{t('scheme_settings')}</PanelHeaderTypography>\r\n                            </PanelHeaderText>\r\n                            <Tooltip title={t('close')}\r\n                                     style={{\r\n                                         float: \"right\"\r\n                                     }}>\r\n                                <label>\r\n                                    <IconButton\r\n                                        component=\"span\"\r\n                                        size=\"small\"\r\n                                        onClick={onClose}\r\n                                        color=\"primary\">\r\n                                        <AppCloseIcon/>\r\n                                    </IconButton>\r\n                                </label>\r\n                            </Tooltip>\r\n                        </PanelHeader>\r\n                    </PanelHeaderContainer>\r\n                    <SetupSchemeMode/>\r\n                    <SetupCameraMode/>\r\n                    <GreenCheckbox scene={scene}/>\r\n                    {/*<SetupScaleFactor/>*/}\r\n                </section>\r\n            </PanelContainer>\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default withTheme(SchemePanel)","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {appSizes} from \"../../theme/themeAccessors\";\r\n\r\nexport const OnCanvasContainer = styled.div<Theme>`\r\n    position: fixed;\r\n    height: calc(100vh - ${props => appSizes('header')(props) + appSizes('footer')(props) + appSizes('instrumentalPanel')(props)}px);\r\n    background: transparent;\r\n    left: 0;\r\n    top: 81px;\r\n    right: 0;     \r\n`\r\n\r\nexport const OnCanvasContainerWithEvents = styled.div<Theme>`\r\n    position: fixed;\r\n    height: calc(100vh - ${props => appSizes('header')(props) + appSizes('footer')(props) + appSizes('instrumentalPanel')(props)}px);\r\n    background: transparent;\r\n    pointer-events: none;\r\n    left: 0;\r\n    top: 81px;\r\n    right: 0;     \r\n`","import * as React from \"react\";\r\nimport {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {store, useAppDispatch} from \"../../../../../store/store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {FormControlStyled, SelectStyled} from \"./style\";\r\nimport {FormHelperText, MenuItem} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {SchemeModelType} from \"../../../../types/SchemeModelType\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {schemeActiveModelSelector, setActiveModel} from \"../../../../../store/ui/panels/models/schemeModelsPanel\";\r\nimport _ from 'lodash';\r\n\r\nconst SetupSchemeModels: React.FC<{ theme: Theme }> = (props) => {\r\n    const dispatch = useAppDispatch()\r\n    const {t} = useTranslation()\r\n\r\n    const activeModel = useSelector(schemeActiveModelSelector);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: SchemeModelType }>) => {\r\n        const value = event.target.value;\r\n\r\n        switch (value) {\r\n            case SchemeModelType.Pressure:\r\n                break;\r\n            case SchemeModelType.Air:\r\n                break;\r\n            case SchemeModelType.None:\r\n                break;\r\n        }\r\n\r\n        dispatch(setActiveModel(value));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControlStyled>\r\n                <SelectStyled\r\n                    value={activeModel}\r\n                    onChange={handleChange}\r\n                    displayEmpty\r\n                    inputProps={{'aria-label': 'Without label'}}>\r\n                    <MenuItem value={SchemeModelType.None}>{t('none')}</MenuItem>\r\n                    <MenuItem value={SchemeModelType.Pressure}>{t('pressure')}</MenuItem>\r\n                    <MenuItem value={SchemeModelType.Air}>{t('models_air')}</MenuItem>\r\n                </SelectStyled>\r\n                <FormHelperText>{t('model')}</FormHelperText>\r\n            </FormControlStyled>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withTheme(SetupSchemeModels);","import * as React from \"react\";\r\nimport {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {store, useAppDispatch} from \"../../../../../store/store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {FormControlStyled, SelectStyled} from \"./style\";\r\nimport {FormHelperText, MenuItem} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {SchemeModelType} from \"../../../../types/SchemeModelType\";\r\nimport {\r\n    activeSchemeModeChangedSelector,\r\n    addActiveModelId\r\n} from \"../../../../../store/domain/scheme/activeSchemeReducer\";\r\nimport {SchemeMode} from \"../../../../../data/scheme/SchemeMode\";\r\nimport {ColorGradient} from \"../../../../types/ColorGradient\";\r\nimport {\r\n    colorGradientChanged,\r\n    schemeModelsColorGradientSelector\r\n} from \"../../../../../store/ui/panels/models/schemeModelsPanel\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst SetupGradient: React.FC<{ theme: Theme }> = (_) => {\r\n    const dispatch = useAppDispatch()\r\n    const {t} = useTranslation()\r\n\r\n    const gradient = useSelector(schemeModelsColorGradientSelector)\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: ColorGradient }>) => {\r\n        dispatch(colorGradientChanged(event.target.value as ColorGradient));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <FormControlStyled>\r\n                <SelectStyled\r\n                    value={gradient}\r\n                    onChange={handleChange}\r\n                    displayEmpty\r\n                    inputProps={{'aria-label': 'Without label'}}>\r\n                    <MenuItem value={ColorGradient.Default}>{t('default')}</MenuItem>\r\n                    <MenuItem value={ColorGradient.Aeroset}>{t('aeroset')}</MenuItem>\r\n                    <MenuItem value={ColorGradient.Iron}>{t('iron')}</MenuItem>\r\n                </SelectStyled>\r\n                <FormHelperText>{t('gradient')}</FormHelperText>\r\n            </FormControlStyled>\r\n\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default withTheme(SetupGradient)","import * as React from \"react\";\r\nimport {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {withTheme} from \"styled-components\";\r\nimport IoC from \"../../../../../infrastructure/ioc/IoC\";\r\nimport ColorGradientService from \"../../../../../services/colorGradient/GradientService\";\r\nimport {COLOR_GRADIENT_SERVICE} from \"../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {schemeModelsColorGradientSelector} from \"../../../../../store/ui/panels/models/schemeModelsPanel\";\r\n\r\nconst ColorGradientView: React.FC<{ theme: Theme }> = (props) => {\r\n    const gradient = useSelector(schemeModelsColorGradientSelector);\r\n\r\n    const colorGradientService = IoC.get<ColorGradientService>(COLOR_GRADIENT_SERVICE);\r\n    const linearGradientCss = colorGradientService.getGradientAsCSSProperty();\r\n\r\n    return (\r\n        <div style={{background: linearGradientCss, height: 150, width: 50, marginTop: 16, marginLeft: 16}}/>\r\n    );\r\n}\r\n\r\nexport default withTheme(ColorGradientView);","import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Draggable from 'react-draggable';\r\nimport {Theme} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {\r\n    PanelContainer,\r\n    PanelHeaderContainer,\r\n    PanelHeader,\r\n    PanelHeaderText,\r\n    PanelHeaderTypography\r\n} from \"../../shared/panels/style\";\r\nimport {AppCloseIcon} from \"../../../shared/icons\";\r\nimport {Scene} from \"@babylonjs/core/scene\";\r\nimport {\r\n    closeSchemeModelsPanel,\r\n    schemeModelsPanelActivitySelector\r\n} from \"../../../../../store/ui/panels/models/schemeModelsPanel\";\r\nimport SetupSchemeModels from \"../../shared/panels/SetupSchemeModels\";\r\nimport SetupGradient from \"../../shared/panels/SetupGradient\";\r\nimport ColorGradientView from \"../../shared/panels/ColorGradientView\";\r\n\r\nconst SchemeModelsPanel: React.FC<{ theme: Theme, scene: Scene }> = (props) => {\r\n    const {scene} = props\r\n    const {t} = useTranslation();\r\n    const dispatch = useAppDispatch();\r\n    const isActive = useSelector(schemeModelsPanelActivitySelector);\r\n\r\n    const onClose = () => dispatch(closeSchemeModelsPanel());\r\n    return (\r\n        <Draggable bounds=\"parent\" handle=\"strong\" defaultPosition={{x: 16, y: 16}} grid={[25, 25]}>\r\n            <PanelContainer isActive={isActive} width={257} height={340}>\r\n                <div>\r\n                    <PanelHeaderContainer>\r\n                        <PanelHeader>\r\n                            <PanelHeaderText>\r\n                                <PanelHeaderTypography\r\n                                    variant=\"subtitle1\">{t('scheme_models')}</PanelHeaderTypography>\r\n                            </PanelHeaderText>\r\n                            <Tooltip title={t('close')}\r\n                                     style={{\r\n                                         float: \"right\"\r\n                                     }}>\r\n                                <label>\r\n                                    <IconButton\r\n                                        component=\"span\"\r\n                                        size=\"small\"\r\n                                        onClick={onClose}\r\n                                        color=\"primary\">\r\n                                        <AppCloseIcon/>\r\n                                    </IconButton>\r\n                                </label>\r\n                            </Tooltip>\r\n                        </PanelHeader>\r\n                    </PanelHeaderContainer>\r\n                    <SetupSchemeModels/>\r\n                    <SetupGradient/>\r\n                    <ColorGradientView/>\r\n                </div>\r\n            </PanelContainer>\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default withTheme(SchemeModelsPanel)","import * as React from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport PointCloudPanel from \"./pointCloud\";\r\nimport {Hidden, Theme} from \"@material-ui/core\";\r\nimport SchemePanel from \"./scheme\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {forwardRef, Ref, useImperativeHandle, useState} from \"react\";\r\nimport {DelayedInitialization, GraphicData} from \"../../../types/DelayedInitialization\";\r\nimport {Scene} from \"@babylonjs/core/scene\";\r\nimport {OnCanvasContainer, OnCanvasContainerWithEvents} from \"../shared/style\"\r\nimport SchemeModelsPanel from \"./models\";\r\n\r\nconst Panels = forwardRef((props, ref: Ref<DelayedInitialization>) => {\r\n    useImperativeHandle(ref, () => ({initialize}));\r\n    const [state, setState] = useState<{ scene: Scene | null }>({scene: null})\r\n    const {scene} = state\r\n\r\n    const initialize = (engineData: GraphicData) => {\r\n        setState({scene: engineData.scene})\r\n    }\r\n\r\n    return (\r\n        <OnCanvasContainerWithEvents>\r\n            <Hidden smDown>\r\n                <PointCloudPanel/>\r\n                <SchemePanel scene={scene}/>\r\n                <SchemeModelsPanel scene={scene}/>\r\n            </Hidden>\r\n        </OnCanvasContainerWithEvents>\r\n    );\r\n});\r\n\r\n// @ts-ignore\r\nexport default withTheme(withStyles(null)(Panels));","import {hexToRgb} from \"../../../../../utilities/color/hexToRgb\";\r\nimport {Color4, double, Engine, Scene} from \"@babylonjs/core\";\r\n\r\nexport default (engine: Engine, canvas: HTMLCanvasElement, bgColor: string): Scene => {\r\n    const scene: Scene = new Scene(engine);\r\n\r\n    const colorHex = bgColor\r\n    const color = hexToRgb(colorHex);\r\n    if (color && color !== null)\r\n        scene.clearColor = new Color4(color.r / 255, color.g / 255, color.b / 255, 1);\r\n\r\n    engine.runRenderLoop(() => {\r\n        scene.render();\r\n    });\r\n\r\n    function resizeEngine(diff: double = 0) {\r\n        const width = window.innerWidth\r\n            || document.documentElement.clientWidth\r\n            || document.body.clientWidth;\r\n\r\n        const height = window.innerHeight\r\n            || document.documentElement.clientHeight\r\n            || document.body.clientHeight;\r\n        canvas.setAttribute('width', (width - diff).toString());\r\n        canvas.setAttribute('height', (height - diff).toString());\r\n        engine.resize();\r\n    }\r\n\r\n    canvas.onresize = function () {\r\n        resizeEngine();\r\n    };\r\n    window.onresize = function () {\r\n        resizeEngine();\r\n    };\r\n\r\n\r\n    resizeEngine(1);   //Todo: remove late & hack\r\n    resizeEngine(0);   //Todo: remove late & hack\r\n\r\n    //const helper : VRExperienceHelper = scene.createDefaultVRExperience(); //VR test\r\n    return scene;\r\n}\r\n\r\n\r\n// /** Add map-like controls to an ArcRotate camera.\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {module:babylonjs/Cameras/arcRotateCamera.ArcRotateCamera} camera\r\n//  */\r\n// function AddControls(scene, camera) {\r\n//\r\n//     camera.inertia = 0.2;\r\n//     camera.lowerRadiusLimit = 1;\r\n//     camera.upperRadiusLimit = 350;\r\n//     // camera.upperBetaLimit = Math.PI / 2 - 0.1;\r\n//     camera.angularSensibilityX = camera.angularSensibilityY = 500;\r\n//\r\n//     const plane =\r\n//         BABYLON.Plane.FromPositionAndNormal(BABYLON.Vector3.Zero(), BABYLON.Axis.Y);\r\n//\r\n//     const inertialPanning = BABYLON.Vector3.Zero();\r\n//\r\n//     /** @type {BABYLON.Vector3} */\r\n//     let initialPos;\r\n//     const panningFn = () => {\r\n//         return;\r\n//         const pos = getPosition(scene, camera, plane);\r\n//         panning(pos, initialPos, camera.inertia, inertialPanning);\r\n//     };\r\n//\r\n//     const inertialPanningFn = () => {\r\n//         if (inertialPanning.x !== 0 || inertialPanning.y !== 0 || inertialPanning.z !== 0) {\r\n//             camera.target.addInPlace(inertialPanning);\r\n//             inertialPanning.scaleInPlace(camera.inertia);\r\n//             zeroIfClose(inertialPanning);\r\n//         }\r\n//     };\r\n//\r\n//     const wheelPrecisionFn = () => {\r\n//         camera.wheelPrecision = 1 / camera.radius * 1000;\r\n//     };\r\n//\r\n//     const zoomFn = (p, e) => {\r\n//         const delta = zoomWheel(p, e, camera);\r\n//         zooming(delta, scene, camera, plane, inertialPanning);\r\n//     }\r\n//\r\n//     const prvScreenPos = BABYLON.Vector2.Zero();\r\n//     const rotateFn = () => {\r\n//         return;\r\n//         rotating(scene, camera, prvScreenPos);\r\n//     };\r\n//\r\n//     const removeObservers = () => {\r\n//         scene.onPointerObservable.removeCallback(panningFn);\r\n//         scene.onPointerObservable.removeCallback(rotateFn);\r\n//     }\r\n//\r\n//     scene.onPointerObservable.add((p, e) => {\r\n//         removeObservers();\r\n//         if (p.event.button === 0) {\r\n//             initialPos = getPosition(scene, camera, plane);\r\n//             scene.onPointerObservable.add(panningFn, BABYLON.PointerEventTypes.POINTERMOVE);\r\n//         } else {\r\n//             prvScreenPos.copyFromFloats(scene.pointerX, scene.pointerY);\r\n//             scene.onPointerObservable.add(rotateFn, BABYLON.PointerEventTypes.POINTERMOVE);\r\n//         }\r\n//     }, BABYLON.PointerEventTypes.POINTERDOWN);\r\n//\r\n//     scene.onPointerObservable.add((p, e) => {\r\n//         removeObservers();\r\n//     }, BABYLON.PointerEventTypes.POINTERUP);\r\n//\r\n//     scene.onPointerObservable.add(zoomFn, BABYLON.PointerEventTypes.POINTERWHEEL);\r\n//\r\n//     scene.onBeforeRenderObservable.add(inertialPanningFn);\r\n//     scene.onBeforeRenderObservable.add(wheelPrecisionFn);\r\n//\r\n//     // stop context menu showing on canvas right click\r\n//     scene.getEngine().getRenderingCanvas().addEventListener(\"contextmenu\", (e) => {\r\n//         e.preventDefault();\r\n//     });\r\n// }\r\n//\r\n// /** Get pos on plane.\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  * @param {BABYLON.Plane} plane\r\n//  */\r\n// function getPosition(scene, camera, plane) {\r\n//     return null;\r\n//     const ray = scene.createPickingRay(\r\n//         scene.pointerX, scene.pointerY, BABYLON.Matrix.Identity(), camera, false);\r\n//     const distance = ray.intersectsPlane(plane);\r\n//\r\n//     // not using this ray again, so modifying its vectors here is fine\r\n//     return distance !== null ?\r\n//         ray.origin.addInPlace(ray.direction.scaleInPlace(distance)) : null;\r\n// }\r\n//\r\n// /** Return offsets for inertial panning given initialize and current\r\n//  * pointer positions.\r\n//  * @param {BABYLON.Vector3} newPos\r\n//  * @param {BABYLON.Vector3} initialPos\r\n//  * @param {number} inertia\r\n//  * @param {BABYLON.Vector3} ref\r\n//  */\r\n// function panning(newPos, initialPos, inertia, ref) {\r\n//     const directionToZoomLocation = initialPos.subtract(newPos);\r\n//     const panningX = directionToZoomLocation.x * (1 - inertia);\r\n//     const panningZ = directionToZoomLocation.z * (1 - inertia);\r\n//     ref.copyFromFloats(panningX, 0, panningZ);\r\n//     return ref;\r\n// };\r\n//\r\n// /** Get the wheel delta divided by the camera wheel precision.\r\n//  * @param {BABYLON.PointerInfoPre} p\r\n//  * @param {BABYLON.EventState} e\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  */\r\n// function zoomWheel(p, e, camera) {\r\n//     const event = p.event;\r\n//     event.preventDefault();\r\n//     let delta = event.wheelDelta;\r\n//     //if (event.deltaY) {\r\n//     //    delta = -event.deltaY;\r\n//     //} else if (event.wheelDelta) {\r\n//     //    delta = event.wheelDelta;\r\n//     //} else if (event.detail) {\r\n//     //    delta = -event.detail;\r\n//     //}\r\n//     delta /= camera.wheelPrecision;\r\n//     return delta;\r\n// }\r\n//\r\n// /** Zoom to pointer position. Zoom amount determined by delta.\r\n//  * @param {number} delta\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  * @param {BABYLON.Plane} plane\r\n//  * @param {BABYLON.Vector3} ref\r\n//  */\r\n// function zooming(delta, scene, camera, plane, ref) {\r\n//     // if (camera.radius - camera.lowerRadiusLimit < 1 && delta > 0) {\r\n//     //     return;\r\n//     // } else if (camera.upperRadiusLimit - camera.radius < 1 && delta < 0) {\r\n//     //     return;\r\n//     // }\r\n//     const inertiaComp = 1 - camera.inertia;\r\n//     if (camera.radius - (camera.inertialRadiusOffset + delta) / inertiaComp < camera.lowerRadiusLimit) {\r\n//         delta = (camera.radius - camera.lowerRadiusLimit) * inertiaComp - camera.inertialRadiusOffset;\r\n//     } else if (camera.radius - (camera.inertialRadiusOffset + delta) / inertiaComp >\r\n//         camera.upperRadiusLimit) {\r\n//         delta = (camera.radius - camera.upperRadiusLimit) * inertiaComp - camera.inertialRadiusOffset;\r\n//     }\r\n//\r\n//     const zoomDistance = delta / inertiaComp;\r\n//     const ratio = zoomDistance / camera.radius;\r\n//     const vec = getPosition(scene, camera, plane);\r\n//\r\n//     if (vec !== undefined && vec) {\r\n//         const directionToZoomLocation = vec.subtract(camera.target);\r\n//         const offset = directionToZoomLocation.scale(ratio);\r\n//         offset.scaleInPlace(inertiaComp);\r\n//         ref.addInPlace(offset);\r\n//     }\r\n//     camera.inertialRadiusOffset += delta;\r\n// }\r\n//\r\n// /** Rotate the camera\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {BABYLON.Vector2} prvScreenPos\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  */\r\n// function rotating(scene, camera, prvScreenPos) {\r\n//     const offsetX = scene.pointerX - prvScreenPos.x;\r\n//     const offsetY = scene.pointerY - prvScreenPos.y;\r\n//     prvScreenPos.copyFromFloats(scene.pointerX, scene.pointerY);\r\n//     changeInertialAlphaBetaFromOffsets(offsetX, offsetY, camera);\r\n// }\r\n//\r\n// /** Modifies the camera's inertial alpha and beta offsets.\r\n//  * @param {number} offsetX\r\n//  * @param {number} offsetY\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  */\r\n// function changeInertialAlphaBetaFromOffsets(offsetX, offsetY, camera) {\r\n//     const alphaOffsetDelta = offsetX / camera.angularSensibilityX;\r\n//     const betaOffsetDelta = offsetY / camera.angularSensibilityY;\r\n//     camera.inertialAlphaOffset -= alphaOffsetDelta;\r\n//     camera.inertialBetaOffset -= betaOffsetDelta;\r\n// }\r\n//\r\n// /** Sets x y or z of passed in vector to zero if less than Epsilon.\r\n//  * @param {BABYLON.Vector3} vec\r\n//  */\r\n// function zeroIfClose(vec) {\r\n//     if (Math.abs(vec.x) < BABYLON.Epsilon) {\r\n//         vec.x = 0;\r\n//     }\r\n//     if (Math.abs(vec.y) < BABYLON.Epsilon) {\r\n//         vec.y = 0;\r\n//     }\r\n//     if (Math.abs(vec.z) < BABYLON.Epsilon) {\r\n//         vec.z = 0;\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n","export const hexToRgb = (hex : string) => {\r\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n        return r + r + g + g + b + b;\r\n    });\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : null;\r\n}","import {ArcRotateCamera, Camera, Matrix, Plane, Scene, Vector3} from \"@babylonjs/core\";\r\nimport {PickingInfo} from \"@babylonjs/core/Collisions/pickingInfo\";\r\n\r\nArcRotateCamera.prototype._getViewMatrix = function () {\r\n\r\n    var cosa = Math.cos(this.alpha);\r\n    var sina = Math.sin(this.alpha);\r\n    var cosb = Math.cos(this.beta);\r\n    var sinb = Math.sin(this.beta);\r\n\r\n    if (sinb === 0) {\r\n        sinb = 0.0001;\r\n    }\r\n    // @ts-ignore\r\n    var target = this._getTargetPosition();\r\n    // @ts-ignore\r\n    target.addToRef(new Vector3(this.radius * cosa * sinb, this.radius * cosb, this.radius * sina * sinb), this._newPosition);\r\n    if (this.getScene().collisionsEnabled && this.checkCollisions) {\r\n        // @ts-ignore\r\n        this._collider.radius = this.collisionRadius;\r\n        // @ts-ignore\r\n        this._newPosition.subtractToRef(this.position, this._collisionVelocity);\r\n        // @ts-ignore\r\n        this._collisionTriggered = true;\r\n        // @ts-ignore\r\n        this.getScene().collisionCoordinator.getNewPosition(this.position, this._collisionVelocity, this._collider, 3, null, this._onCollisionPositionChange, this.uniqueId);\r\n    }\r\n    else {\r\n        // @ts-ignore\r\n        this.position.copyFrom(this._newPosition);\r\n        var up = this.upVector;\r\n        if (this.allowUpsideDown && this.beta < 0) {\r\n            up = up.clone();\r\n            up = up.negate();\r\n        }\r\n\r\n        if (this.radius < 0) {\r\n\r\n            var vec = this.position.subtract(target);\r\n            vec.normalize();\r\n\r\n            Matrix.LookAtLHToRef(this.position, this.position.add(vec), up, this._viewMatrix);\r\n\r\n        } else {\r\n\r\n            Matrix.LookAtLHToRef(this.position, target, up, this._viewMatrix);\r\n        }\r\n        // @ts-ignore\r\n        this._viewMatrix.m[12] += this.targetScreenOffset.x;\r\n        // @ts-ignore\r\n        this._viewMatrix.m[13] += this.targetScreenOffset.y;\r\n\r\n    }\r\n    return this._viewMatrix;\r\n};\r\n\r\nconst setupCamera = (canvas: HTMLCanvasElement, scene: Scene): ArcRotateCamera => {\r\n    const camera : ArcRotateCamera = new ArcRotateCamera('Camera', 0, 0, -100, new Vector3(1, 2, -3), scene);\r\n\r\n    camera.setPosition(new Vector3(0, 0, -100));\r\n    camera.target = new Vector3(0, 0, 0);\r\n    camera.panningSensibility = 200;\r\n    camera.orthoLeft = -8;\r\n    camera.orthoRight = 8;\r\n    const ratio = canvas.height / canvas.width;\r\n    camera.orthoTop = camera.orthoRight * ratio;\r\n    camera.orthoBottom = camera.orthoLeft * ratio;\r\n    camera.inputs.addMouseWheel();\r\n\r\n    camera.attachControl(canvas, false);\r\n    camera.alpha += Math.PI; // camera +180°\r\n    camera.mode = Camera.ORTHOGRAPHIC_CAMERA;\r\n\r\n    camera.wheelPrecision = 100.0;\r\n    camera.pinchPrecision = 30;\r\n    camera.minZ = 0.01;\r\n    camera.maxZ = 1000;\r\n\r\n    camera.lowerRadiusLimit = 20;\r\n    camera.upperRadiusLimit = 20;\r\n\r\n    let plane: Plane;\r\n    let pickOrigin: PickingInfo;\r\n    let isPanning = false;\r\n    scene.onPointerDown = (evt) => {\r\n        if (evt.ctrlKey) {\r\n            const pickResult = scene.pick(scene.pointerX, scene.pointerY) as PickingInfo;\r\n            if (pickResult.pickedMesh) {\r\n                let normal = camera.position.subtract(pickResult.pickedPoint as Vector3).normalize();\r\n                plane = Plane.FromPositionAndNormal(pickResult.pickedPoint as Vector3, normal);\r\n                // @ts-ignore\r\n                pickOrigin = pickResult.pickedPoint;\r\n                isPanning = true;\r\n                camera.detachControl(canvas);\r\n            }\r\n        }\r\n    };\r\n\r\n    scene.onPointerUp = () => {\r\n        isPanning = false;\r\n        camera.attachControl(canvas, true, true);\r\n    };\r\n\r\n    const identity = Matrix.Identity();\r\n    scene.onPointerMove = (evt) => {\r\n        if (isPanning) {\r\n            let ray = scene.createPickingRay(scene.pointerX, scene.pointerY, identity, camera, false);\r\n            let distance = ray.intersectsPlane(plane);\r\n\r\n            if (distance === null) {\r\n                return;\r\n            }\r\n            let pickedPoint = ray.direction.scale(distance).add(ray.origin);\r\n            // @ts-ignore\r\n            let diff = pickedPoint.subtract(pickOrigin);\r\n            camera.target.subtractInPlace(diff);\r\n        }\r\n    };\r\n\r\n\r\n    return camera;\r\n}\r\n\r\nexport default setupCamera","import {Camera, Light, PointLight, Scene, Vector3} from \"@babylonjs/core\";\r\n\r\nexport default (scene: Scene, camera: Camera): PointLight => {\r\n    const light = new PointLight(\"Omni\", new Vector3(10, 50, 50), scene);\r\n    //const light = new HemisphericLight(\"light\", new Vector3(0, 1, 0), scene);\r\n    //light.intensity = 0.7\r\n\r\n    // scene.shadowsEnabled = false;\r\n    // light.specular.copyFromFloats( 0.05, 0.05, 0.05)\r\n    // light.groundColor.copyFromFloats(0.05, 0.05, 0.05);\r\n\r\n    scene.registerBeforeRender(function () {\r\n        light.position = camera.position;\r\n    });\r\n\r\n    return light;\r\n}","import {ArcRotateCamera, Camera, Engine, PointerEventTypes, Scene, Vector3} from \"@babylonjs/core\";\r\n\r\nlet totalZoom = 0;\r\nlet zoomTarget: Vector3 | null = null;\r\n\r\nexport const CanvasZoom = (deltaValue: any, camera: Camera) => {\r\n    const delta = (Math.max(-1, Math.min(1, (deltaValue)))) * 0.9;\r\n    if (delta > 0 && totalZoom < 50 || delta < 0) {\r\n        totalZoom += delta;\r\n        zoom2DView(camera, delta, zoomTarget);\r\n    }\r\n}\r\n\r\nexport default function setupZoom(scene: Scene, engine: Engine, camera: Camera) {\r\n    scene.onPointerObservable.add((eventData, _) => {\r\n        const event = eventData.event as any;\r\n        CanvasZoom((event.wheelDelta || -event.detail || event.deltaY), camera);\r\n    }, PointerEventTypes.POINTERWHEEL);\r\n\r\n    scene.onPointerObservable.add(() => {\r\n        zoomTarget = Vector3.Unproject(\r\n            new Vector3(scene.pointerX, scene.pointerY, 0),\r\n            engine.getRenderWidth(),\r\n            engine.getRenderHeight(),\r\n            camera.getWorldMatrix(),\r\n            camera.getViewMatrix(),\r\n            camera.getProjectionMatrix()\r\n        );\r\n    }, PointerEventTypes.POINTERMOVE);\r\n}\r\n\r\nexport const zoom2DView = (camera: Camera, delta: number, zoomTarget: Vector3 | null) => {\r\n    const zoomingOut = delta < 0;\r\n\r\n    if (zoomTarget) {\r\n        const totalX = Math.abs(camera.orthoLeft! - camera.orthoRight!);\r\n        const totalY = Math.abs(camera.orthoTop! - camera.orthoBottom!);\r\n\r\n        const aspectRatio = totalY / totalX;\r\n\r\n        {\r\n            const fromCoord = camera.orthoLeft! - zoomTarget.x;\r\n            const ratio = fromCoord / totalX;\r\n            camera.orthoLeft! -= ratio * delta;\r\n        }\r\n\r\n        {\r\n            const fromCoord = camera.orthoRight! - zoomTarget.x;\r\n            const ratio = fromCoord / totalX;\r\n            camera.orthoRight! -= ratio * delta;\r\n        }\r\n\r\n        {\r\n            const fromCoord = camera.orthoTop! - zoomTarget.y;\r\n            const ratio = fromCoord / totalY;\r\n            camera.orthoTop! -= ratio * delta * aspectRatio;\r\n        }\r\n\r\n        {\r\n            const fromCoord = camera.orthoBottom! - zoomTarget.y;\r\n            const ratio = fromCoord / totalY;\r\n            camera.orthoBottom! -= ratio * delta * aspectRatio;\r\n        }\r\n\r\n        // decrease pan sensitivity the closer the zoom level.\r\n        (camera as ArcRotateCamera).panningSensibility = 6250 / Math.abs(totalX / 2);\r\n    }\r\n};","export enum BottomDrawerContentType{\r\n    None,\r\n    PointCloudFilters,\r\n    SchemeSettings,\r\n}","import React, {forwardRef, Ref, useImperativeHandle, useState} from 'react';\r\nimport {DelayedInitialization, GraphicData} from \"../../../types/DelayedInitialization\";\r\nimport withTheme from \"@material-ui/core/styles/withTheme\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {Scene} from '@babylonjs/core/scene';\r\nimport {ArcRotateCamera} from \"@babylonjs/core\";\r\n\r\nconst AppScheme = forwardRef((props, ref: Ref<DelayedInitialization>) => {\r\n    useImperativeHandle(ref, () => ({initialize}));\r\n\r\n    const [state, setState] = useState<{ scene: Scene | null, camera: ArcRotateCamera | null }>({\r\n        scene: null,\r\n        camera: null\r\n    })\r\n    const {scene, camera} = state\r\n\r\n    const initialize = async (engineData: GraphicData) => {\r\n        const {scene} = engineData\r\n        const camera = engineData.camera as ArcRotateCamera\r\n        setState({scene, camera})\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        </React.Fragment>\r\n    )\r\n});\r\n\r\n// @ts-ignore\r\nexport default withTheme(withStyles(null)(AppScheme));\r\n","import {AbstractMesh, Color3, DynamicTexture, Mesh, Scene, StandardMaterial, Vector3} from \"@babylonjs/core\";\r\n\r\nconst constructAxis = (sceneBase: Scene, size: number, vector: Vector3): AbstractMesh[] => {\r\n\r\n    const makeTextPlane = function (text: string, color: string, size: number, scene: Scene) {\r\n        const dynamicTexture = new DynamicTexture(\"DynamicTexture\", 50, scene, true);\r\n        dynamicTexture.hasAlpha = true;\r\n        dynamicTexture.drawText(text, 5, 40, \"bold 36px Arial\", color, \"transparent\", true);\r\n        const plane = mesh.CreatePlane(\"TextPlane\", size, scene, true);\r\n        let standardMaterial: StandardMaterial = new StandardMaterial(\"TextPlaneMaterial\", scene);\r\n        standardMaterial.specularColor = new Color3(0, 0, 0);\r\n        standardMaterial.diffuseTexture = dynamicTexture;\r\n        plane.material = standardMaterial;\r\n        plane.material.backFaceCulling = false;\r\n        return plane;\r\n    };\r\n\r\n    const mesh = Mesh;\r\n\r\n    const axisX = mesh.CreateLines(\"axisX\", [\r\n        Vector3.Zero(), new Vector3(size, 0, 0), new Vector3(size * 0.95, 0.05 * size, 0),\r\n        new Vector3(size, 0, 0), new Vector3(size * 0.95, -0.05 * size, 0)\r\n    ], sceneBase);\r\n    axisX.color = new Color3(1, 0, 0);\r\n    const xChar = makeTextPlane(\"X\", \"red\", size / 10, sceneBase);\r\n    xChar.position = new Vector3(vector.x + 0.9 * size, vector.y + -0.05 * size, vector.z);\r\n    const axisY = mesh.CreateLines(\"axisY\", [\r\n        Vector3.Zero(), new Vector3(0, size, 0), new Vector3(-0.05 * size, size * 0.95, 0),\r\n        new Vector3(0, size, 0), new Vector3(0.05 * size, size * 0.95, 0)\r\n    ], sceneBase);\r\n    axisY.color = new Color3(0, 1, 0);\r\n    const yChar = makeTextPlane(\"Y\", \"green\", size / 10, sceneBase);\r\n    yChar.position = new Vector3(vector.x, vector.y + 0.9 * size, vector.z + -0.05 * size);\r\n    const axisZ = mesh.CreateLines(\"axisZ\", [\r\n        Vector3.Zero(), new Vector3(0, 0, size), new Vector3(0, -0.05 * size, size * 0.95),\r\n        new Vector3(0, 0, size), new Vector3(0, 0.05 * size, size * 0.95)\r\n    ], sceneBase);\r\n    axisZ.color = new Color3(0, 0, 1);\r\n    const zChar = makeTextPlane(\"Z\", \"blue\", size / 10, sceneBase);\r\n    zChar.position = new Vector3(vector.x, vector.y + 0.05 * size, vector.z + 0.9 * size);\r\n\r\n    axisX.position = vector;\r\n    axisY.position = vector;\r\n    axisZ.position = vector;\r\n    return [axisX, axisY, axisZ, xChar, yChar, zChar];\r\n}\r\n\r\nexport default constructAxis;","import * as React from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Scene} from \"@babylonjs/core/scene\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {cameraTargetChanged, cameraTargetSelector} from \"../../../../../store/ui/camera/cameraReducer\";\r\nimport {AbstractMesh, ArcRotateCamera, Matrix, Vector3} from \"@babylonjs/core\";\r\nimport {targetAxisVisibilitySelector} from \"../../../../../store/ui/scene/sceneReducer\";\r\nimport constructAxis from \"../../scene/code/constructAxis\";\r\nimport {OnCanvasContainer} from \"../../shared/style\";\r\nimport {useEffect} from \"react\";\r\nimport IoC from \"../../../../../infrastructure/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {\r\n    CANVAS_MOUSE_CLICK_EVENT,\r\n    KEY_PRESSED_EVENT,\r\n    KEY_UNPRESSED_EVENT\r\n} from \"../../../../../services/eventBus/EventTypes\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\n\r\nlet axisMeshes: AbstractMesh[] | null = null\r\n\r\nconst AxisSubLayer: React.FC<{ theme: Theme, scene: Scene }> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    const {scene} = props\r\n    let isKeyPressed: boolean = false\r\n\r\n    const cameraTarget = useSelector(cameraTargetSelector)\r\n    const axisIsVisible = useSelector(targetAxisVisibilitySelector)\r\n\r\n    if (axisIsVisible && scene && cameraTarget) {\r\n        axisMeshes = constructAxis(scene, 2, new Vector3(cameraTarget.x, cameraTarget.y, cameraTarget.z));\r\n    } else if (!axisIsVisible && scene && axisMeshes) {\r\n        for (const mesh of axisMeshes) {\r\n            mesh.dispose()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE);\r\n        eventBus.subscribe(KEY_PRESSED_EVENT, OnKeyPressed);\r\n        eventBus.subscribe(KEY_UNPRESSED_EVENT, OnKeyUnPressed);\r\n        eventBus.subscribe(CANVAS_MOUSE_CLICK_EVENT, canvasClickHandle)\r\n\r\n        return () => {\r\n            eventBus.unsubscribe(KEY_PRESSED_EVENT, OnKeyPressed);\r\n            eventBus.unsubscribe(KEY_UNPRESSED_EVENT, OnKeyUnPressed);\r\n            eventBus.unsubscribe(CANVAS_MOUSE_CLICK_EVENT, canvasClickHandle);\r\n        }\r\n    }, [scene, cameraTarget, axisIsVisible])\r\n\r\n    function changeCameraTarget(mouseEvent: MouseEvent) {\r\n        const mousePosition = new Vector3(mouseEvent.screenX, mouseEvent.screenY, 0);\r\n        const engine = scene.getEngine();\r\n        const vector = Vector3.Unproject(\r\n            mousePosition,\r\n            engine.getRenderWidth(),\r\n            engine.getRenderHeight(),\r\n            Matrix.Identity(),\r\n            scene.getViewMatrix(),\r\n            scene.getProjectionMatrix());\r\n        dispatch(cameraTargetChanged({x: vector.x, y: vector.y, z: vector.z}));\r\n        isKeyPressed = false;\r\n        document.documentElement.style.cursor = \"default\";\r\n\r\n        const activeCamera = scene.activeCamera as ArcRotateCamera;\r\n        activeCamera.target = vector;\r\n    }\r\n\r\n    const canvasClickHandle = (data: any) => {\r\n        if (!isKeyPressed || !scene) {\r\n            return;\r\n        }\r\n\r\n        const mouseEvent = data[0] as MouseEvent;\r\n        changeCameraTarget(mouseEvent)\r\n    }\r\n\r\n    const OnKeyPressed = (keys: string[]) => {\r\n        const key = keys[0];\r\n\r\n        if (key === 'c' || key === 'C') {\r\n            isKeyPressed = true;\r\n            document.documentElement.style.cursor = \"crosshair\";\r\n        }\r\n    }\r\n\r\n    const OnKeyUnPressed = (keys: string[]) => {\r\n        const key = keys[0];\r\n\r\n        if (key === 'c' || key === 'C') {\r\n            isKeyPressed = false;\r\n            document.documentElement.style.cursor = \"default\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <OnCanvasContainer/>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default withTheme(AxisSubLayer);","import * as React from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {forwardRef, Ref, useImperativeHandle, useState} from \"react\";\r\nimport {DelayedInitialization, GraphicData} from \"../../../types/DelayedInitialization\";\r\nimport {Scene} from \"@babylonjs/core/scene\";\r\nimport AxisSubLayer from \"./axisSubLayer\";\r\nimport {OnCanvasContainerWithEvents} from \"../shared/style\"\r\n\r\nconst TopLayer = forwardRef((props, ref: Ref<DelayedInitialization>) => {\r\n    useImperativeHandle(ref, () => ({initialize}));\r\n    const [state, setState] = useState<{ scene: Scene | null }>({scene: null})\r\n    const {scene} = state\r\n\r\n    const initialize = (engineData: GraphicData) => {\r\n        setState({scene: engineData.scene})\r\n    }\r\n\r\n    return (\r\n        <OnCanvasContainerWithEvents>\r\n            <AxisSubLayer scene={scene}/>\r\n        </OnCanvasContainerWithEvents>\r\n    );\r\n});\r\n\r\n// @ts-ignore\r\nexport default withTheme(withStyles(null)(TopLayer));","import {AbstractMesh, Mesh, MeshBuilder, Scene, StandardMaterial} from \"@babylonjs/core\";\r\nimport {GradientMaterial} from \"@babylonjs/materials\";\r\nimport {Resources} from \"../../../../../services/infrastructure/Resources\";\r\n\r\nconst setupResources = (scene: Scene): Resources => {\r\n    const meshTopology = new Mesh(\"Topology rib base mesh\", scene);\r\n    meshTopology.visibility = 0;\r\n    const meshGeometry = new Mesh(\"Geometry rib base mesh\", scene);\r\n    meshGeometry.visibility = 0;\r\n    const nodeBaseMesh = MeshBuilder.CreateSphere(`Node base mesh`,\r\n        {\r\n            diameter: 0.15,\r\n            updatable: true\r\n        }, scene);\r\n    nodeBaseMesh.visibility = 0;\r\n\r\n    return {\r\n        materials: {\r\n            ribGradientMaterial: new GradientMaterial(\"Gradient material\", scene),\r\n            ribMaterial: new StandardMaterial(\"Rib material\", scene),\r\n            nodeMaterial: new StandardMaterial(\"Node material\", scene),\r\n        },\r\n        baseMeshes: {\r\n            nodeBaseMesh: nodeBaseMesh,\r\n            topologyRibBaseMesh: meshTopology,\r\n            geometryRibBaseMesh: meshGeometry\r\n        }\r\n    }\r\n}\r\n\r\nexport default setupResources;","import React, {Component, useEffect, useMemo, useRef, useState} from 'react';\r\nimport 'pepjs';\r\nimport isCanvasSupported from \"../../../../utilities/dom/isCanvasSupported\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Canvas} from \"./style\";\r\nimport PointCloud from \"../pointCloudSystem\";\r\nimport {Hidden, Theme} from \"@material-ui/core\";\r\nimport Panels from \"../panels\";\r\nimport {ThemeColors} from \"../../theme/ThemeColors\";\r\nimport {themeColor} from \"../../theme/themeAccessors\";\r\nimport {Engine} from \"@babylonjs/core/Engines/engine\";\r\nimport setupScene from \"./code/setupScene\";\r\nimport {ArcRotateCamera, Camera, Light, Scene} from \"@babylonjs/core\";\r\nimport setupCamera from \"./code/setupCamera\";\r\nimport setupLight from \"./code/setupLight\";\r\nimport setupZoom from \"./code/setupZoom\";\r\nimport AppScheme from \"../scheme\";\r\nimport {DelayedInitialization, GraphicData} from \"../../../types/DelayedInitialization\";\r\nimport TopLayer from \"../topLayer\";\r\nimport IoC from \"../../../../infrastructure/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE, INFRASTRUCTURE_SERVICE} from \"../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {CANVAS_MOUSE_CLICK_EVENT} from \"../../../../services/eventBus/EventTypes\";\r\nimport setupEnvironment from \"./code/setupEnvironment\";\r\nimport InfrastructureService from \"../../../../services/infrastructure/InfrastructureService\";\r\nimport setupResources from \"./code/setupResources\";\r\n\r\nconst AppScene: React.FC<{ theme: Theme }> = (props) => {\r\n    const pointCloudEl = useRef<DelayedInitialization>(null)\r\n    const schemeEl = useRef<DelayedInitialization>(null)\r\n    const panelsEl = useRef<DelayedInitialization>(null)\r\n    const topLayerEl = useRef<DelayedInitialization>(null)\r\n    const canvasEl = useRef<HTMLCanvasElement>(null)\r\n\r\n    useEffect(() => {\r\n        if (canvasEl.current)\r\n            initialize(canvasEl.current)\r\n\r\n        return () => {\r\n            if (canvasEl.current)\r\n                canvasEl.current.onclick = null;\r\n        }\r\n    }, [])\r\n\r\n    const initialize = async (canvas: HTMLCanvasElement) => {\r\n        if (!isCanvasSupported()) {\r\n            console.error('Canvas is not supported!');\r\n            alert('Canvas is not supported!');\r\n            return\r\n        }\r\n\r\n        const engine: Engine = new Engine(canvas, true);\r\n        const bgColor = themeColor(ThemeColors.lightGraySecond)(props);\r\n        const scene: Scene = setupScene(engine, canvas, bgColor);\r\n        const camera: ArcRotateCamera = setupCamera(canvas, scene);\r\n        const light = setupLight(scene, camera);\r\n        const resources = setupResources(scene);\r\n        setupZoom(scene, engine, camera);\r\n\r\n        const infrastructureService = IoC.get<InfrastructureService>(INFRASTRUCTURE_SERVICE);\r\n        infrastructureService.engine = engine;\r\n        infrastructureService.scene = scene;\r\n        infrastructureService.camera = camera;\r\n        infrastructureService.light = light;\r\n        infrastructureService.resources = resources;\r\n\r\n        const engineData: GraphicData = {\r\n            camera: camera,\r\n            canvas: canvas,\r\n            scene: scene\r\n        };\r\n\r\n        if (schemeEl.current)\r\n            schemeEl.current.initialize(engineData)\r\n\r\n        if (pointCloudEl.current)\r\n            pointCloudEl.current.initialize(engineData)\r\n\r\n        if (panelsEl.current)\r\n            panelsEl.current.initialize(engineData)\r\n\r\n        if (topLayerEl.current)\r\n            topLayerEl.current.initialize(engineData)\r\n\r\n        canvas.onclick = canvasClickHandle;\r\n    }\r\n\r\n    const canvasClickHandle = (event: MouseEvent) => {\r\n        const eventBusService = IoC.get<EventBusService>(EVENT_BUS_SERVICE);\r\n        eventBusService.send(CANVAS_MOUSE_CLICK_EVENT, event)\r\n    }\r\n\r\n    return (\r\n        <div id=\"canvasContainer\">\r\n            <Canvas ref={canvasEl}/>\r\n            <AppScheme ref={schemeEl}/>\r\n            <PointCloud ref={pointCloudEl}/>\r\n            <Panels ref={panelsEl}/>\r\n            <TopLayer ref={topLayerEl}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withTheme(AppScene);\r\n","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../../../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../../../theme/themeAccessors\";\r\n\r\nexport const HeaderMobilePanelContainer = styled.div<Theme>`\r\nbackground: ${themeColor(ThemeColors.lightGray)};\r\nheight: ${appSizes(\"headerMobile\")}px;\r\nflexGrow: 1;\r\n`\r\n","import ListItem from \"@material-ui/core/ListItem\";\r\nimport {ListItemIcon, Theme} from \"@material-ui/core\";\r\nimport BlurOnIcon from \"@material-ui/icons/BlurOn\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {ExpandLess, ExpandMore, StarBorder} from \"@material-ui/icons\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport List from \"@material-ui/core/List\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {withTheme} from \"styled-components\";\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\nimport {\r\n    pointCloudLoadFile\r\n} from \"../../../../../../../store/ui/sections/pointCloud/pointCloudSection\";\r\nimport {useAppDispatch} from \"../../../../../../../store/store\";\r\nimport IoC from \"../../../../../../../infrastructure/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {CLOSE_DRAWER_EVENT, OPEN_BOTTOM_DRAWER_EVENT} from \"../../../../../../../services/eventBus/EventTypes\";\r\nimport {BottomDrawerContentType} from \"../../bottom/code/BottomDrawerContentType\";\r\nimport {\r\n    AppListItemIcon,\r\n    AppExpandLess,\r\n    AppExpandMoreIcon,\r\n    AppPublishIcon,\r\n    AppOpenPointCloudFiltersIcon,\r\n    AppPointCloudIcon,\r\n    AppClearPointCloudIcon\r\n} from \"../../../../../shared/icons\";\r\nimport {themeColor} from \"../../../../../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../../../../../theme/ThemeColors\";\r\n\r\nconst PointCloudMenuItem: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation()\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [state, setState] = useState({\r\n        subMenuIsOpen: false\r\n    })\r\n    const {subMenuIsOpen} = state\r\n\r\n    const handleClick = () => {\r\n        setState({subMenuIsOpen: !subMenuIsOpen});\r\n    };\r\n\r\n    const openPanelPointCloudFiltersClickHandle = () => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.send(OPEN_BOTTOM_DRAWER_EVENT, {contentType: BottomDrawerContentType.PointCloudFilters})\r\n        eventBus.send(CLOSE_DRAWER_EVENT, {})\r\n    };\r\n    const btnColor = themeColor(ThemeColors.mediumGray)(props)\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemIcon>\r\n                    <AppPointCloudIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary={t('point_cloud')}/>\r\n                {subMenuIsOpen ? <AppExpandLess/> : <AppExpandMoreIcon/>}\r\n            </ListItem>\r\n            <Collapse in={subMenuIsOpen} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button style={{paddingLeft: 32}}>\r\n                        <Fragment>\r\n                            <input\r\n                                color=\"primary\"\r\n                                type=\"file\"\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();\r\n                                    const file: File = e.target.files?.[0] as File;\r\n                                    if (file && file !== undefined) {\r\n                                        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n                                        eventBus.send(CLOSE_DRAWER_EVENT, {})\r\n                                        dispatch(pointCloudLoadFile(file));\r\n                                    }\r\n                                }}\r\n                                id=\"icon-button-file\"\r\n                                style={{display: 'none'}}/>\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <ListItemIcon>\r\n                                    <AppPublishIcon style={{\r\n                                        color: btnColor\r\n                                    }}/>\r\n                                </ListItemIcon>\r\n                            </label>\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <ListItemText primary={t('load_file_with_point_cloud')}/>\r\n                            </label>\r\n                        </Fragment>\r\n\r\n                    </ListItem>\r\n                    <ListItem button style={{paddingLeft: 32}}>\r\n                        <AppListItemIcon\r\n                            onClick={openPanelPointCloudFiltersClickHandle}>\r\n                            <AppOpenPointCloudFiltersIcon style={{\r\n                                color: btnColor\r\n                            }}/>\r\n                        </AppListItemIcon>\r\n                        <ListItemText\r\n                            onClick={openPanelPointCloudFiltersClickHandle}\r\n                            primary={t('open_panel_point_cloud_filters')}/>\r\n                    </ListItem>\r\n                    <ListItem button style={{paddingLeft: 32}}>\r\n                        <AppListItemIcon>\r\n                            <AppClearPointCloudIcon style={{\r\n                                color: btnColor\r\n                            }}/>\r\n                        </AppListItemIcon>\r\n                        <ListItemText\r\n                            primary={t('point_cloud_clear')}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudMenuItem)\r\n","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {themeColor} from \"../../../../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../../../../theme/ThemeColors\";\r\n\r\nexport const DrawerContainer = styled.section<Theme>`\r\nwidth : 250px;\r\n`\r\nexport const DrawerHeader = styled.div<Theme>`\r\ndisplay: flex;\r\njustify-content: flex-end;\r\nalign-items: center;\r\npadding: ${props => props.theme.spacing(0, 1)};\r\n\r\n${props => props.theme.breakpoints.up(\"sm\")} {\r\n      height: 104px;\r\n}\r\n${props => props.theme.breakpoints.down(\"sm\")} {\r\n       height: 56px;\r\n}\r\n`\r\n\r\nexport const DrawerHeaderTitle = styled(Typography)`\r\n color: ${themeColor(ThemeColors.darkBlue)};\r\n margin-right: auto;\r\n margin-left: 16px;\r\n`","import * as React from \"react\";\r\nimport IoC from \"../../../infrastructure/ioc/IoC\";\r\nimport VersionService from \"../../../services/version/VersionService\";\r\nimport {VERSION_SERVICE} from \"../../../infrastructure/ioc/ServiceTypes\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst loadVersion = () => {\r\n    const versionService = IoC.get<VersionService>(VERSION_SERVICE)\r\n    return versionService.GetVersion();\r\n}\r\nconst Version: React.FC<{ isDark: boolean }> = (props) => {\r\n    const {t} = useTranslation()\r\n    const {isDark} = props\r\n    return (\r\n        <div style={{\r\n            color: isDark ? \"black\" : \"white\"\r\n        }}>     {t('version')}\r\n            : {loadVersion()}\r\n        </div>\r\n    );\r\n}\r\nexport default Version;","import ListItem from \"@material-ui/core/ListItem\";\r\nimport {ListItemIcon, Theme} from \"@material-ui/core\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport List from \"@material-ui/core/List\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {useAppDispatch} from \"../../../../../../../store/store\";\r\nimport IoC from \"../../../../../../../infrastructure/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {CLOSE_DRAWER_EVENT, OPEN_BOTTOM_DRAWER_EVENT} from \"../../../../../../../services/eventBus/EventTypes\";\r\nimport {BottomDrawerContentType} from \"../../bottom/code/BottomDrawerContentType\";\r\nimport {\r\n    AppOpenPointCloudFiltersIcon,\r\n    AppClearPointCloudIcon,\r\n    AppSchemeIcon,\r\n    AppExpandLess,\r\n    AppExpandMoreIcon,\r\n    AppListItemIcon,\r\n    AppPublishIcon,\r\n    AppSettingsIcon\r\n} from \"../../../../../shared/icons\";\r\nimport {themeColor} from \"../../../../../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../../../../../theme/ThemeColors\";\r\nimport {schemeLoadFile} from \"../../../../../../../store/ui/sections/scheme/schemeSection\";\r\n\r\nconst SchemeMenuItem: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation()\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [state, setState] = useState({\r\n        subMenuIsOpen: false\r\n    })\r\n    const {subMenuIsOpen} = state\r\n\r\n    const handleClick = () => {\r\n        setState({subMenuIsOpen: !subMenuIsOpen});\r\n    };\r\n\r\n    const openPanelSchemeSettingsClickHandle = () => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.send(OPEN_BOTTOM_DRAWER_EVENT, {contentType: BottomDrawerContentType.SchemeSettings})\r\n        eventBus.send(CLOSE_DRAWER_EVENT, {})\r\n    };\r\n    const btnColor = themeColor(ThemeColors.mediumGray)(props)\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemIcon>\r\n                    <AppSchemeIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary={t('scheme')}/>\r\n                {subMenuIsOpen ? <AppExpandLess/> : <AppExpandMoreIcon/>}\r\n            </ListItem>\r\n            <Collapse in={subMenuIsOpen} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button style={{paddingLeft: 32}}>\r\n                        <Fragment>\r\n                            <input\r\n                                color=\"primary\"\r\n                                type=\"file\"\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();\r\n                                    const file: File = e.target.files?.[0] as File;\r\n                                    if (file && file !== undefined) {\r\n                                        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n                                        eventBus.send(CLOSE_DRAWER_EVENT, {})\r\n                                        dispatch(schemeLoadFile(file));\r\n                                        e.target.value = \"\";\r\n                                    }\r\n                                }}\r\n                                id=\"icon-button-file\"\r\n                                style={{display: 'none'}}/>\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <ListItemIcon>\r\n                                    <AppPublishIcon style={{\r\n                                        color: btnColor\r\n                                    }}/>\r\n                                </ListItemIcon>\r\n                            </label>\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <ListItemText primary={t('load_file_with_scheme')}/>\r\n                            </label>\r\n                        </Fragment>\r\n                    </ListItem>\r\n                    <ListItem button style={{paddingLeft: 32}}>\r\n                        <AppListItemIcon\r\n                            onClick={openPanelSchemeSettingsClickHandle}>\r\n                            <AppSettingsIcon style={{\r\n                                color: btnColor\r\n                            }}/>\r\n                        </AppListItemIcon>\r\n                        <ListItemText\r\n                            onClick={openPanelSchemeSettingsClickHandle}\r\n                            primary={t('scheme_settings')}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withTheme(SchemeMenuItem)\r\n","import {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport IoC from \"../../../../../../infrastructure/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {CLOSE_DRAWER_EVENT} from \"../../../../../../services/eventBus/EventTypes\";\r\nimport PointCloudMenuItem from \"./pointCloudMenuItem\";\r\nimport {DrawerContainer, DrawerHeader, DrawerHeaderTitle} from \"./style\";\r\nimport Version from \"../../../../version\";\r\nimport { AppArrowCloseLeft } from \"../../../../shared/icons\";\r\nimport SchemeMenuItem from \"./schemeMenuItem\";\r\n\r\ninterface DrawerPanelProps {\r\n    theme: Theme,\r\n    isOpen: boolean\r\n}\r\n\r\nconst DrawerLeftPanel: React.FC<DrawerPanelProps> = (props) => {\r\n    const {t} = useTranslation();\r\n\r\n    const [state, setState] = useState({\r\n        isOpen: false\r\n    });\r\n    const {isOpen} = state;\r\n\r\n    useEffect(() => {\r\n            setState({isOpen: props.isOpen})\r\n        }, [props.isOpen]\r\n    )\r\n\r\n    const handleDrawerClose = () => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.send(CLOSE_DRAWER_EVENT, {})\r\n    }\r\n\r\n    return (\r\n        <Drawer anchor=\"left\"\r\n                open={isOpen}\r\n                onClose={handleDrawerClose}>\r\n            <DrawerContainer>\r\n                <DrawerHeader>\r\n                    <DrawerHeaderTitle variant=\"h5\">{t('aeroset')}</DrawerHeaderTitle>\r\n                    <Tooltip title={t('close')}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            <AppArrowCloseLeft onClick={handleDrawerClose}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </DrawerHeader>\r\n                <Divider/>\r\n                <List\r\n                    component=\"nav\"\r\n                    aria-labelledby=\"nested-list-subheader\"\r\n                    style={{width: '100%'}}\r\n                >\r\n                    <SchemeMenuItem/>\r\n                    <PointCloudMenuItem/>\r\n                </List>\r\n                <div style={{position:\"absolute\", bottom: 8, left: 8}}>\r\n                    <Version isDark={true}/>\r\n                </div>\r\n            </DrawerContainer>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default withTheme(DrawerLeftPanel)","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\n\r\nexport const DrawerBottomContainer = styled.section<Theme>`\r\nheight : 270px;\r\nalign-content: center;\r\n`\r\nexport const DrawerBottomHeader = styled.div<Theme>`\r\ndisplay: flex;\r\nvertical-align: center;\r\njustify-content: flex-end;\r\nalign-items: center;\r\npadding: ${props => props.theme.spacing(0, 1)};\r\n`\r\n\r\nexport const MobilePanelContainer = styled.div<Theme>`\r\nvisibility: ${props => {\r\n    // @ts-ignore\r\n    return (props.currentType && props.stateType && props.currentType.valueOf() === props.stateType.valueOf()) ? `visible` : `collapse`;\r\n}};\r\n\r\n`","import React from \"react\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport PointCloudPanelFilters from \"../../../shared/panels/PointCloudPanelFilters\";\r\nimport { PanelMobileContainer } from \"../../../shared/panels/style\";\r\n\r\nconst PointCloudPanelMobile: React.FC<{ theme: Theme }> = (props) => {\r\n    return (\r\n        <PanelMobileContainer>\r\n            <PointCloudPanelFilters/>\r\n        </PanelMobileContainer>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudPanelMobile)","import React from \"react\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport SchemeSettings from \"../../../shared/panels/SetupSchemeMode\";\r\nimport { PanelMobileContainer } from \"../../../shared/panels/style\";\r\n\r\nconst SchemePanelMobile: React.FC<{ theme: Theme }> = (props) => {\r\n    return (\r\n        <PanelMobileContainer>\r\n            <SchemeSettings/>\r\n        </PanelMobileContainer>\r\n    )\r\n}\r\n\r\nexport default withTheme(SchemePanelMobile)","import {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {DrawerBottomContainer, DrawerBottomHeader, MobilePanelContainer} from \"./style\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport IoC from \"../../../../../../infrastructure/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {OPEN_BOTTOM_DRAWER_EVENT} from \"../../../../../../services/eventBus/EventTypes\";\r\nimport {BottomDrawerContentType} from \"./code/BottomDrawerContentType\";\r\nimport {AppDivider} from \"../../../../shared/style\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PointCloudPanelMobile from \"../../panels/pointCloud\";\r\nimport SchemePanelMobile from \"../../panels/schemeSettings\";\r\n\r\nconst DrawerBottomPanel: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation();\r\n\r\n    const [state, setState] = useState({\r\n        isOpen: false,\r\n        visiblePanel: BottomDrawerContentType\r\n    });\r\n    const {isOpen, visiblePanel} = state;\r\n\r\n    useEffect(() => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.subscribe(OPEN_BOTTOM_DRAWER_EVENT, contentChangedHandler)\r\n\r\n        return () => {\r\n            eventBus.unsubscribe(OPEN_BOTTOM_DRAWER_EVENT, contentChangedHandler)\r\n        }\r\n    }, [])\r\n\r\n    const contentChangedHandler = (events: any[]) => {\r\n        const content = events[0] as { contentType: BottomDrawerContentType }\r\n        setState({visiblePanel: content.contentType, isOpen: true})\r\n    }\r\n\r\n    const handleDrawerClose = () => {\r\n        setState({...state, isOpen: false})\r\n    }\r\n\r\n    return (\r\n        <Drawer anchor=\"bottom\"\r\n                open={isOpen}\r\n                onClose={handleDrawerClose}>\r\n            <DrawerBottomContainer>\r\n                <DrawerBottomHeader>\r\n                    <div style={{marginRight: \"auto\"}}>\r\n                        <Typography variant=\"h6\">\r\n                            <MobilePanelContainer currentType={BottomDrawerContentType.PointCloudFilters}\r\n                                                  stateType={visiblePanel}>\r\n                                {t('point_cloud_filters')}\r\n                            </MobilePanelContainer>\r\n                            <MobilePanelContainer currentType={BottomDrawerContentType.SchemeSettings}\r\n                                                  stateType={visiblePanel}>\r\n                                {t('scheme_settings')}\r\n                            </MobilePanelContainer>\r\n                        </Typography>\r\n                    </div>\r\n                    <Tooltip title={t('close')}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            <KeyboardArrowDownIcon onClick={handleDrawerClose}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </DrawerBottomHeader>\r\n                <AppDivider/>\r\n                <MobilePanelContainer currentType={BottomDrawerContentType.PointCloudFilters} stateType={visiblePanel}>\r\n                    <PointCloudPanelMobile/>\r\n                </MobilePanelContainer>\r\n                <MobilePanelContainer currentType={BottomDrawerContentType.SchemeSettings} stateType={visiblePanel}>\r\n                    <SchemePanelMobile/>\r\n                </MobilePanelContainer>\r\n            </DrawerBottomContainer>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default withTheme(DrawerBottomPanel)","import React, {useEffect, useState} from \"react\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {HeaderMobilePanelContainer} from \"./style\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport DrawerLeftPanel from \"../drawer/left\";\r\nimport IoC from \"../../../../../infrastructure/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../infrastructure/ioc/ServiceTypes\";\r\nimport {CLOSE_DRAWER_EVENT} from \"../../../../../services/eventBus/EventTypes\";\r\nimport DrawerBottomPanel from \"../drawer/bottom\";\r\nimport {\r\n    AppUserAccountIcon,\r\n    AppMenuIcon,\r\n    AppMoreVertIcon\r\n} from \"../../../shared/icons\";\r\n\r\nconst HeaderMobilePanel: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation();\r\n\r\n    const [state, setState] = useState({\r\n        drawerIsOpen: false\r\n    })\r\n\r\n    useEffect(() => {\r\n            const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n            eventBus.subscribe(CLOSE_DRAWER_EVENT, onCloseDrawerEvent)\r\n            setState({isOpen: props.isOpen})\r\n            return () => {\r\n                eventBus.unsubscribe(CLOSE_DRAWER_EVENT, onCloseDrawerEvent)\r\n            }\r\n        }, [props.isOpen]\r\n    )\r\n\r\n    const onCloseDrawerEvent = (_) => {\r\n        setState({drawerIsOpen: false})\r\n    }\r\n\r\n    const menuButtonClickHandle = () => {\r\n        setState({drawerIsOpen: true})\r\n    }\r\n\r\n    return (\r\n        <HeaderMobilePanelContainer>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar style={{background: props.theme.app.colors.main.darkBlue}}>\r\n                    <Tooltip title={t('menu')}>\r\n                        <IconButton size={\"medium\"}\r\n                                    aria-label=\"open drawer\"\r\n                                    style={{verticalAlign: \"middle\"}}\r\n                                    onClick={menuButtonClickHandle}>\r\n                            <AppMenuIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Typography variant=\"h6\" style={{display: \"block\", flexGrow: 1, marginLeft: 16}}>\r\n                        'Scheme name'\r\n                    </Typography>\r\n                    <Tooltip title={t('actions')}>\r\n                        <IconButton size={\"small\"}\r\n                                    style={{marginLeft: 10}}>\r\n                            <AppMoreVertIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title={t('user_account')}>\r\n                        <IconButton size={\"small\"}\r\n                                    style={{marginLeft: 10}}>\r\n                            <AppUserAccountIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <DrawerLeftPanel isOpen={state.drawerIsOpen}/>\r\n            <DrawerBottomPanel/>\r\n        </HeaderMobilePanelContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(HeaderMobilePanel);","import {Theme} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SnackbarWrapper = styled.div<Theme>`\r\nwidth: 100%;\r\nheight: 100%;\r\n`","import {Theme} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IoC from \"../../../infrastructure/ioc/IoC\";\r\nimport {EventBusService} from \"../../../services/eventBus/EventBusService\";\r\nimport {SHOW_NEW_VERSION_EVENT, SHOW_SNACKBAR_EVENT} from \"../../../services/eventBus/EventTypes\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../infrastructure/ioc/ServiceTypes\";\r\nimport {SnackbarWrapper} from \"./style\";\r\nimport {SnackbarEvent} from \"./code/SnackbarEvent\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst SnackbarContainer: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation()\r\n\r\n    const [snackbarState, setSnackbarState] = useState<{\r\n        open: boolean,\r\n        message: string,\r\n        alertType: string,\r\n        callback?: Function,\r\n        isVersionSnackbar: boolean\r\n    }>({\r\n        open: false,\r\n        alertType: \"success\",\r\n        message: \"\",\r\n        isVersionSnackbar: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.subscribe(SHOW_SNACKBAR_EVENT, snackbarEventHandler)\r\n        eventBus.subscribe(SHOW_NEW_VERSION_EVENT, showNewVersionEventHandler)\r\n\r\n        return () => {\r\n            eventBus.unsubscribe(SHOW_SNACKBAR_EVENT, snackbarEventHandler)\r\n            eventBus.unsubscribe(SHOW_NEW_VERSION_EVENT, showNewVersionEventHandler)\r\n        }\r\n    }, [])\r\n\r\n    const snackbarEventHandler = (events: any[]) => {\r\n        const event: SnackbarEvent = events[0] as SnackbarEvent\r\n        const {message, alertType, callback} = event\r\n        setSnackbarState({\r\n            isVersionSnackbar: false,\r\n            open: true,\r\n            message: message,\r\n            alertType: alertType,\r\n            callback: callback\r\n        });\r\n    }\r\n\r\n    const showNewVersionEventHandler = (events: any[]) => {\r\n        const event: SnackbarEvent = events[0] as SnackbarEvent\r\n        const {message, alertType, callback} = event\r\n        setSnackbarState({\r\n            open: true,\r\n            message: message,\r\n            alertType: alertType,\r\n            callback: callback,\r\n            isVersionSnackbar: true\r\n        });\r\n    }\r\n\r\n    const handleCloseSnackbar = (event: object, reason: string) => {\r\n        if (reason === \"timeout\")\r\n            setSnackbarState({...snackbarState, open: false});\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setSnackbarState({...snackbarState, open: false});\r\n    };\r\n\r\n    const {open, message, callback, alertType, isVersionSnackbar} = snackbarState;\r\n\r\n    const reload = () => {\r\n        location.reload();\r\n        return false;\r\n    }\r\n\r\n    const updateVersionAction = (\r\n        <Button color=\"primary\" size=\"small\" onClick={reload}>\r\n            {t('update')}\r\n        </Button>\r\n    )\r\n    return (\r\n        <SnackbarWrapper>\r\n            <Snackbar\r\n                style={{position: \"absolute\", alignContent: \"center\"}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleCloseSnackbar}\r\n                autoHideDuration={isVersionSnackbar ? null : 5000}>\r\n                <Alert onClose={handleClose}\r\n                       severity={alertType}\r\n                       style={{verticalAlign: \"middle\"}}\r\n                       closeText={t('close')}\r\n                       action={isVersionSnackbar ? updateVersionAction : null}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n        </SnackbarWrapper>\r\n    )\r\n}\r\nexport default withTheme(SnackbarContainer)","export default __webpack_public_path__ + \"static/media/mining.f7ff7ae6.jpg\";","export default __webpack_public_path__ + \"static/media/logo-en.fc80b1ae.png\";","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport bgImage from '../../../assets/images/mining.jpg'\r\nimport logoEn from '../../../assets/images/logo-en.png'\r\n\r\nexport const AuthFormContainer = styled.div<Theme>`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nexport const AuthBackground = styled.div<Theme>`\r\n  background-image: url(${bgImage});\r\n  background-position: left center;\r\n  background-repeat: no-repeat;\r\n  filter: blur(2px);\r\n  z-index: -1;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  background-size: cover;\r\n  left: 0;\r\n  top: 0;\r\n`\r\n\r\nexport const LogoContainer = styled.div<Theme>`\r\n  transform: rotate(90deg);\r\n  background-image: url(${logoEn});\r\n  background-position: left center;\r\n  background-repeat: no-repeat;\r\n  z-index: -1;\r\n  width: 100px;\r\n  height: 300px;\r\n  position: absolute;\r\n  background-size: cover;\r\n  left: 130px;\r\n  top: -70px;\r\n`\r\n\r\nexport const SignInContainer = styled.div<Theme>`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`\r\n\r\n","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport theme from \"../../theme/theme\";\r\nimport {themeColor} from \"../../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../../theme/ThemeColors\";\r\n\r\nexport const SignInFormContainer = styled.div<Theme>`\r\n  max-width: 300px;\r\n  margin: auto auto;\r\n  text-align: center;\r\n  background: #f7f7f7;\r\n  border-radius: 10px;\r\n  padding-top: 10px;\r\n`\r\n\r\nexport const SubmitButton = styled(Button)<Theme>`\r\n  width: 200px;\r\n  margin-top: 24px;\r\n  background: ${themeColor(ThemeColors.darkBlue)};\r\n`","import React, {useRef} from \"react\";\r\nimport {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {SignInFormContainer, SubmitButton} from './style';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {useAppDispatch} from \"../../../../store/store\";\r\nimport {signInAction} from \"../../../../store/auth/authReducer\";\r\n\r\nconst SignInForm: React.FC<{ theme: Theme }> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const loginRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    const handleSignIn = (e: any) => {\r\n        const login = loginRef!.current.value;\r\n        const password = passwordRef!.current.value;\r\n\r\n        try {\r\n            dispatch(signInAction({login, password}));\r\n        }\r\n        finally {\r\n            loginRef!.current.value = null;\r\n            passwordRef!.current.value = null;\r\n            e.preventDefault(); // no refresh\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SignInFormContainer>\r\n            <div style={{height: 250}}>\r\n                <form noValidate no>\r\n                    <TextField\r\n                        inputRef={loginRef}\r\n                        variant=\"standard\"\r\n                        margin=\"normal\"\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        inputRef={passwordRef}\r\n                        variant=\"standard\"\r\n                        margin=\"normal\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <SubmitButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleSignIn}>Sign In</SubmitButton>\r\n                </form>\r\n            </div>\r\n        </SignInFormContainer>\r\n    )\r\n}\r\n\r\nexport default withTheme(SignInForm);","import {withTheme} from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport React from 'react';\r\nimport {AuthBackground, AuthFormContainer, LogoContainer, SignInContainer} from './style';\r\nimport SignInForm from \"./signIn\";\r\n\r\nconst AuthPage: React.FC<{ theme: Theme }> = (props) => {\r\n    return (\r\n        <AuthFormContainer>\r\n            <SignInContainer>\r\n                <SignInForm/>\r\n            </SignInContainer>\r\n            <AuthBackground/>\r\n            <LogoContainer/>\r\n        </AuthFormContainer>\r\n    )\r\n}\r\n\r\nexport default withTheme(AuthPage);\r\n","import React from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Area, AuthContainer, AppMainSection} from \"./styles\";\r\nimport {Hidden, Theme} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HeaderPanel from \"../layout/headerPanel\";\r\nimport InstrumentalPanel from \"../layout/instrumentalPanel\";\r\nimport Scene from \"../layout/scene\";\r\nimport HeaderMobilePanel from \"../layout/mobile/headerPanel\";\r\nimport SnackbarContainer from \"../snackbar\";\r\nimport {AppDividerLight} from \"../shared/style\";\r\nimport Version from \"../version\";\r\nimport AuthPage from \"../auth\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {isAuthenticatedSelector} from \"../../../store/auth/authReducer\";\r\n\r\nconst App: React.FC<{ theme: Theme }> = (_) => {\r\n    const isAuthenticated = useSelector(isAuthenticatedSelector);\r\n\r\n    return (\r\n        <section>\r\n            <SnackbarContainer >\r\n                <AppMainSection isAuthenticated={isAuthenticated}>\r\n                    <Hidden smDown>\r\n                        <div style={{position: \"absolute\", left: 8, top: 8}}>\r\n                            <Version/>\r\n                        </div>\r\n                    </Hidden>\r\n                    <Grid container\r\n                          spacing={0}\r\n                          alignItems=\"stretch\"\r\n                          direction={\"column\"}>\r\n                        <Hidden smDown>\r\n                            <Grid item xs={12}>\r\n                                <HeaderPanel/>\r\n                            </Grid>\r\n                        </Hidden>\r\n                        <Hidden mdUp>\r\n                            <Grid item xs={12}>\r\n                                <HeaderMobilePanel/>\r\n                            </Grid>\r\n                        </Hidden>\r\n                        <Grid item xs={12}>\r\n                            <AppDividerLight/>\r\n                        </Grid>\r\n                        <Hidden smDown>\r\n                            <Grid item xs={12}>\r\n                                <InstrumentalPanel/>\r\n                            </Grid>\r\n                        </Hidden>\r\n                        <Hidden smDown>\r\n                            <Grid item xs={12}>\r\n                                <AppDividerLight/>\r\n                            </Grid>\r\n                        </Hidden>\r\n                        <Grid item xs={12}>\r\n                            <Area>\r\n                                <Scene/>\r\n                            </Area>\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppMainSection>\r\n            </SnackbarContainer>\r\n            <AuthContainer isAuthenticated={isAuthenticated}>\r\n                <AuthPage/>\r\n            </AuthContainer>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default withTheme(App);","import React, {Suspense} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./internationalization/i18n\"; // import i18n (needs to be bundled ;))\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'fontsource-roboto';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\nimport {GlobalStyle} from \"./globalStyle\";\r\nimport Theme from \"./views/components/theme\";\r\nimport App from \"./views/components/app\";\r\nimport {CssBaseline} from \"@material-ui/core\";\r\nimport IoC from \"./infrastructure/ioc/IoC\";\r\nimport {EventBusService} from \"./services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"./infrastructure/ioc/ServiceTypes\";\r\nimport {SnackbarEvent} from \"./views/components/snackbar/code/SnackbarEvent\";\r\nimport i18next from \"i18next\";\r\n// @ts-ignore\r\nimport initWorkboxRefresh from '@loopmode/cra-workbox-refresh';\r\nimport 'pepjs';\r\n\r\n// @ts-ignore\r\nReactDOM.render(\r\n        <Provider store={store}>\r\n            <GlobalStyle/>\r\n            <CssBaseline/>\r\n            <Theme>\r\n                <Suspense fallback=\"\">\r\n                    <App/>\r\n                </Suspense>\r\n            </Theme>\r\n        </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction renderRefreshUI(registration: any, {_}) {\r\n    const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n    const event: SnackbarEvent = {\r\n        message: i18next.t('new_version'),\r\n        alertType: \"info\"\r\n    }\r\n    eventBus.send('SHOW_NEW_VERSION_EVENT', event)\r\n}\r\n\r\nwindow.onerror = function unhandledExceptionErrorHandler(errorMsg, url, lineNumber) {\r\n    return false;\r\n}\r\n\r\nserviceWorker.register({\r\n    onUpdate: (registration: any) => {\r\n        console.log(\"New Version\")\r\n        // @ts-ignore\r\n        return initWorkboxRefresh(registration, {render: renderRefreshUI});\r\n    }\r\n})\r\n"],"sourceRoot":""}